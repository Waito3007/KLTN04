{
  "task_type": {
    "total_errors": 4142,
    "error_rate": 0.8174462206433787,
    "incorrect_samples": [
      {
        "text": "[11.x] Simplify PHP comments (#6316)\n\n* Simplifies comments\r\n\r\n* Apply fixes from StyleCI\r\n\r\n* Removes non used line\r\n\r\n* remove some comments\r\n\r\n---------\r\n\r\nCo-authored-by: StyleCI Bot <bot@styleci.io>\r\nCo-authored-by: Taylor Otwell <taylor@laravel.com>",
        "true_label": [
          0.0,
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "docs: update tutorials and playground to v20 (#61726)\n\nupdate boilerplates to use v20 final\n\nPR Close #61726",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ci] Scope permissions for runtime_commit_artifacts.yml (#32701)",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Directly query for extension version before declaring it missing (#250763)\n\n* directly query for extension version before declaring it missing\n\n* always fire event\n\n* show missingFromGallery even when extension is disabled or not running\n\n* whitespace",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ez] fix typo in comment (#156402)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156402\nApproved by: https://github.com/BoyuanFeng\nghstack dependencies: #156397",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Introduce kOffloadAcceptCHFrameCheck feature flag\n\nI forgot to introduce this in the previous CL:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/6656395\nHowever, it should be there.\n\nBug: 406407746\nChange-Id: I6d651c911de1e5f314496361859091c3d310a543\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6670539\nReviewed-by: Kenichi Ishibashi <bashi@chromium.org>\nCommit-Queue: Yoshisato Yanagisawa <yyanagisawa@chromium.org>\nReviewed-by: Takashi Toyoshima <toyoshim@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1478452}",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat(client): add support for aiohttp",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "chore(internal): updated imports (#1948)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[config] revert #37603 (#37821)\n\nrevert",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[embedded] Resolve a circular dependency problem in SwiftShims when using pico-libc",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fixed incorrect formatting for inline pluralized code references in docs.",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "LiteralUtil: add method to get literal pointers\n\nmany methods use pointers and keep repeating this little widget. I have NOT tried to find and replace all instances of it.\n\nAlso drop const in front of absl::span that seem redundant in RunAndCompareNoHloPasses.\n\nPiperOrigin-RevId: 770674448",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ASTGen] Implement bridging for `using` declaration",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "use guard_or_false in checkInBoundsForStorage (#155874)\n\nthis was added in https://github.com/pytorch/pytorch/pull/147354, the comment already justify guard_or_false\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155874\nApproved by: https://github.com/bobrenjc93",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "release: 1.54.4",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[release-notes] Add release-notes for 9.0.2 (#128319)",
        "true_label": [
          0.0,
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "final renaming for function results",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "ENH: set __module__ for Dtype and Index classes (#59909)\n\nCo-authored-by: Amir <acb@REVWKS049.d2sim7.loc>\r\nCo-authored-by: Joris Van den Bossche <jorisvandenbossche@gmail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "ephemeral: remove write only paths\n\nwe might need them later on, but it will be easier to find the right place and abstraction when the need to use them arises",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[compiler] Validate against mutable functions being frozen\n\nThis revisits a validation I built a while ago, trying to make it more strict this time to ensure that it's high-signal.\n\nWe detect function expressions which are *known* mutable \u2014 they definitely can modify a variable defined outside of the function expression itself (modulo control flow). This uses types to look for known Store and Mutate effects only, and disregards mutations of effects. Any such function passed to a location with a Freeze effect is reported as a validation error.\n\nThis is behind a flag and disabled by default. If folks agree this makes sense to revisit, i'll test out internally and we can consider enabling by default.\n\nghstack-source-id: 075a731444ce95e52dbd5ea3be85c16d428927f5\nPull Request resolved: https://github.com/facebook/react/pull/33079",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix PushQueriesIT.testLike() fails (#129647)\n\nFix an issue where PushQueriesIT.testLike() fails if we randomly generate the empty string as a test value",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat(client): add support for streaming raw responses (#1072)\n\nAs an alternative to `with_raw_response` we now provide\n`with_streaming_response` as well. When using these methods you\nwill have to use a context manager to ensure that the response is\nalways cleaned up.",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Clarify error message to ensure min 28x28 image supplied for Qwen 2.5 VL (#37264)\n\nfix: clarify error message for min 28x28 images\n\nCo-authored-by: Pavel Iakubovskii <qubvel@gmail.com>",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[invoke_subgraph] Use eager input vals to constrain input strides (#155291)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155291\nApproved by: https://github.com/ezyang, https://github.com/zou3519",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Docs] Convert to markdown: torch.compiler_transformations.rst, torch.compiler.config.rst (#155347)\n\nPart of changes #155040 (parent PR #155120)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155347\nApproved by: https://github.com/svekars",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC improve quantile regression example (#31008)",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix: add missing background colour pair (#249675)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[flax/mistral] support sliding_window: null in config (#37402)\n\nflax/mistral: Allow sliding_window to be set to none",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Revert \"[flex attention][triton pin] triton_helpers shim for TMA apis (#154858)\" (#155640)\n\nThis reverts commit ea7b233015ff00098df687884be4e2efbf7a55fa.\n\nIt fails internal tests in fbcode, but they weren't running so we didn't get signal\n\nReverting w/ a PR/diff because the PR has been landed for ~1 week - too old to revert directly from internal.\n\nDifferential Revision: [D76380887](https://our.internmc.facebook.com/intern/diff/D76380887)\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155640\nApproved by: https://github.com/nmacchioni, https://github.com/danzimm",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "add sound for `chatUserActionRequired`, add `announcement` setting (#248952)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Switch wtf/pod_{red_black_tree,tree_test_helpers}*.* to blink namespace\n\n* As these files are being modified, take the opportunity to rename\n  PODRedBlackTree to PodRedBlackTree, aligning with the Google C++\n  style guide.\n\nThis CL has no behavior changes.\n\nBug: 422768753\nChange-Id: Id8d9162c9eeaf3ba96cd4b3bb2ff9c9ca7b16edf\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6665278\nAuto-Submit: Kent Tamura <tkent@chromium.org>\nCommit-Queue: Fredrik S\u00f6derquist <fs@opera.com>\nReviewed-by: Fredrik S\u00f6derquist <fs@opera.com>\nCr-Commit-Position: refs/heads/main@{#1477772}",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "ephermal: allow setting var and var files for apply",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "refactor(devtools): introduce responsive-split directive (#61204)\n\nThe `ResponsiveSplitDirective` adds responsive behavior to the `as-split` component by a provided width to height ratio.\n\nPR Close #61204",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "String dtype: use ObjectEngine for indexing for now correctness over performance (#60329)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Adds ThreadPool to autotuner.\n\nThis is needed to parallelize the compilation.\n\nPiperOrigin-RevId: 775629141",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "MNT Revert robots.txt addition (#30687)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Reintroduces the ability to load IOPDDL json files (at least internally).\n\nPiperOrigin-RevId: 766413274",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[BE][PYFMT] migrate PYFMT for `{torch,test}/{nn,optim}/**` to `ruff format` (#144548)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/144548\nApproved by: https://github.com/ezyang",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix donut backtracking (#37788)\n\n* Fix donut backtracking\n\n* make fixup\n\n* Trigger tests\n\n* Remove old line\n\n* Update code\n\n* Fix reversed slice",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge branch 'main' into patch-1",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.xpack.esql.session.IndexResolverFieldNamesTests testForkFieldsWithKeepAfterFork #128271",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Entitlements] Add missing NIO async network instrumentation (#128582)\n\nThis PR adds some additional instrumentation to ensure we capture more cases in which we use async network usage via channels and `select`",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.xpack.esql.action.CrossClusterQueryWithPartialResultsIT testFailToStartRequestOnRemoteCluster #128545",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Semantic_text match_all with Highlighter (#128702)\n\n* initial implementation for match_All\n\n* reformat\n\n* [CI] Auto commit changes from spotless\n\n* Excluding matchAllintercepter\n\n* Adding matchAllDocs support for vector fields\n\n* [CI] Auto commit changes from spotless\n\n* Remove previous implementation\n\n* Adding yaml tests for match_all\n\n* fixed yaml tests\n\n* Update docs/changelog/128702.yaml\n\n* Update changelog\n\n* changelog - update summary\n\n* Fix wrong inference names for the yaml tests\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(ext/fetch): update h2 to fix sending a PROTOCOL_ERROR instead of REFUSED_STREAM when receiving oversized headers (#27531)\n\nFixes #26490\r\n\r\nRelated PR in h2 https://github.com/hyperium/h2/pull/792  \r\nRelated release of h2 https://github.com/hyperium/h2/releases/tag/v0.4.6",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.upgrades.UpgradeClusterClientYamlTestSuiteIT test {p0=upgraded_cluster/70_ilm/Test Lifecycle Still There And Indices Are Still Managed} #129097",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC removed reference to closed issue (#30499)",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix `test_compare_unprocessed_logit_scores` (#39053)\n\nfix\n\nCo-authored-by: ydshieh <ydshieh@users.noreply.github.com>",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix bug in prefill_chunk_size that ignores disable_compile flag (#38067)\n\nFix bug in prefill_chunk_size implementation that ignores disable_compile flag",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Parse: Address an llvm_unreachable that is actually reachable",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix Quark quantization config (#37578)\n\nfix",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "loop: move lo_set_size() out of queue freeze\n\nIt isn't necessary to freeze queue for updating disk size given submit_bio()\ndoesn't grab queue usage counter for checking eod.\n\nAlso many driver won't freeze queue for calling set_capacity_and_notify().\n\nMove lo_set_size() out of queue freeze for fixing many lockdep warning\nreport.\n\nLink: https://lore.kernel.org/linux-block/67ea99e0.050a0220.3c3d88.0042.GAE@google.com/\nReported-by: syzbot+9dd7dbb1a4b915dee638@syzkaller.appspotmail.com\nSigned-off-by: Ming Lei <ming.lei@redhat.com>\nLink: https://lore.kernel.org/r/20250611084938.108829-1-ming.lei@redhat.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(lsp): use markup content variant for hover response (#28987)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Do not require typing_extensions with Python 3.8+ (#154)\n\ntyping_extensions are only used for Literal which is available in the\r\nstandard library since Python 3.8",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[CS] Remove UnresolvedType ranking logic\n\nWe should never end up here, we should have placeholder bindings\ninstead for holes.",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Revert \"[dynamo] fix segfault due to dangling CacheEntry backend pointer (#156527)\"\n\nThis reverts commit 5ad2bee2c8a7defd2580bb138145a49c37146fcc.\n\nReverted https://github.com/pytorch/pytorch/pull/156527 on behalf of https://github.com/Camyll due to failing test assertions ([comment](https://github.com/pytorch/pytorch/pull/156527#issuecomment-3009231797))",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "vendor: go.etcd.io/bbolt v1.4.0\n\nfull diff: https://github.com/etcd-io/bbolt/compare/v1.3.11...v1.4.0\n\nChangelog: https://github.com/etcd-io/bbolt/blob/main/CHANGELOG/CHANGELOG-1.4.md\n\nSigned-off-by: Pawe\u0142 Gronowski <pawel.gronowski@docker.com>",
        "true_label": [
          0.0,
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "xterm@5.6.0-beta.110\n\nFixes #190629",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "chore(internal): cast type in mocked test (#1112)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix & improve reporting of cyclic dependencies",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[test] UTF8Span from inline-stored Substring instances",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "update go-cty to latest patch release (#36376)\n\n* update go-cty to latest patch release\r\n\r\n* also fixes other bug",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Migrate DevtoolsInterceptionWithAuthProxyTest to EmbeddedTestServer.\n\nIt was using a SpawnedTestServer acting as an auth proxy.\nSpawnedTestServer is deprecated for a variety of reasons, so this CL\nmakes it use EmbeddedTestServer configured to give proxy auth challenges\ninstead. The EmbeddedTestServer doesn't actually proxy requests,\ninstead handling them directly, but there's no need to it to really\nproxy anything for this test.\n\nConveniently, this also lets us enable the test on Fuchsia. It was\ndisabled there because SpawnedTestServer::TYPE_BASIC_AUTH_PROXY does\nnot work on Fuchsia.\n\nBug: 40242862\nChange-Id: I1be23a408e8f74bc4ba02f159214dd8b15fa5e25\nFixed: 40697469\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6648967\nCommit-Queue: mmenke <mmenke@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1477998}",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #92832 from wangw-1991:master\n\nPiperOrigin-RevId: 764353910",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[9.x] Revert \"Enable madvise by default for all builds (#110159)\" (#127921)\n\n9.x port of: Revert \"Enable madvise by default for all builds (#110159)\" #126308\n\nThis change did not apply cleanly. In fact this is not strictly a revert, since the change was never actually in 9.x post the Lucene 10 upgrade. However, the semantics of the change still apply - avoid RANDOM everywhere. Even though in 9.x we do set -Dorg.apache.lucene.store.defaultReadAdvice=normal, it is not enough to avoid RANDOM when random is explicitly requested by code.",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[phi-4] use mel filters from audio utils (#36966)\n\n* use mel_filter_bank from audio utils\n\n* Apply style fixes\n\n---------\n\nCo-authored-by: Arthur <48595927+ArthurZucker@users.noreply.github.com>\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[pre-commit.ci] pre-commit autoupdate (#61536)\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.11.8 \u2192 v0.11.12](https://github.com/astral-sh/ruff-pre-commit/compare/v0.11.8...v0.11.12)\n- [github.com/asottile/pyupgrade: v3.19.1 \u2192 v3.20.0](https://github.com/asottile/pyupgrade/compare/v3.19.1...v3.20.0)\n- [github.com/pre-commit/mirrors-clang-format: v20.1.3 \u2192 v20.1.5](https://github.com/pre-commit/mirrors-clang-format/compare/v20.1.3...v20.1.5)\n- [github.com/trim21/pre-commit-mirror-meson: v1.8.0 \u2192 v1.8.1](https://github.com/trim21/pre-commit-mirror-meson/compare/v1.8.0...v1.8.1)\n\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          1,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix ThreadPoolMergeSchedulerTests testSchedulerCloseWaitsForRunningMerge (#130078)\n\nThis fixes a race condition in the test scenario, between the merge\nscheduler closing and the merge task being scheduled to run. The test\nscenario expects that the merge task runs when the scheduler is closed.\nIf the merge scheduler is closed before the merge task is scheduled, the\nmerge task will instead be scheduled as aborted.\n\nFixes: https://github.com/elastic/elasticsearch/issues/125236",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[xla:benchmarks] Use explicit setting for concurrency constraints in presubmit and postsubmit workflows\n\nPiperOrigin-RevId: 766872337",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "ZJIT: Fix rest parameter not parsed into a BB parameter\n\nUse total parameter size instead of lead parameter size when parsing\niseq into hir. Also, copy over IntoUsize for compile-time checked\nu32->usize cast.",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "terraform test: stop transforming the config under test with new variables (#37152)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Revert change that breaks on Torch 2.1 (#37531)\n\n* Revert change that breaks on Torch 2.1\n\n* Add TODO\n\n* Trigger tests\n\n* Trigger tests",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "chore(internal): temporary commit (#2121)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[A11yPerformance] Add Finch config for AXBitset\n\nChange-Id: I5dec29bfe45accd9fc1c050b26deb2b442fce919\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6647651\nReviewed-by: Aaron Leventhal <aleventhal@chromium.org>\nCommit-Queue: Jocelyn Tran <jocelyntran@google.com>\nReviewed-by: Kevin Ellis <kevers@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1477314}",
        "true_label": [
          0.0,
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Updated aya_vision.md (#38749)\n\n* Update aya_vision.md\n\n* Suggested changes made to aya_vision.md\n\n* Quantization Example added - aya_vision.md\n\n* Polished - aya_vision.md\n\n* Update aya_vision.md\n\n---------\n\nCo-authored-by: Steven Liu <59462357+stevhliu@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(api): add missing file rank enum + more metadata (#2164)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC: fix SA01, ES01 for pandas.api.types.is_float_dtype (#59861)",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(parsing): don't validate input tools in the asynchronous `.parse()` method",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "selftests: drv-net: tso: fix the GRE device name\n\nThe device type for IPv4 GRE is \"gre\" not \"ipgre\",\nunlike for IPv6 which uses \"ip6gre\".\n\nNot sure how I missed this when writing the test, perhaps\nbecause all HW I have access to is on an IPv6-only network.\n\nFixes: 0d0f4174f6c8 (\"selftests: drv-net: add a simple TSO test\")\nReviewed-by: Simon Horman <horms@kernel.org>\nReviewed-by: Willem de Bruijn <willemb@google.com>\nLink: https://patch.msgid.link/20250604012031.891242-1-kuba@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Passing in project-id when creating s3 client (#129301)\n\nEnables creating different s3 clients for different projects\n\nRelates: #127631",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Update bundled gems list as of 2025-06-05",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[BE] fix typos in torchgen/ (#156083)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156083\nApproved by: https://github.com/jingsh\nghstack dependencies: #156079, #156082",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "TST fix estimator checks when set_output is called on the instance (#29869)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[9.x] Allow for composer install on Laravel 9 (#5453)\n\n* Allow for composer install on Laravel 9\r\n\r\n* Update composer.json\r\n\r\n* Update composer.json\r\n\r\n* Update composer.json\r\n\r\nCo-authored-by: Taylor Otwell <taylor@laravel.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC: Fix pandas.Series.dt seconds, nanoseconds GL08, SA01 (#59582)\n\n* fix pandas.Series.dt.freq\r\n\r\n* fix seconds, nanoseconds, microseconds\r\n\r\n* remove fixed objects from code_checks.sh\r\n\r\n* Remove Timedelta Index checks\r\n\r\n* fix freq example\r\n\r\n* remove freq\r\n\r\n* bring back microseconds",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132349 from p0lyn0mial/upstream-rm-initial-events-list-blueprint\n\napimachinery/meta/types.go: remove InitialEventsListBlueprintAnnotationKey",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat: make `setImmediate` and `clearImmediate` as globals (#29877)\n\nFollow up to https://github.com/denoland/deno/pull/29323 and\nhttps://github.com/denoland/deno/pull/29416.\n\nThis effort is to reduce a number of different globals available to user\ncode and npm dependencies. Also improves performance when these globals\nare used.\nThis brings the number of \"managed globals\" down to 6. \n\nTowards https://github.com/denoland/deno/issues/29703",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "perf: remote symbolicate stack traces (#28470)\n\nFixes #28136 \nCloses #28415\n\nPublish symcache to GCS and generate trace URL during panic.\n\n```\n============================================================\nDeno has panicked. This is a bug in Deno. Please report this\nat https://github.com/denoland/deno/issues/new.\nIf you can reliably reproduce this panic, include the\nreproduction steps and re-run with the RUST_BACKTRACE=1 env\nvar set and include the backtrace in your report.\n\nPlatform: windows x86_64\nVersion: 2.2.5\nArgs: [\"C:\\Users\\divy\\.deno\\bin\\deno.exe\"]\n\nView stack trace at:\nhttps://panic.deno.com/v2.2.5/aarch64-apple-darwin/gszD49_B4utrqB4vrrqBozirqB49prqBwjkwqBw_jBg31Cw5tCg5sDoo3pqB41sDgkkB\n```\n\n## Design\n\n<img\nsrc=https://github.com/user-attachments/assets/396d53cd-1fe7-4d88-9ecd-ea7b74a9a1ed\nheight=500>\n\nExample:\n`https://panic.deno.com/v2.2.3/aarch64-apple-darwin/g4couawkboxb4tbg9oHwqbw6a`\n\nStack walking and symbolicate code is at\nhttps://github.com/denoland/panic/",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC: fix ES01 for pandas.api.types.infer_dtype (#60904)",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "integration-cli: replace uses of errdefs package\n\nSigned-off-by: Matthieu MOREL <matthieu.morel35@gmail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "chore(internal): enable ruff type checking misuse lint rule (#1106)\n\nThis catches the case where a typing import is used at runtime",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Only check that the import stub is non-null when importing by ID (#36990)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "make syncdeps",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll FreeType from 36ddd0cba1a8 to 43940e4cb8fa (1 revision)\n\nhttps://chromium.googlesource.com/chromium/src/third_party/freetype2.git/+log/36ddd0cba1a8..43940e4cb8fa\n\n2025-06-23 apodtele@gmail.com [truetype] Restore non-persistent CVT and storage.\r\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/freetype-chromium\nPlease CC bungeman@google.com,drott@google.com,thestig@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_msan_rel_ng;luci.chromium.try:linux-blink-rel;luci.chromium.try:mac12.0-blink-rel;luci.chromium.try:win10.20h2-blink-rel\nTbr: bungeman@google.com,drott@google.com,thestig@google.com\nChange-Id: I0b98de0a7c098acf7d013822c8d1e2c0441ae6e9\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6661862\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: Ben Wagner <bungeman@google.com>\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nReviewed-by: Ben Wagner <bungeman@google.com>\nCr-Commit-Position: refs/heads/main@{#1477354}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "from_pretrained should handle xpu case (#37382)\n\n* from_pretrained should handle xpu case\n\nSigned-off-by: Wang, Yi A <yi.a.wang@intel.com>\n\n* fmt\n\nSigned-off-by: Wang, Yi A <yi.a.wang@intel.com>\n\n---------\n\nSigned-off-by: Wang, Yi A <yi.a.wang@intel.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "MNT Use tmp_path fixture for test_check_memory (#31453)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Update README.md with fine-tuning examples (#583)\n\n* Update README.md with fine-tuning examples\r\n\r\n* Update README.md",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "client/service: use containerd errdefs checks\n\nSigned-off-by: Pawe\u0142 Gronowski <pawel.gronowski@docker.com>",
        "true_label": [
          0.0,
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "build: avoid export internal renames (#60739)\n\nThere is no need to minify internal names as these are minified by the consuming app\n\nPR Close #60739",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Adding TFVision's prominent Object Detection Models concised overview document to the TF Vision library.\n\nPiperOrigin-RevId: 741414573",
        "true_label": [
          0.0,
          0.0,
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      }
    ]
  },
  "complexity": {
    "total_errors": 822,
    "error_rate": 0.16222616933096506,
    "incorrect_samples": [
      {
        "text": "docs: update tutorials and playground to v20 (#61726)\n\nupdate boilerplates to use v20 final\n\nPR Close #61726",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "chore(internal): updated imports (#1948)",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "chore(internal): formatting (#1311)",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          1,
          0
        ]
      },
      {
        "text": "Roll WebRTC from fe0a0c784efa to edbf76f93f4a (15 revisions)\n\nhttps://webrtc.googlesource.com/src.git/+log/fe0a0c784efa..edbf76f93f4a\n\n2025-06-25 webrtc-version-updater@webrtc-ci.iam.gserviceaccount.com Update WebRTC code version (2025-06-25T04:06:28).\n2025-06-24 phancke@meta.com av1: (partially) follow spec fmtp parameter comparisons\n2025-06-24 chromium-webrtc-autoroll@webrtc-ci.iam.gserviceaccount.com Roll chromium_revision ab4881aeb4..ff8c208486 (1478047:1478216)\n2025-06-24 phancke@meta.com IWYU modules/audio_coding\n2025-06-24 phancke@meta.com Do not restart SCTP transport on DTLS restart\n2025-06-24 phancke@meta.com pqc: add missing GetName implementation\n2025-06-24 phancke@meta.com IWYU net/ again\n2025-06-24 mbonadei@webrtc.org Revert \"Change SetLocalContent / SetRemoteContent to update header extensions\"\n2025-06-24 chromium-webrtc-autoroll@webrtc-ci.iam.gserviceaccount.com Roll chromium_revision c96a5de562..ab4881aeb4 (1477697:1478047)\n2025-06-24 mbonadei@webrtc.org Revert \"Enable scenario test for L4S\"\n2025-06-24 phancke@meta.com IWYU audio/\n2025-06-24 phancke@meta.com Use peerconnection field trials instead of context in sdp O/A\n2025-06-24 jakobi@webrtc.org Add function to create an audio decoder ahead of time.\n2025-06-24 mbonadei@webrtc.org Revert \"Remove rtp_header_extensions_set()\"\n2025-06-24 perkj@webrtc.org Deprecate TargetTransferRate.stable_target_rate from GoogCC\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/webrtc-chromium-autoroll\nPlease CC webrtc-chromium-sheriffs-robots@google.com,webrtc-infra@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in WebRTC: https://bugs.chromium.org/p/webrtc/issues/entry\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nBug: None\nTbr: webrtc-chromium-sheriffs-robots@google.com\nChange-Id: I21764316e51430db2c2d74642dd4a82c67c4263c\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6670927\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1478428}",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Fix donut backtracking (#37788)\n\n* Fix donut backtracking\n\n* make fixup\n\n* Trigger tests\n\n* Remove old line\n\n* Update code\n\n* Fix reversed slice",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Semantic_text match_all with Highlighter (#128702)\n\n* initial implementation for match_All\n\n* reformat\n\n* [CI] Auto commit changes from spotless\n\n* Excluding matchAllintercepter\n\n* Adding matchAllDocs support for vector fields\n\n* [CI] Auto commit changes from spotless\n\n* Remove previous implementation\n\n* Adding yaml tests for match_all\n\n* fixed yaml tests\n\n* Update docs/changelog/128702.yaml\n\n* Update changelog\n\n* changelog - update summary\n\n* Fix wrong inference names for the yaml tests\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "fix(ext/fetch): update h2 to fix sending a PROTOCOL_ERROR instead of REFUSED_STREAM when receiving oversized headers (#27531)\n\nFixes #26490\r\n\r\nRelated PR in h2 https://github.com/hyperium/h2/pull/792  \r\nRelated release of h2 https://github.com/hyperium/h2/releases/tag/v0.4.6",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "loop: move lo_set_size() out of queue freeze\n\nIt isn't necessary to freeze queue for updating disk size given submit_bio()\ndoesn't grab queue usage counter for checking eod.\n\nAlso many driver won't freeze queue for calling set_capacity_and_notify().\n\nMove lo_set_size() out of queue freeze for fixing many lockdep warning\nreport.\n\nLink: https://lore.kernel.org/linux-block/67ea99e0.050a0220.3c3d88.0042.GAE@google.com/\nReported-by: syzbot+9dd7dbb1a4b915dee638@syzkaller.appspotmail.com\nSigned-off-by: Ming Lei <ming.lei@redhat.com>\nLink: https://lore.kernel.org/r/20250611084938.108829-1-ming.lei@redhat.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "update go-cty to latest patch release (#36376)\n\n* update go-cty to latest patch release\r\n\r\n* also fixes other bug",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "chore(internal): temporary commit (#2121)",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          1,
          0
        ]
      },
      {
        "text": "Updated aya_vision.md (#38749)\n\n* Update aya_vision.md\n\n* Suggested changes made to aya_vision.md\n\n* Quantization Example added - aya_vision.md\n\n* Polished - aya_vision.md\n\n* Update aya_vision.md\n\n---------\n\nCo-authored-by: Steven Liu <59462357+stevhliu@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update bundled gems list as of 2025-06-05",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "[9.x] Allow for composer install on Laravel 9 (#5453)\n\n* Allow for composer install on Laravel 9\r\n\r\n* Update composer.json\r\n\r\n* Update composer.json\r\n\r\n* Update composer.json\r\n\r\nCo-authored-by: Taylor Otwell <taylor@laravel.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "note ses-v2",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          1,
          0
        ]
      },
      {
        "text": "Merge pull request #132209 from dims/update-github.com/spf13/cobra-v1.9.1eksctl\n\nupdate github.com/spf13/cobra v1.9.1",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update README.md with fine-tuning examples (#583)\n\n* Update README.md with fine-tuning examples\r\n\r\n* Update README.md",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Result of tsccr-helper -log-level=info gha update -latest .github/ (#35938)\n\nCo-authored-by: hashicorp-tsccr[bot] <hashicorp-tsccr[bot]@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "\ud83d\udd34 [VLM] modeling updates (#38317)\n\n* updates\n\n* fixup\n\n* fix tests\n\n* fix test\n\n* fix\n\n* let it be here for now, till monday\n\n* two more fixes\n\n* persimmon\n\n* fixup\n\n* fix\n\n* fixup\n\n* make sure fuyu runs now that LM has new attn API\n\n* fixup + tests\n\n* qwen vl uses new mask interface as well\n\n* qwen image features format\n\n* update\n\n* remove image_sizes\n\n* address comments\n\n* i am dumb...",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "fix: vsock nits (#28851)",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          1,
          0
        ]
      },
      {
        "text": "FIX update debian 32 bit CI config to avoid a SIMD related bug in numpy 1.24.2 on some GitHub Actions CI workers (#29771)\n\nCo-authored-by: Lo\u00efc Est\u00e8ve <loic.esteve@ymail.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132442 from ylink-lfs/ci/test_image_update\n\nci: update test image base: nginx, nginx-new",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Some fixes",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          1,
          0
        ]
      },
      {
        "text": "Refactor ILM `ExecuteStepsUpdateTask` (#128915)\n\nThis method was quite large with multiple nested ifs/loops, so it could\nuse some refactoring for readability.\n\nThe only change in behavior is that we now catch exceptions at a\nslightly higher level. There are no other changes in behavior.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132194 from alvaroaleman/local0dev\n\nAdd an interface that all apply configurations implement",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          1,
          0
        ]
      },
      {
        "text": "Fix: SSE Stream parser expects additional space after colon \"data:\" (#559)\n\n* Update api_requestor.py\r\n\r\n* fix: SSE event for api_requestor.py",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "ci: disable updates for `@angular/build-tooling` (#61294)\n\nThis package requires some work to be updated.\n\nPR Close #61294",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update tests for StructuredAuthenticationConfiguration feature gate GA\n\nSigned-off-by: Anish Ramasekar <anish.ramasekar@gmail.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Granting `kibana_system` reserved role access to \"all\" privileges to `.adhoc.alerts*` and `.internal.adhoc.alerts*` indices (#127321)\n\n* Granting `kibana_system` reserved role access to \"all\" privileges to `.adhoc.alerts*` and `.internal.adhoc.alerts*` indices\n\n* Update docs/changelog/127321.yaml\n\n* [CI] Auto commit changes from spotless\n\n* Replace `\"all\"` with the specific privileges for the `kibana_system` role\n\n* Fix tests\n\n* Fix CI\n\n* Updated privileges\n\n* Updated privileges\n\nAdd `\"maintenance\"` to allow `refresh=true` option on bulk API call.\n\n* Remove redundant code\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update Throbber start/stop logic to fix race condition.\n\nThis cl fixes a race condition where the Throbber's animation timer\ncould fire after the object was destroyed, which sometimes happened when\nthe throbber was still active in a dialog during page reloads. This\nchange replaces it with a WeakPtr to ensure the animation callback is\nsafely invalidated when the Throbber is destroyed.\n\nBug b:425927824\n\nChange-Id: Iaa1aa8f835bf916f78cd1966b518b3193bbdf53b\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6652302\nCommit-Queue: Michelle Abreo <michelleabreo@google.com>\nReviewed-by: Dana Fried <dfried@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1476787}",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "TST (string dtype): avoid explicit object dtype Index in fixture data (#60217)\n\n* TST (string dtype): avoid explicit object dtype Index in fixture data\r\n\r\n* test updates",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "BUG: Improve ImportError message to suggest importing dependencies directly for full error details (#61084)\n\n* Add hint to display full message for missing dependencies in pandas/init.py\n\n* ENH: Improve import error handling to preserve original traceback\n\n* TST: refactor testing for hard dependency package\n\n* Update pandas/__init__.py\n\nCo-authored-by: Matthew Roeschke <10647082+mroeschke@users.noreply.github.com>\n\n* Refactor prevent statement too long\n\n* ENH: change unittest to verify ImportError is raised when required dependencies are missing\n\n* TST: Use pytest.raises match parameter in test_missing_required_dependency\n\n---------\n\nCo-authored-by: Matthew Roeschke <10647082+mroeschke@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update spelling for representing lifetime dependencies to @_lifetime",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Align meta deducing for fft_r2c with fft_r2c_mkl on XPU (#156048)\n\nThere is a memory layout mismatching between `fft_r2c` XPU and Inductor meta deducing.\nOriginal `fft_r2c` Inductor meta deducing for XPU backend is aligned with CPU (fallback). This PR is to correct the Inductor meta deducing and update the torch-xpu-ops commit to [intel/torch-xpu-ops@`3a9419c`](https://github.com/intel/torch-xpu-ops/commit/3a9419c8bb6a98dd3e3cd473c36691fb4abeae40).\nThe XPU implementation first performs the R2C transform on the last dimension, followed by iterative C2C transforms on the remaining dimensions.\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156048\nApproved by: https://github.com/guangyey, https://github.com/etaf, https://github.com/jansel",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update IsInPlaceOperation() to return true for all potential in-place ops (NFC).\n\nCurrently, the real reference is GetInPlaceInputOutputPairs() for whether an op\nis in-place. For most cases, this is also the method that should be called to\nget a real idea whether some buffer will be reused by a user instruction.\nRename IsInPlaceOperation() to IsPotentialInPlaceOperation() to make it clear\nthat this is not a definite check.\nThis is a non-functional change because the only caller of IsInPlaceOperation()\noutside of hlo_dataflow_analysis currently does not actually use this result.\n\nAlso fix some ClangTidy warnings in hlo_dataflow_analysis.cc\n\nPiperOrigin-RevId: 767489058",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "chore[DevTools/Tree]: don't pre-select root element and remove unused code (#32015)\n\nIn this PR:\r\n1. Removed unused code in `Tree.js`\r\n2. Removed logic for pre-selecting first element in the tree by default.\r\nThis is a bit clowny, because it steals focus and resets scroll, when\r\nuser attempts to expand / collapse some subtree.\r\n3. Updated comments around\r\nhttps://github.com/facebook/react/commit/1c381c588aed1ed6814f1be04fbe42cd069ce174.\r\n\r\nTo expand on 3-rd point, for someone who might be reading this in the\r\nfuture:\r\nWe can't guarantee focus of RDT browser extension panels, because they\r\nare hosted in an `iframe`. Attempting to fire any events won't have any\r\nresult, user action with the corresponding `iframe` is required in order\r\nfor this `iframe` to obtain focus.\r\n\r\nThe only reason why built-in Elements panel in Chrome works correctly is\r\nbecause it is supported natively somewhere in Chrome / Chrome DevTools.\r\nAlso, when you select an element on the application page, Chrome will\r\nmake sure that Elements panel opened, which technically guarantees focus\r\ninside DevTools window and Elements panel subview.\r\n\r\nAs of today, we can't navigate user to third-party extensions panels,\r\nthere is no API for this, hence no ability to guarantee focused RDT\r\npanels.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Bump micromatch from 4.0.5 to 4.0.8 in /compiler (#31186)\n\nBumps [micromatch](https://github.com/micromatch/micromatch) from 4.0.5\r\nto 4.0.8.\r\n<details>\r\n<summary>Release notes</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/micromatch/micromatch/releases\">micromatch's\r\nreleases</a>.</em></p>\r\n<blockquote>\r\n<h2>4.0.8</h2>\r\n<p>Ultimate release that fixes both CVE-2024-4067 and CVE-2024-4068. We\r\nconsider the issues low-priority, so even if you see automated scanners\r\nsaying otherwise, don't be scared.</p>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Changelog</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/micromatch/micromatch/blob/master/CHANGELOG.md\">micromatch's\r\nchangelog</a>.</em></p>\r\n<blockquote>\r\n<h2>[4.0.8] - 2024-08-22</h2>\r\n<ul>\r\n<li>backported CVE-2024-4067 fix (from v4.0.6) over to 4.x branch</li>\r\n</ul>\r\n<h2>[4.0.7] - 2024-05-22</h2>\r\n<ul>\r\n<li>this is basically v4.0.5, with some README updates</li>\r\n<li><strong>it is vulnerable to CVE-2024-4067</strong></li>\r\n<li>Updated braces to v3.0.3 to avoid CVE-2024-4068</li>\r\n<li>does NOT break API compatibility</li>\r\n</ul>\r\n<h2>[4.0.6] - 2024-05-21</h2>\r\n<ul>\r\n<li>Added <code>hasBraces</code> to check if a pattern contains\r\nbraces.</li>\r\n<li>Fixes CVE-2024-4067</li>\r\n<li><strong>BREAKS API COMPATIBILITY</strong></li>\r\n<li>Should be labeled as a major release, but it's not.</li>\r\n</ul>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/8bd704ec0d9894693d35da425d827819916be920\"><code>8bd704e</code></a>\r\n4.0.8</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/a0e68416a44da10f3e4e30845ab95af4fd286d5a\"><code>a0e6841</code></a>\r\nrun verb to generate README documentation</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/4ec288484f6e8cccf597ad3d43529c31d0f7a02a\"><code>4ec2884</code></a>\r\nMerge branch 'v4' into hauserkristof-feature/v4.0.8</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/03aa8052171e878897eee5d7bb2ae0ae83ec2ade\"><code>03aa805</code></a>\r\nMerge pull request <a\r\nhref=\"https://redirect.github.com/micromatch/micromatch/issues/266\">#266</a>\r\nfrom hauserkristof/feature/v4.0.8</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/814f5f70efcd100ca9d29198867812a3d6ab91a8\"><code>814f5f7</code></a>\r\nlint</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/67fcce6a1077c2faf5ad0c5f998fa70202cc5dae\"><code>67fcce6</code></a>\r\nfix: CHANGELOG about braces &amp; CVE-2024-4068, v4.0.5</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/113f2e3fa7cb30b429eda7c4c38475a8e8ba1b30\"><code>113f2e3</code></a>\r\nfix: CVE numbers in CHANGELOG</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/d9dbd9a266686f44afb38da26fe016f96d1ec04f\"><code>d9dbd9a</code></a>\r\nfeat: updated CHANGELOG</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/2ab13157f416679f54e3a32b1425e184bd16749e\"><code>2ab1315</code></a>\r\nfix: use actions/setup-node@v4</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/1406ea38f3e24b29f4d4f46908d5cffcb3e6c4ce\"><code>1406ea3</code></a>\r\nfeat: rework test to work on macos with node 10,12 and 14</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/micromatch/micromatch/compare/4.0.5...4.0.8\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=micromatch&package-manager=npm_and_yarn&previous-version=4.0.5&new-version=4.0.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Bump versions after 9.0.2 release",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          1,
          0
        ]
      },
      {
        "text": "docs: update examples for i18n tokens (#60938)\n\nPR Close #60938",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Fix `aya_vision` test (#38674)\n\n* fix 1: load_in_4bit=True,\n\n* fix 2: decorateor\n\n* fixfix 2: breakpoint\n\n* fixfix 3: update\n\n* fixfix 4: fast\n\n* fixfix 5: cond\n\n* fixfix 5: cond\n\n* fixfix 6: cuda 8\n\n* ruff\n\n* breakpoint\n\n* dtype\n\n* a10\n\n* a10\n\n---------\n\nCo-authored-by: ydshieh <ydshieh@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "ci: update release template (#27901)",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "[compiler] Validate static components\n\nReact uses function identity to determine whether a given JSX expression represents the same type of component and should reconcile (keep state, update props) or replace (teardown state, create a new instance). This PR adds off-by-default validation to check that developers are not dynamically creating components during render.\n\nThe check is local and intentionally conservative. We specifically look for the results of call expressions, new expressions, or function expressions that are then used directly (or aliased) as a JSX tag. This allows common sketchy but fine-in-practice cases like passing a reference to a component from a parent as props, but catches very obvious mistakes such as:\n\n```js\nfunction Example() {\n  const Component = createComponent();\n  return <Component />;\n}\n```\n\nWe could expand this to catch more cases, but this seems like a reasonable starting point. Note that I tried enabling the validation by default and the only fixtures that error are the new ones added here. I'll also test this internally. What i'm imagining is that we enable this in the linter but not the compiler.\n\nghstack-source-id: e7408c0a55478b40d65489703d209e8fa7205e45\nPull Request resolved: https://github.com/facebook/react/pull/32683",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Introduce special handling for updates involving a single resource slice.\n\nTypically, a single DRA driver uses only one ResourceSlice per resource pool.\nCurrently, the ResourceSliceController updates this slice by deleting and\nrecreating it when devices are added or removed. For this common\nsingle-slice-per-pool scenario, we can improve efficiency by directly updating\nthe existing ResourceSlice instead.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update pretrained_models.md\n\nAdded Kaggle label to tfhub.dev links directing to kaggle, added kaggle label to documentation wherever necesasry.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "docs/api: update image tarball format\n\nSigned-off-by: Kaita Nakamura <kaita.nakamura0830@gmail.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "logo: update to new design\n\nSigned-off-by: Bruno Schaatsbergen <git@bschaatsbergen.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "DOC: Title Capitalization and Grammar Fix (#61630)\n\ntitle capitalization and update",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Refactor SourceProvider creation to consistently use MappingLookup (#128213)\n\nThis change updates the code to always create SourceProvider instances via MappingLookup, avoiding direct exposure to the underlying source format (synthetic or stored).\nIt also aligns source filtering behaviour between SourceProvider and SourceLoader, ensuring consistent application of filters.\n\nThis change is needed to enable source filtering to occur earlier in the fetch phase, for example, when constructing a synthetic source.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #131996 from ritazh/dra-adminaccess-updatelabelkey\n\nDRAAdminAccess: update label key",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "feat(unstable): WebTransport (#27431)\n\nInitial implementation of WebTransport client and server!\n\nThis is very unstable because the interface should eventually shift to\nuse hyper (h3 is on the [2025\nroadmap](https://hyper.rs/contrib/roadmap/)) instead of manually messing\nwith the the protocol, which will enable integration with\nDeno.serveHttp/etc and allow WebTransport over h2. This will also let us\nexpose multiplexing.\n\nWebTransport stats will be a followup due to their complexity.\n\nFixes: https://github.com/denoland/deno/issues/9017",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "DOC: Edited note on index_col/parse_dates params for clarity (#59223)\n\n* Edited note on index_col/parse_dates params for clarity\r\n\r\n(The sentence as it stands is missing a verb; maybe the result of an editing mishap?)\r\n\r\n* Update doc/source/getting_started/intro_tutorials/04_plotting.rst\r\n\r\n---------\r\n\r\nCo-authored-by: Matthew Roeschke <10647082+mroeschke@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Only show referenced entries, add versioning\n\nThis commit makes several modifications to the modules command. It\ndowncases the field names in the resulting JSON string, adds a format\nversion to the result. The result of this command will now only contain\nentries which have been declared in configuration, as opposed to the\ninternal manifest which shows all installed modules for a working dir.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "e2e: node: rewrite CFS quota tests\n\nRewrite the e2e cpumanager tests about CFS quota management.\nAll testcases are preserved.\n\nSigned-off-by: Francesco Romani <fromani@redhat.com>",
        "true_label": [
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Make RepositoriesService project-aware (#129821)\n\nThis PR makes RepositoriesService project aware so that the basic Put,\nGet, Delete and Verify repository actions are now project scoped. \n\nIt intentionally leaves the following aspects out of scope for the\ncurrent changes: * Repository stats reporting * Repository clean-up,\nanalysis and integrity verification * Repository usages for searchable\nsnapshots and CCR\n\nThey will be worked on separately. One main reason for leaving them out\nis that they are not needed by OBS which is currently blocked by\nrepository/snapshot changes. They may also have their own complexities,\ne.g. stats reporting.\n\nResolves: ES-10478",
        "true_label": [
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update `CsmForConditionalGenerationIntegrationTest` (#38424)\n\n* require_read_token\n\n* ruff\n\n---------\n\nCo-authored-by: ydshieh <ydshieh@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "DOC: add See Also section to groupby.DataFrameGroupBy.prod (#59599)\n\n* Update Groupby.prod\r\n\r\n* update code_check list\r\n\r\n* remove extra spaces\r\n\r\n* fix errors\r\n\r\n* ruff formatting",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "WEB: update list of (in)active core devs (#59808)",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "[Tests] NFC: Update `Sema/enum_raw_representable_object_literals.swift`\n\nThis is follow-up to https://github.com/swiftlang/swift/pull/82275.\nThe test in question is enabled only on iOS so it slipped through.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "ci: update release template (#27901)",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Fixed #36360 -- Fixed QuerySet.update() crash when referring annotations through values().\n\nThe issue was only manifesting itself when also filtering againt a related\nmodel as that forces the usage of a subquery because SQLUpdateCompiler doesn't\nsupport the UPDATE FROM syntax yet.\n\nRegression in 65ad4ade74dc9208b9d686a451cd6045df0c9c3a.\n\nRefs #28900.\n\nThanks Gav O'Connor for the detailed report.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "CI: Have dedicated Python 3.13 job instead of using Python dev (#61333)\n\n* CI: Have dedicated Python 3.13 job instead of using Python dev\n\n* Rename environment name\n\n* Track down resource warning\n\n* Fix -vv usage\n\n* Add __exit__ methods to PandasSQL\n\n* Revert \"Add __exit__ methods to PandasSQL\"\n\nThis reverts commit 374c5ac7515b3681c6fb8e0ce1dcc3310f54f516.\n\n* Focus on only running sqlite tests\n\n* Fix testing path\n\n* Dont mess with test path\n\n* unskip sqlalchemy sqlite tests\n\n* Remove tests that don't exercise the failures\n\n* Remove bulk of tests\n\n* freeze some workflows\n\n* Freeze more workflows\n\n* disable more jobs\n\n* See if forced collection raises ResourceError earlier\n\n* Try context manager in test_delete_rows_is_atomic\n\n* Undo all changes and update test\n\n* Use a file in test_database_uri_string\n\n* Remove another uneeded parametrization",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "chore: bump license year (#1981)",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          1,
          0
        ]
      },
      {
        "text": "ci: update step name in workflow (#61393)\n\nThis was named incorrectly.\n\nPR Close #61393",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Revert \"[Docs] Convert to markdown to fix 155032 (#155520)\"\n\nThis reverts commit cd66ff80307862ef8e75520054ecd19a5eff9f7e.\n\nReverted https://github.com/pytorch/pytorch/pull/155520 on behalf of https://github.com/atalman due to breaks multiple test_quantization.py::TestQuantizationDocs::test_quantization_ ([comment](https://github.com/pytorch/pytorch/pull/155520#issuecomment-2981996091))",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "[ML] Ensure that anomaly detection job state update retries if master node is temoporarily unavailable (#129391)\n\nDuring cluster upgrade, the anomaly detection jobs must be reassigned from one ML node to another. During this reassignment, the jobs transition through several states, including \"opening\" and \"opened\". If, during this transition, the master node becomes temporarily unavailable, e.g., due to reassignment, the new job state is not successfully committed to the cluster state. Therefore, once the new master became available, the cluster state was inconsistent: some anomaly detection jobs were opened, but their state got stuck as \"opening\".\n\nThis PR introduces a retryable action for updating the job state to ensure that the job state is successfully updated and the cluster state remains consistent during the upgrade.\n\nFixes #126148",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "DRA kubelet: move RegistrationHandler into Store\n\nThis moves wiping into the plugins store. The advantages are:\n- Only a single mutex is needed in the plugin store.\n- The code which decides about queuing and canceling wiping\n  has access to all relevant information while that information\n  is protected against concurrent modifications.\n- It prepares for making that code more complex (\"connection\n  monitoring\").\n\nIn retrospect it is not clear whether the RegistrationHandler did the right\nthing in all cases when endpoints got registered and removed concurrently.\n\nThe RegistrationHandler became a thin, stateless layer on top of the store.\nBecause it's not really needed anymore, the required methods for the plugin\nmanager now get provided directly by the store.\n\nThe disadvantage is the slightly more complex initialization, but that was also\na problem before which just hadn't been solved: wiping ran without the context\nof the manager. Now it does.",
        "true_label": [
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "updating nit comments",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "test: code coverage increase for kubelet_client",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          1,
          0
        ]
      },
      {
        "text": "Fix windows-pause-image-base:<tag>@<digest> invalid reference format\n\nThis commit will fix the windows pause image build logic to be able to build from `windows-pause-image-base:<tag>@<digest>`,\nwhich currently only accepts `windows-pause-image-base:<tag>` due to which build is failing with `invalid reference format`.\n\nRef: https://prow.k8s.io/view/gs/kubernetes-ci-logs/logs/post-kubernetes-push-image-pause/1889748429312102400\nDiscussion: https://kubernetes.slack.com/archives/CCK68P2Q2/p1742839354591189?thread_ts=1742832454.449449&cid=CCK68P2Q2\n\nUpdates the pause windows build logic to remove hardcoded values:\nOSVERSION ?= 1809 ltsc2022\nAnd dynamically resolve the OSVERSIONS from `windows-pause-image-base`\nwhich separate manifests per os.version and corresponding digests.\n\nSigned-off-by: ArkaSaha30 <arkasaha30@gmail.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update spelling for representing lifetime dependencies to @_lifetime",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "[BE]: Update cudnn to 9.10.2.21 (#155576)\n\nUpdate to CUDNN 9.10.2.21\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155576\nApproved by: https://github.com/eqy, https://github.com/atalman",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "[BE] Mention debug=True in AC error messages (#155593)\n\nSee https://github.com/pytorch/pytorch/issues/155171#issuecomment-2949415407\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155593\nApproved by: https://github.com/janeyx99",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          1,
          0
        ]
      },
      {
        "text": "Fix: missing else branch to handle \"--load_best_model_at_end\" in training_args.py (#38217)\n\nUpdate training_args.py",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "ci: update to latest version of dev-infra actions (#61990)\n\nUpdate to the latest sha of the dev-infra actions\n\nPR Close #61990",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "wifi: ath11k: consistently use ath11k_mac_get_fw_stats()\n\nCurrently to get firmware stats, ath11k_mac_op_get_txpower() calls\nath11k_fw_stats_request() and ath11k_mac_op_sta_statistics() calls\nath11k_mac_get_fw_stats(). Those two helpers are basically doing\nthe same, except for:\n\n1. ath11k_mac_get_fw_stats() verifies ar->state inside itself.\n2. ath11k_mac_get_fw_stats() calls ath11k_mac_fw_stats_request()\n   which then calls ath11k_mac_fw_stats_reset() to free pdev/vdev\n   stats whereas only pdev stats are freed by ath11k_fw_stats_request().\n3. ath11k_mac_get_fw_stats() waits for ar->fw_stats_complete and\n   ar->fw_stats_done, whereas ath11k_fw_stats_request() only waits for\n   ar->fw_stats_complete.\n\nChange to call ath11k_mac_get_fw_stats() in ath11k_mac_op_get_txpower().\nThis is valid because:\n\n1. ath11k_mac_op_get_txpower() also has the same request on ar->state.\n2. it is harmless to call ath11k_fw_stats_vdevs_free() since\n   ar->fw_stats.vdevs should be empty and there should be no one\n   expecting it at that time.\n3. ath11k_mac_op_get_txpower() only needs pdev stats. For pdev stats,\n   ar->fw_stats_done is set to true whenever ar->fw_stats_complete is\n   set to true in ath11k_update_stats_event(). So additional wait on\n   ar->fw_stats_done does not wast any time.\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.37\n\nSigned-off-by: Baochen Qiang <quic_bqiang@quicinc.com>\nReviewed-by: Vasanthakumar Thiagarajan <vasanthakumar.thiagarajan@oss.qualcomm.com>\nLink: https://patch.msgid.link/20250220082448.31039-8-quic_bqiang@quicinc.com\nSigned-off-by: Jeff Johnson <jeff.johnson@oss.qualcomm.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update website/docs/language/resources/ephemeral/index.mdx\n\nCo-authored-by: Rose M Koron <32436232+rkoron007@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "TYP: Update typing for 3.10 (#61453)\n\n* update typing for 3.10\n\n* add 2 more TypeAlias\n\n* add 2 more TypeAlias\n\n* fix hook for stubtest - make it work on Windows. remove combine from nattype.pyi",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Add option to disable sharing convs across levels in RetinaNet head.\n\nAlso significantly refactor the code to move component builder to individual functions and reduce duplicate code to improve readability.\n\nPiperOrigin-RevId: 533598893",
        "true_label": [
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "update github.com/spf13/cobra v1.9.1\n\nSigned-off-by: Davanum Srinivas <davanum@gmail.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "skip flaky test (#36540)",
        "true_label": [
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          1,
          0
        ]
      },
      {
        "text": "[IFRT] Use SerDes versioning in most IFRT and PjRt-IFRT types\n\nThe current serialization format is anchored as `SerDesVersionNumber(0)`.\nExisting serialization protos created by the previous version of IFRT will be\ncompatible because the version field will be read as 0 (proto default value),\nwhich will be recognized as `SerDesVersionNumber(0)` and use the identical\ndeserialization ligic as before.\n\nAll `ToProto()`s get a `version_number` parameter (defaults to\n`SerDesVersion::current().version_number().value()`), and use it for internal\nformat selection and forward it to nested serialization.\n\nAll `Serialize()`s recognize `options` and get a version if provided (if\nomitted, `SerDesVersion::current()` is assumed), and behave similarly to\n`ToProto()`.\n\n`Deserialize()`/`FromProto()` will explicitly reject the serialized data if its\nversion is no longer supported, if the updated serialization format tracks the\nserailzation version.\n\nSome places that have limited versioning support:\n\n`HloProgram` and `IfrtIRProgram` currently pin its internal serialization\nincluding VHLO and IFRT IR to a at-least-4-week-old version. This may change to\naccept a broader range of versions in case it is beneficial to be able to use\nthe latest SerDes version instead of 4-week-old version within a\nsingle-versioned system.\n\n`PluginProgram` ignores versioning. Any change to its format currently is a\nbreaking change because its serialization format is opaque/not extensible. Its\nuse will also be replaced with `CustomCallProgram`, so it seems not very\nbeneficial to add versioning to it.\n\nIFRT Proxy does not yet use SerDes versioning. It will be done in a subsequent\nchange.\n\nPiperOrigin-RevId: 771280809",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Optimizer: add two utilities in OptUtils.swift\n\n* `MultipleValueInstruction.replace(with:)`\n* `eraseIfDead(functions:)`",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Add initial state store protocol skeleton (#37197)\n\n* Add initial state store protocol skeleton\n\nIntroduce ValidateStateStoreConfig + ConfigureStateStore\nUpdate GetProviderSchema + GetMetadata (for mux)\n\n* address PR feedback",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Update to the latest version of laravel-vite-plugin (#5932)\n\nThe `laravel-vite-plugin` had a pre-1.x major version bump due to a change in the plugin return type.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Updated aya_vision.md (#38749)\n\n* Update aya_vision.md\n\n* Suggested changes made to aya_vision.md\n\n* Quantization Example added - aya_vision.md\n\n* Polished - aya_vision.md\n\n* Update aya_vision.md\n\n---------\n\nCo-authored-by: Steven Liu <59462357+stevhliu@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "[xla:benchmarks] Update workflow trigger to be push event for consistency\n\nPiperOrigin-RevId: 765325170",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "CHANGELOG: Update directory for v1.34.0-alpha.2 release",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Fix race condition when resolving new location for multiple shards at once (#128062)",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Disable a DCHECK in the cupti_tracer. This DCHECK is failing for certain cases in which a graph node is executed multiple times within a kernel, and we don't handle this case correctly.\n\nPiperOrigin-RevId: 772470712",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "TST/CI: skipif numba tests on Ubuntu ARM for numba 0.61 (#60847)\n\n* TST: Apply skip/xfail markers for numba/dask updates\r\n\r\n* skip test_numba_vs_python_noop\r\n\r\n* Add reason\r\n\r\n* Skip another test\r\n\r\n* Append a skipif\r\n\r\n* Skip test_info_compute_numba\r\n\r\n* add skipif for test_numba\r\n\r\n* Add skipif on test_numba\r\n\r\n* Add skipif for transform/test_numba\r\n\r\n* Remove redundant condition in dask test\r\n\r\n* Add skipif to window/test_numba\r\n\r\n* skipif for test_online",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "build: update cross-repo angular dependencies (#61435)\n\nSee associated pull request for more information.\n\nPR Close #61435",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "DOC: Updated link for OVH server benchmark visualization (#61108)",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "fix(http): Delay stabilization until next app synchronization (#60656)\n\nThis commit updates the `HttpClient` internals to use the public\n`PendingTasks` API which delays stability until the next\n`ApplicationRef.tick` instead of causing the application to become\nstable synchronously. This is helpful to resolve unexpected issues where\ncomputations happen as follow-up work to the value coming out of the\nresponse.\n\nfixes https://github.com/angular/angular/issues/59352\n\nPR Close #60656",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Generalize the GpuKernelRegistry for arbitrary objects\n\nThe GpuKernelRegistry proved useful to handle platform specific kernel implementations as it does not require passing down pointers through very\nlong chains of function calls. Since these kernels are static in lifetime and immutable it also doesn't increase complexity of the code base (no spaghetification).\n\nThe same point can be made for other platform dependent static objects like factory functions for example. So this change takes the concepts from GpuKernelRegistry and applies it to the `PlatformObjectRegistry` which can store arbitrary copyable objects in a typesafe manner.\n\nIt also implements `GpuKernelRegistry` on top of `PlatformObjectRegistry`.\n\nPiperOrigin-RevId: 767028523",
        "true_label": [
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "[RoPE] abstract dynamic RoPE update under a decorator \u2728  (#37249)\n\n* dynamic rope decorator\n\n* longrope; shorter fwd pass\n\n* propper docstring\n\n* make fixup",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Get rid of TOO_COMPLEX shape type\n\nInstead it's now a `shape_id` flag.\n\nThis allows to check if an object is complex without having\nto chase the `rb_shape_t` pointer.",
        "true_label": [
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Fix: HPA suppresses FailedRescale event on successful conflict retry\n\nThis change modifies the HPA controller to use retry.RetryOnConflict when updating a scale subresource. This prevents the controller from emitting a FailedRescale event on transient API conflicts if a subsequent retry succeeds. If the retry is successful, a SuccessfulRescale event is emitted. If all retries are exhausted and the conflict persists, the original FailedRescale event is emitted. This reduces event noise caused by race conditions where the scale subresource is updated by another process.",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Fix `qwen2_5_vl` tests (#38845)\n\n* fix\n\n* breakpoint()\n\n* breakpoint()\n\n* update\n\n* update\n\n* update\n\n* update\n\n* update\n\n* update\n\n---------\n\nCo-authored-by: ydshieh <ydshieh@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Include Pinned Retriever in 9.1 Documentation (#129216)\n\n* propgating retrievers to inner retrievers\n\n* test feature taken care of\n\n* Small changes in concurrent multipart upload interfaces (#128977)\n\nSmall changes in BlobContainer interface and wrapper.\n\nRelates ES-11815\n\n* Unmute FollowingEngineTests#testProcessOnceOnPrimary() test (#129054)\n\nThe reason the test fails is that operations contained _seq_no field with different doc value types (with no skippers and with skippers) and this isn't allowed, since field types need to be consistent in a Lucene index.\n\nThe initial operations were generated not knowing about the fact the index mode was set to logsdb or time_series. Causing the operations to not have doc value skippers. However when replaying the operations via following engine, the operations did have doc value skippers.\n\nThe fix is to set `index.seq_no.index_options` to `points_and_doc_values`, so that the initial operations are indexed without doc value skippers.\n\nThis test doesn't gain anything from storing seqno with doc value skippers, so there is no loss of testing coverage.\n\nCloses #128541\n\n* [Build] Add support for publishing to maven central (#128659)\n\nThis ensures we package an aggregation zip with all artifacts we want to publish to maven central as part of a release.\nRunning zipAggregation will produce a zip file in the build/nmcp/zip folder. The content of this zip is meant to match the maven artifacts we have currently declared as dra maven artifacts.\n\n* ESQL: Check for errors while loading blocks (#129016)\n\nRuns a sanity check after loading a block of values. Previously we were\ndoing a quick check if assertions were enabled. Now we do two quick\nchecks all the time. Better - we attach information about how a block\nwas loaded when there's a problem.\n\nRelates to #128959\n\n* Make `PhaseCacheManagementTests` project-aware (#129047)\n\nThe functionality in `PhaseCacheManagement` was already project-aware,\nbut these tests were still using deprecated methods.\n\n* Vector test tools (#128934)\n\nThis adds some testing tools for verifying vector recall and latency\ndirectly without having to spin up an entire ES node and running a rally\ntrack.\n\nIts pretty barebones and takes inspiration from lucene-util, but I\nwanted access to our own formats and tooling to make our lives easier.\n\nHere is an example config file. This will build the initial index, run\nqueries at num_candidates: 50, then again at num_candidates 100 (without\nreindexing, and re-using the cached nearest neighbors).\n\n```\n[{\n  \"doc_vectors\" : \"path\",\n  \"query_vectors\" : \"path\",\n  \"num_docs\" : 10000,\n  \"num_queries\" : 10,\n  \"index_type\" : \"hnsw\",\n  \"num_candidates\" : 50,\n  \"k\" : 10,\n  \"hnsw_m\" : 16,\n  \"hnsw_ef_construction\" : 200,\n  \"index_threads\" : 4,\n  \"reindex\" : true,\n  \"force_merge\" : false,\n  \"vector_space\" : \"maximum_inner_product\",\n  \"dimensions\" : 768\n},\n{\n\"doc_vectors\" : \"path\",\n\"query_vectors\" : \"path\",\n\"num_docs\" : 10000,\n\"num_queries\" : 10,\n\"index_type\" : \"hnsw\",\n\"num_candidates\" : 100,\n\"k\" : 10,\n\"hnsw_m\" : 16,\n\"hnsw_ef_construction\" : 200,\n\"vector_space\" : \"maximum_inner_product\",\n\"dimensions\" : 768\n}\n]\n```\n\nTo execute:\n\n```\n./gradlew :qa:vector:checkVec --args=\"/Path/to/knn_tester_config.json\"\n```\n\nCalling `./gradlew :qa:vector:checkVecHelp` gives some guidance on how\nto use it, additionally providing a way to run it via java directly\n(useful to bypass gradlew guff).\n\n* ES|QL: refactor generative tests (#129028)\n\n* Add a test of LOOKUP JOIN against a time series index (#129007)\n\nAdd a spec test of `LOOKUP JOIN` against a time series index.\n\n* Make ILM `ClusterStateWaitStep` project-aware (#129042)\n\nThis is part of an iterative process to make ILM project-aware.\n\n* Mute org.elasticsearch.xpack.esql.qa.mixed.MixedClusterEsqlSpecIT test {lookup-join.LookupJoinOnTimeSeriesIndex ASYNC} #129078\n\n* Remove `ClusterState` param from ILM `AsyncBranchingStep` (#129076)\n\nThe `ClusterState` parameter of the `asyncPredicate` is not used\nanywhere.\n\n* Mute org.elasticsearch.xpack.esql.qa.mixed.MixedClusterEsqlSpecIT test {lookup-join.LookupJoinOnTimeSeriesIndex SYNC} #129082\n\n* Mute org.elasticsearch.upgrades.UpgradeClusterClientYamlTestSuiteIT test {p0=upgraded_cluster/70_ilm/Test Lifecycle Still There And Indices Are Still Managed} #129097\n\n* Mute org.elasticsearch.upgrades.UpgradeClusterClientYamlTestSuiteIT test {p0=upgraded_cluster/90_ml_data_frame_analytics_crud/Get mixed cluster outlier_detection job} #129098\n\n* Mute org.elasticsearch.packaging.test.DockerTests test081SymlinksAreFollowedWithEnvironmentVariableFiles #128867\n\n* Threadpool merge executor is aware of available disk space (#127613)\n\nThis PR introduces 3 new settings:\nindices.merge.disk.check_interval, indices.merge.disk.watermark.high, and indices.merge.disk.watermark.high.max_headroom\nthat control if the threadpool merge executor starts executing new merges when the disk space is getting low.\n\nThe intent of this change is to avoid the situation where in-progress merges exhaust the available disk space on the node's local filesystem.\nTo this end, the thread pool merge executor periodically monitors the available disk space, as well as the current disk space estimates required by all in-progress (currently running) merges on the node, and will NOT schedule any new merges if the disk space is getting low (by default below the 5% limit of the total disk space, or 100 GB, whichever is smaller (same as the disk allocation flood stage level)).\n\n* Add option to include or exclude vectors from _source retrieval (#128735)\n\nThis PR introduces a new include_vectors option to the _source retrieval context.\nWhen set to false, vectors are excluded from the returned _source.\nThis is especially efficient when used with synthetic source, as it avoids loading vector fields entirely.\n\nBy default, vectors remain included unless explicitly excluded.\n\n* Remove direct minScore propagation to inner retrievers\n\n* cleaned up skip\n\n* Mute org.elasticsearch.index.engine.ThreadPoolMergeExecutorServiceDiskSpaceTests testAvailableDiskSpaceMonitorWhenFileSystemStatErrors #129149\n\n* Add transport version for ML inference Mistral chat completion (#129033)\n\n* Add transport version for ML inference Mistral chat completion\n\n* Add changelog for Mistral Chat Completion version fix\n\n* Revert \"Add changelog for Mistral Chat Completion version fix\"\n\nThis reverts commit 7a57416bdc65805d5303ee3ee7db3368aad89689.\n\n* Correct index path validation (#129144)\n\nAll we care about is if reindex is true or false. We shouldn't worry\nabout force merge. Because if reindex is true, we will create the\ndirectory, if its false, we won't.\n\n* Mute org.elasticsearch.index.engine.ThreadPoolMergeExecutorServiceDiskSpaceTests testUnavailableBudgetBlocksNewMergeTasksFromStartingExecution #129148\n\n* Implemented completion task for Google VertexAI  (#128694)\n\n* Google Vertex AI completion model, response entity and tests\n\n* Fixed GoogleVertexAiServiceTest for Service configuration\n\n* Changelog\n\n* Removed downcasting and using `moveToFirstToken`\n\n* Create GoogleVertexAiChatCompletionResponseHandler for streaming and non streaming responses\n\n* Added unit tests\n\n* PR feedback\n\n* Removed googlevertexaicompletion model. Using just GoogleVertexAiChatCompletionModel for completion and chat completion\n\n* Renamed uri -> nonStreamingUri. Added streamingUri and getters in GoogleVertexAiChatCompletionModel\n\n* Moved rateLimitGroupHashing to subclasses of GoogleVertexAiModel\n\n* Fixed rate limit has of GoogleVertexAiRerankModel and refactored uri for GoogleVertexAiUnifiedChatCompletionRequest\n\n---------\n\nCo-authored-by: lhoet-google <lhoet@google.com>\nCo-authored-by: Jonathan Buttner <56361221+jonathan-buttner@users.noreply.github.com>\n\n* ES|QL - kNN function initial support (#127322)\n\n* Remove optional seed from ES|QL SAMPLE (#128887)\n\n* Remove optional seed from ES|QL SAMPLE\n\n* make it clear that seed is for testing\n\n* [Inference API] Add \"rerank\" task type to \"elastic\" provider (#126022)\n\n* Rename target destination for microbenchmarks (#128878)\n\n* Include direct memory and non-heap memory in ML memory calculations (take #2) (#128742)\n\n* Include direct memory and non-heap memory in ML memory calculations.\n\n* Reduce ML_ONLY heap size, so that direct memory is accounted for.\n\n* [CI] Auto commit changes from spotless\n\n* changelog\n\n* improve docs\n\n* Reuse direct memory to heap factor\n\n* feature flag\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>\n\n* Throw better exception for unsupported aggregations over shape fields (#129139)\n\n* Update Test Framework To Handle Query Rewrites That Rely on Non-Null Searchers (#129160)\n\n* Update ReproduceInfoPrinter to correctly print a reproduction line for Lucene & build candidate upgrade tests (#129044)\n\n* Increment inference stats counter for shard bulk inference calls (#129140)\n\nThis change updates the inference stats counter to include chunked inference calls performed by the shard bulk inference filter on all semantic text fields.\nIt ensures that usage of inference on semantic text fields is properly recorded in the stats.\n\n* Synthetic source: avoid storing multi fields of type text and match_only_text by default. (#129126)\n\nDon't store text and match_only_text field by default when source mode is synthetic and a field is a multi field or when there is a suitable multi field.\n\nWithout this change, ES would store field otherwise twice in a multi-field configuration.\n\nFor example:\n\n```\n...\n\"os\": {\n  \"properties\": {\n    \"name\": {\n      \"ignore_above\": 1024,\n      \"type\": \"keyword\",\n      \"fields\": {\n        \"text\": {\n          \"type\": \"match_only_text\"\n        }\n      }\n    }\n...\n```\n\nIn this case, two stored fields were added, one in case for the `name` field and one for `name.text` multi-field.\nThis change prevents this, and would never store a stored field when text or match_only_text field is a multi-field.\n\n* Adding `scheduled_report_id` field to kibana reporting template (#127827)\n\n* Adding scheduled_report_id field to kibana reporting template\n\n* Incrementing stack template registry version\n\n* ES|QL: Add FORK generative tests (#129135)\n\n* ES|QL Completion command syntax change (#129189)\n\n* Included pinned retriever in 9.1 docs\n\n* reverted unnecessary change\n\n* made the suggested changes\n\n* Update retrievers.md\n\n* Update docs/reference/elasticsearch/rest-apis/retrievers.md\n\nCo-authored-by: Liam Thompson <32779855+leemthompo@users.noreply.github.com>\n\n* Update docs/reference/elasticsearch/rest-apis/retrievers.md\n\nCo-authored-by: Liam Thompson <32779855+leemthompo@users.noreply.github.com>\n\n* Update retrievers.md\n\n---------\n\nCo-authored-by: Tanguy Leroux <tlrx.dev@gmail.com>\nCo-authored-by: Martijn van Groningen <martijn.v.groningen@gmail.com>\nCo-authored-by: Rene Groeschke <rene@elastic.co>\nCo-authored-by: Nik Everett <nik9000@gmail.com>\nCo-authored-by: Niels Bauman <33722607+nielsbauman@users.noreply.github.com>\nCo-authored-by: Benjamin Trent <ben.w.trent@gmail.com>\nCo-authored-by: Luigi Dell'Aquila <luigi.dellaquila@gmail.com>\nCo-authored-by: Bogdan Pintea <bogdan.pintea@elastic.co>\nCo-authored-by: elasticsearchmachine <58790826+elasticsearchmachine@users.noreply.github.com>\nCo-authored-by: Albert Zaharovits <email+github@zalbert.me>\nCo-authored-by: Jim Ferenczi <jim.ferenczi@elastic.co>\nCo-authored-by: Jan-Kazlouski-elastic <jan.kazlouski@elastic.co>\nCo-authored-by: Leonardo Hoet <55866308+leo-hoet@users.noreply.github.com>\nCo-authored-by: lhoet-google <lhoet@google.com>\nCo-authored-by: Jonathan Buttner <56361221+jonathan-buttner@users.noreply.github.com>\nCo-authored-by: Carlos Delgado <6339205+carlosdelest@users.noreply.github.com>\nCo-authored-by: Jan Kuipers <148754765+jan-elastic@users.noreply.github.com>\nCo-authored-by: Tim Grein <tim.grein@elastic.co>\nCo-authored-by: Ievgen Degtiarenko <ievgen.degtiarenko@elastic.co>\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>\nCo-authored-by: Ignacio Vera <ignacio.vera@elastic.co>\nCo-authored-by: Mike Pellegrini <mike.pellegrini@elastic.co>\nCo-authored-by: Moritz Mack <mmack@apache.org>\nCo-authored-by: Ying Mao <ying.mao@elastic.co>\nCo-authored-by: Ioana Tagirta <ioanatia@users.noreply.github.com>\nCo-authored-by: Aur\u00e9lien FOUCRET <aurelien.foucret@gmail.com>\nCo-authored-by: Liam Thompson <32779855+leemthompo@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0
        ]
      },
      {
        "text": "[iOS] Load the accounts stored in the user defaults -- share extension\n\nThe aim of this CL is to load the accounts in the user defaults and pass\nthem to the share sheet. It also updates how the primary account is\nretrieved.\n\nBug: 427440893\nChange-Id: Ic341d47766c0c4c35b2ecd18e5d25435071bbd3c\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6662642\nCommit-Queue: Elmehdi Rahmaoui <erahmaoui@google.com>\nReviewed-by: Sylvain Defresne <sdefresne@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1478472}",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      },
      {
        "text": "Result of tsccr-helper -log-level=info gha update -latest .github/ (#36810)",
        "true_label": [
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0
        ]
      }
    ]
  },
  "technical_area": {
    "total_errors": 1591,
    "error_rate": 0.3139925004933886,
    "incorrect_samples": [
      {
        "text": "[11.x] Simplify PHP comments (#6316)\n\n* Simplifies comments\r\n\r\n* Apply fixes from StyleCI\r\n\r\n* Removes non used line\r\n\r\n* remove some comments\r\n\r\n---------\r\n\r\nCo-authored-by: StyleCI Bot <bot@styleci.io>\r\nCo-authored-by: Taylor Otwell <taylor@laravel.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Directly query for extension version before declaring it missing (#250763)\n\n* directly query for extension version before declaring it missing\n\n* always fire event\n\n* show missingFromGallery even when extension is disabled or not running\n\n* whitespace",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ez] fix typo in comment (#156402)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156402\nApproved by: https://github.com/BoyuanFeng\nghstack dependencies: #156397",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[config] revert #37603 (#37821)\n\nrevert",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "use guard_or_false in checkInBoundsForStorage (#155874)\n\nthis was added in https://github.com/pytorch/pytorch/pull/147354, the comment already justify guard_or_false\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155874\nApproved by: https://github.com/bobrenjc93",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[compiler] Validate against mutable functions being frozen\n\nThis revisits a validation I built a while ago, trying to make it more strict this time to ensure that it's high-signal.\n\nWe detect function expressions which are *known* mutable \u2014 they definitely can modify a variable defined outside of the function expression itself (modulo control flow). This uses types to look for known Store and Mutate effects only, and disregards mutations of effects. Any such function passed to a location with a Freeze effect is reported as a validation error.\n\nThis is behind a flag and disabled by default. If folks agree this makes sense to revisit, i'll test out internally and we can consider enabling by default.\n\nghstack-source-id: 075a731444ce95e52dbd5ea3be85c16d428927f5\nPull Request resolved: https://github.com/facebook/react/pull/33079",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[invoke_subgraph] Use eager input vals to constrain input strides (#155291)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155291\nApproved by: https://github.com/ezyang, https://github.com/zou3519",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Docs] Convert to markdown: torch.compiler_transformations.rst, torch.compiler.config.rst (#155347)\n\nPart of changes #155040 (parent PR #155120)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155347\nApproved by: https://github.com/svekars",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": ":lock: :robot: CI Update lock files for array-api CI build(s) :lock: :robot: (#30489)\n\nCo-authored-by: Lock file bot <noreply@github.com>",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[flax/mistral] support sliding_window: null in config (#37402)\n\nflax/mistral: Allow sliding_window to be set to none",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Revert \"[flex attention][triton pin] triton_helpers shim for TMA apis (#154858)\" (#155640)\n\nThis reverts commit ea7b233015ff00098df687884be4e2efbf7a55fa.\n\nIt fails internal tests in fbcode, but they weren't running so we didn't get signal\n\nReverting w/ a PR/diff because the PR has been landed for ~1 week - too old to revert directly from internal.\n\nDifferential Revision: [D76380887](https://our.internmc.facebook.com/intern/diff/D76380887)\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155640\nApproved by: https://github.com/nmacchioni, https://github.com/danzimm",
        "true_label": [
          0.0,
          1.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Switch wtf/pod_{red_black_tree,tree_test_helpers}*.* to blink namespace\n\n* As these files are being modified, take the opportunity to rename\n  PODRedBlackTree to PodRedBlackTree, aligning with the Google C++\n  style guide.\n\nThis CL has no behavior changes.\n\nBug: 422768753\nChange-Id: Id8d9162c9eeaf3ba96cd4b3bb2ff9c9ca7b16edf\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6665278\nAuto-Submit: Kent Tamura <tkent@chromium.org>\nCommit-Queue: Fredrik S\u00f6derquist <fs@opera.com>\nReviewed-by: Fredrik S\u00f6derquist <fs@opera.com>\nCr-Commit-Position: refs/heads/main@{#1477772}",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll WebRTC from fe0a0c784efa to edbf76f93f4a (15 revisions)\n\nhttps://webrtc.googlesource.com/src.git/+log/fe0a0c784efa..edbf76f93f4a\n\n2025-06-25 webrtc-version-updater@webrtc-ci.iam.gserviceaccount.com Update WebRTC code version (2025-06-25T04:06:28).\n2025-06-24 phancke@meta.com av1: (partially) follow spec fmtp parameter comparisons\n2025-06-24 chromium-webrtc-autoroll@webrtc-ci.iam.gserviceaccount.com Roll chromium_revision ab4881aeb4..ff8c208486 (1478047:1478216)\n2025-06-24 phancke@meta.com IWYU modules/audio_coding\n2025-06-24 phancke@meta.com Do not restart SCTP transport on DTLS restart\n2025-06-24 phancke@meta.com pqc: add missing GetName implementation\n2025-06-24 phancke@meta.com IWYU net/ again\n2025-06-24 mbonadei@webrtc.org Revert \"Change SetLocalContent / SetRemoteContent to update header extensions\"\n2025-06-24 chromium-webrtc-autoroll@webrtc-ci.iam.gserviceaccount.com Roll chromium_revision c96a5de562..ab4881aeb4 (1477697:1478047)\n2025-06-24 mbonadei@webrtc.org Revert \"Enable scenario test for L4S\"\n2025-06-24 phancke@meta.com IWYU audio/\n2025-06-24 phancke@meta.com Use peerconnection field trials instead of context in sdp O/A\n2025-06-24 jakobi@webrtc.org Add function to create an audio decoder ahead of time.\n2025-06-24 mbonadei@webrtc.org Revert \"Remove rtp_header_extensions_set()\"\n2025-06-24 perkj@webrtc.org Deprecate TargetTransferRate.stable_target_rate from GoogCC\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/webrtc-chromium-autoroll\nPlease CC webrtc-chromium-sheriffs-robots@google.com,webrtc-infra@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in WebRTC: https://bugs.chromium.org/p/webrtc/issues/entry\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nBug: None\nTbr: webrtc-chromium-sheriffs-robots@google.com\nChange-Id: I21764316e51430db2c2d74642dd4a82c67c4263c\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6670927\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1478428}",
        "true_label": [
          0.0,
          1.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "ephermal: allow setting var and var files for apply",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "refactor(devtools): introduce responsive-split directive (#61204)\n\nThe `ResponsiveSplitDirective` adds responsive behavior to the `as-split` component by a provided width to height ratio.\n\nPR Close #61204",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[BE][PYFMT] migrate PYFMT for `{torch,test}/{nn,optim}/**` to `ruff format` (#144548)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/144548\nApproved by: https://github.com/ezyang",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.xpack.esql.session.IndexResolverFieldNamesTests testForkFieldsWithKeepAfterFork #128271",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.xpack.esql.action.CrossClusterQueryWithPartialResultsIT testFailToStartRequestOnRemoteCluster #128545",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Semantic_text match_all with Highlighter (#128702)\n\n* initial implementation for match_All\n\n* reformat\n\n* [CI] Auto commit changes from spotless\n\n* Excluding matchAllintercepter\n\n* Adding matchAllDocs support for vector fields\n\n* [CI] Auto commit changes from spotless\n\n* Remove previous implementation\n\n* Adding yaml tests for match_all\n\n* fixed yaml tests\n\n* Update docs/changelog/128702.yaml\n\n* Update changelog\n\n* changelog - update summary\n\n* Fix wrong inference names for the yaml tests\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix Quark quantization config (#37578)\n\nfix",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "loop: move lo_set_size() out of queue freeze\n\nIt isn't necessary to freeze queue for updating disk size given submit_bio()\ndoesn't grab queue usage counter for checking eod.\n\nAlso many driver won't freeze queue for calling set_capacity_and_notify().\n\nMove lo_set_size() out of queue freeze for fixing many lockdep warning\nreport.\n\nLink: https://lore.kernel.org/linux-block/67ea99e0.050a0220.3c3d88.0042.GAE@google.com/\nReported-by: syzbot+9dd7dbb1a4b915dee638@syzkaller.appspotmail.com\nSigned-off-by: Ming Lei <ming.lei@redhat.com>\nLink: https://lore.kernel.org/r/20250611084938.108829-1-ming.lei@redhat.com\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "drm/xe/sched: stop re-submitting signalled jobs\n\nCustomer is reporting a really subtle issue where we get random DMAR\nfaults, hangs and other nasties for kernel migration jobs when stressing\nstuff like s2idle/s3/s4. The explosions seems to happen somewhere\nafter resuming the system with splats looking something like:\n\nPM: suspend exit\nrfkill: input handler disabled\nxe 0000:00:02.0: [drm] GT0: Engine reset: engine_class=bcs, logical_mask: 0x2, guc_id=0\nxe 0000:00:02.0: [drm] GT0: Timedout job: seqno=24496, lrc_seqno=24496, guc_id=0, flags=0x13 in no process [-1]\nxe 0000:00:02.0: [drm] GT0: Kernel-submitted job timed out\n\nThe likely cause appears to be a race between suspend cancelling the\nworker that processes the free_job()'s, such that we still have pending\njobs to be freed after the cancel. Following from this, on resume the\npending_list will now contain at least one already complete job, but it\nlooks like we call drm_sched_resubmit_jobs(), which will then call\nrun_job() on everything still on the pending_list. But if the job was\nalready complete, then all the resources tied to the job, like the bb\nitself, any memory that is being accessed, the iommu mappings etc. might\nbe long gone since those are usually tied to the fence signalling.\n\nThis scenario can be seen in ftrace when running a slightly modified\nxe_pm IGT (kernel was only modified to inject artificial latency into\nfree_job to make the race easier to hit):\n\nxe_sched_job_run: dev=0000:00:02.0, fence=0xffff888276cc8540, seqno=0, lrc_seqno=0, gt=0, guc_id=0, batch_addr=0x000000146910 ...\nxe_exec_queue_stop:   dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=0, guc_state=0x0, flags=0x13\nxe_exec_queue_stop:   dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=1, guc_state=0x0, flags=0x4\nxe_exec_queue_stop:   dev=0000:00:02.0, 4:0x1, gt=1, width=1, guc_id=0, guc_state=0x0, flags=0x3\nxe_exec_queue_stop:   dev=0000:00:02.0, 1:0x1, gt=1, width=1, guc_id=1, guc_state=0x0, flags=0x3\nxe_exec_queue_stop:   dev=0000:00:02.0, 4:0x1, gt=1, width=1, guc_id=2, guc_state=0x0, flags=0x3\nxe_exec_queue_resubmit: dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=0, guc_state=0x0, flags=0x13\nxe_sched_job_run: dev=0000:00:02.0, fence=0xffff888276cc8540, seqno=0, lrc_seqno=0, gt=0, guc_id=0, batch_addr=0x000000146910 ...\n.....\nxe_exec_queue_memory_cat_error: dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=0, guc_state=0x3, flags=0x13\n\nSo the job_run() is clearly triggered twice for the same job, even\nthough the first must have already signalled to completion during\nsuspend. We can also see a CAT error after the re-submit.\n\nTo prevent this only resubmit jobs on the pending_list that have not yet\nsignalled.\n\nv2:\n  - Make sure to re-arm the fence callbacks with sched_start().\nv3 (Matt B):\n  - Stop using drm_sched_resubmit_jobs(), which appears to be deprecated\n    and just open-code a simple loop such that we skip calling run_job()\n    on anything already signalled.\n\nLink: https://gitlab.freedesktop.org/drm/xe/kernel/-/issues/4856\nFixes: dd08ebf6c352 (\"drm/xe: Introduce a new DRM driver for Intel GPUs\")\nSigned-off-by: Matthew Auld <matthew.auld@intel.com>\nCc: Thomas Hellstr\u00f6m <thomas.hellstrom@linux.intel.com>\nCc: Matthew Brost <matthew.brost@intel.com>\nCc: William Tseng <william.tseng@intel.com>\nCc: <stable@vger.kernel.org> # v6.8+\nReviewed-by: Matthew Brost <matthew.brost@intel.com>\nReviewed-by: Tejas Upadhyay <tejas.upadhyay@intel.com>\nLink: https://lore.kernel.org/r/20250528113328.289392-2-matthew.auld@intel.com\n(cherry picked from commit 38fafa9f392f3110d2de431432d43f4eef99cd1b)\nSigned-off-by: Thomas Hellstr\u00f6m <thomas.hellstrom@linux.intel.com>",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Migrate DevtoolsInterceptionWithAuthProxyTest to EmbeddedTestServer.\n\nIt was using a SpawnedTestServer acting as an auth proxy.\nSpawnedTestServer is deprecated for a variety of reasons, so this CL\nmakes it use EmbeddedTestServer configured to give proxy auth challenges\ninstead. The EmbeddedTestServer doesn't actually proxy requests,\ninstead handling them directly, but there's no need to it to really\nproxy anything for this test.\n\nConveniently, this also lets us enable the test on Fuchsia. It was\ndisabled there because SpawnedTestServer::TYPE_BASIC_AUTH_PROXY does\nnot work on Fuchsia.\n\nBug: 40242862\nChange-Id: I1be23a408e8f74bc4ba02f159214dd8b15fa5e25\nFixed: 40697469\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6648967\nCommit-Queue: mmenke <mmenke@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1477998}",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll Chrome Android ARM64 PGO Profile\n\nRoll Chrome Android ARM64 PGO profile from chrome-android64-main-1750618051-127eaf1db83544b6c90323085e9ba184b49d90ae-0e0cca4c0daba314e91ad2514312f8bc78136164.profdata to chrome-android64-main-1750623397-1207fc7cfa14c1d878108e116226ee1ed7610812-6e2d74d2d7b81f702846ebdd513e89f639f80000.profdata\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/pgo-android-arm64-chromium\nPlease CC chrome-brapp-engprod@google.com,pgo-profile-sheriffs@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in Chromium main branch: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nTbr: pgo-profile-sheriffs@google.com\nMerge-Approval-Bypass: Chrome autoroller\nChange-Id: I5afd8559ffc7efdb7dabea779fe33affc229226b\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6659832\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1477054}",
        "true_label": [
          0.0,
          0.0,
          1.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[9.x] Revert \"Enable madvise by default for all builds (#110159)\" (#127921)\n\n9.x port of: Revert \"Enable madvise by default for all builds (#110159)\" #126308\n\nThis change did not apply cleanly. In fact this is not strictly a revert, since the change was never actually in 9.x post the Lucene 10 upgrade. However, the semantics of the change still apply - avoid RANDOM everywhere. Even though in 9.x we do set -Dorg.apache.lucene.store.defaultReadAdvice=normal, it is not enough to avoid RANDOM when random is explicitly requested by code.",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[phi-4] use mel filters from audio utils (#36966)\n\n* use mel_filter_bank from audio utils\n\n* Apply style fixes\n\n---------\n\nCo-authored-by: Arthur <48595927+ArthurZucker@users.noreply.github.com>\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "terraform test: stop transforming the config under test with new variables (#37152)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[A11yPerformance] Add Finch config for AXBitset\n\nChange-Id: I5dec29bfe45accd9fc1c050b26deb2b442fce919\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6647651\nReviewed-by: Aaron Leventhal <aleventhal@chromium.org>\nCommit-Queue: Jocelyn Tran <jocelyntran@google.com>\nReviewed-by: Kevin Ellis <kevers@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1477314}",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "mcp: fix resource picker sometimes is empty (#250892)\n\nWe didn't trigger a 'change' after the promise resolved, so if we resolve rec.templates and rec.resources synchronously (for a server with no mcp resources) then we could end before publishing everything\n\nRefs #250890",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(api): add missing file rank enum + more metadata (#2164)",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC: fix SA01, ES01 for pandas.api.types.is_float_dtype (#59861)",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll clank/internal/apps from af024ec07085 to 87625a3482c6 (1 revision)\n\nhttps://chrome-internal.googlesource.com/clank/internal/apps.git/+log/af024ec07085..87625a3482c6\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://skia-autoroll.corp.goog/r/clank-apps-chromium-autoroll\nPlease CC alexilin@google.com,chrome-brapp-engprod@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nBug: None\nTbr: alexilin@google.com\nNo-Try: true\nChange-Id: I5126bd9327ab9b3cd2c2bdd2abc03e130b966387\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6658016\nBot-Commit: chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>\nCommit-Queue: chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1476398}",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[BE] fix typos in torchgen/ (#156083)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156083\nApproved by: https://github.com/jingsh\nghstack dependencies: #156079, #156082",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132349 from p0lyn0mial/upstream-rm-initial-events-list-blueprint\n\napimachinery/meta/types.go: remove InitialEventsListBlueprintAnnotationKey",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "perf: remote symbolicate stack traces (#28470)\n\nFixes #28136 \nCloses #28415\n\nPublish symcache to GCS and generate trace URL during panic.\n\n```\n============================================================\nDeno has panicked. This is a bug in Deno. Please report this\nat https://github.com/denoland/deno/issues/new.\nIf you can reliably reproduce this panic, include the\nreproduction steps and re-run with the RUST_BACKTRACE=1 env\nvar set and include the backtrace in your report.\n\nPlatform: windows x86_64\nVersion: 2.2.5\nArgs: [\"C:\\Users\\divy\\.deno\\bin\\deno.exe\"]\n\nView stack trace at:\nhttps://panic.deno.com/v2.2.5/aarch64-apple-darwin/gszD49_B4utrqB4vrrqBozirqB49prqBwjkwqBw_jBg31Cw5tCg5sDoo3pqB41sDgkkB\n```\n\n## Design\n\n<img\nsrc=https://github.com/user-attachments/assets/396d53cd-1fe7-4d88-9ecd-ea7b74a9a1ed\nheight=500>\n\nExample:\n`https://panic.deno.com/v2.2.3/aarch64-apple-darwin/g4couawkboxb4tbg9oHwqbw6a`\n\nStack walking and symbolicate code is at\nhttps://github.com/denoland/panic/",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC: fix ES01 for pandas.api.types.infer_dtype (#60904)",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll FreeType from 36ddd0cba1a8 to 43940e4cb8fa (1 revision)\n\nhttps://chromium.googlesource.com/chromium/src/third_party/freetype2.git/+log/36ddd0cba1a8..43940e4cb8fa\n\n2025-06-23 apodtele@gmail.com [truetype] Restore non-persistent CVT and storage.\r\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/freetype-chromium\nPlease CC bungeman@google.com,drott@google.com,thestig@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_msan_rel_ng;luci.chromium.try:linux-blink-rel;luci.chromium.try:mac12.0-blink-rel;luci.chromium.try:win10.20h2-blink-rel\nTbr: bungeman@google.com,drott@google.com,thestig@google.com\nChange-Id: I0b98de0a7c098acf7d013822c8d1e2c0441ae6e9\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6661862\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: Ben Wagner <bungeman@google.com>\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nReviewed-by: Ben Wagner <bungeman@google.com>\nCr-Commit-Position: refs/heads/main@{#1477354}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll Depot Tools from 8aee5412837c to dc4e91162356 (1 revision)\n\nhttps://chromium.googlesource.com/chromium/tools/depot_tools.git/+log/8aee5412837c..dc4e91162356\n\n2025-06-24 sshrimp@google.com Revert \"Telemetry: disable for non-linux\"\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/depot-tools-chromium-autoroll\nPlease CC begizi@google.com,chops-source-team@google.com,ddoman@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nCq-Include-Trybots: luci.chromium.try:linux-utr-tester;luci.chromium.try:win-utr-tester\nBug: chromium:326277821\nTbr: begizi@google.com,ddoman@google.com\nChange-Id: I040f624ca5864c429fd82e403731877533d90280\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6665395\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1478021}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "client/service: use containerd errdefs checks\n\nSigned-off-by: Pawe\u0142 Gronowski <pawel.gronowski@docker.com>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "build: avoid export internal renames (#60739)\n\nThere is no need to minify internal names as these are minified by the consuming app\n\nPR Close #60739",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Adding TFVision's prominent Object Detection Models concised overview document to the TF Vision library.\n\nPiperOrigin-RevId: 741414573",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "\ud83d\udd34 [VLM] modeling updates (#38317)\n\n* updates\n\n* fixup\n\n* fix tests\n\n* fix test\n\n* fix\n\n* let it be here for now, till monday\n\n* two more fixes\n\n* persimmon\n\n* fixup\n\n* fix\n\n* fixup\n\n* make sure fuyu runs now that LM has new attn API\n\n* fixup + tests\n\n* qwen vl uses new mask interface as well\n\n* qwen image features format\n\n* update\n\n* remove image_sizes\n\n* address comments\n\n* i am dumb...",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "stacks: load credentials from config file on startup (#35952)\n\n* stacks: load credentials from config file on startup\r\n\r\n* delete unneeded file",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "FIX update debian 32 bit CI config to avoid a SIMD related bug in numpy 1.24.2 on some GitHub Actions CI workers (#29771)\n\nCo-authored-by: Lo\u00efc Est\u00e8ve <loic.esteve@ymail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #131924 from yashsingh74/agnhost-netexec\n\nagnhost: added server address for conntrack cleanup entries",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Change AsyncRunTask to be move-only.\n\nEnqueueTaskWithStatus no longer requires the functor be to copyable, meaning the extra `shared_ptr` wrapping is no longer needed.\n\nPiperOrigin-RevId: 771491758",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll Perfetto Trace Processor Win from faeba3e4b27b to e52892582ae3\n\nhttps://android.googlesource.com/platform/external/perfetto.git/+log/faeba3e4b27b..e52892582ae3\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/perfetto-trace-processor-win-chromium\nPlease CC chrometto-team@google.com,perfetto-bugs@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nTbr: perfetto-bugs@google.com\nChange-Id: I248e551886aa843feb29382fc06288bcfaea1610\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6662138\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1477292}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Run WebNN unit tests on the internal.optimization_guide builder\n\nWith this change the WebNN unit tests are run on a builder where\nenable_ml_internal is true so that we get coverage for using the TFLite\nGPU delegate provided by the Optimization Guide internal library.\n\nChange-Id: I331532c8c9cbb38e609558557dbe1a1896d2215e\nBug: 394119734\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6337341\nReviewed-by: Haiyang Pan <hypan@google.com>\nCommit-Queue: Reilly Grant <reillyg@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1478337}",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Import wpt@f9fe3ed961bfa843a2736fbf78c9d631734c941d\n\nhttps://github.com/web-platform-tests/wpt/compare/54fbbcbda...f9fe3ed96\n\nUsing wpt-import in Chromium e8271c006ae205c4e78aa3eba60bd5b6bab76bea.\nWith Chromium commits locally applied on WPT:\n  c178061101 \"[LCP WPT] Fix test expectation in background-image- [...]\n  9524cbae15 \"[FedCM] Adding helper functions to reduce timeout\"\n  0fc3094ee4 \"Implement the scrollParent method for HTMLElement.\"\n\nNote to gardeners: This CL imports external tests and adds expectations\nfor those tests; if this CL is large and causes a few new failures,\nplease fix the failures by adding new lines to TestExpectations rather\nthan reverting. See:\nhttps://chromium.googlesource.com/chromium/src/+/main/docs/testing/web_platform_tests.md\n\nDirectory owners for changes in this CL:\ncbiesinger@chromium.org:\n  external/wpt/css/css-flexbox\nfoolip@chromium.org:\n  external/wpt/infrastructure\n\nNOAUTOREVERT=true\n\nNo-Export: true\nValidate-Test-Flakiness: skip\nCq-Include-Trybots: luci.chromium.try:linux-blink-rel\nChange-Id: I32d28624dbb8f0b73013d66835642091572e7136\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6663885\nReviewed-by: Jonathan Lee <jonathanjlee@google.com>\nCommit-Queue: Jonathan Lee <jonathanjlee@google.com>\nAuto-Submit: WPT Autoroller <wpt-autoroller@chops-service-accounts.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1477685}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[BE] fix typos in benchmarks/ (#156077)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156077\nApproved by: https://github.com/Skylion007, https://github.com/malfet\nghstack dependencies: #156069",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Remove viz::ContentDrawQuadBase::texture_size.\n\nThis field is no longer necessary.\n\nTEST=bots build\n\nBug: 425351389\nChange-Id: I8c2b3ba65f54e508f9df502fd560029f5bb267d4\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6653194\nCommit-Queue: Zhenyao Mo <zmo@chromium.org>\nReviewed-by: Vasiliy Telezhnikov <vasilyt@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1476846}",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Add array API tests for `pairwise_distances` (#31658)\n\nCo-authored-by: Olivier Grisel <olivier.grisel@ensta.org>\nCo-authored-by: Tim Head <betatim@gmail.com>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[nativert] Move Pytree (#155136)\n\nSummary: fbcode/sigmoid/core/common -> fbcode/caffe2/torch/nativert/common\n\nTorch Native Runtime RFC: https://github.com/pytorch/rfcs/pull/72\n\nTest Plan:\n```\nbuck run fbcode//mode/dev-nosan  //caffe2/test/cpp/nativert:pytree_test\n```\n\nOSS CI\n\nRollback Plan:\n\nDifferential Revision: D75965059\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155136\nApproved by: https://github.com/zhxchen17, https://github.com/XuehaiPan, https://github.com/zou3519",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132194 from alvaroaleman/local0dev\n\nAdd an interface that all apply configurations implement",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #50127 from thaJeztah/swagger_uint\n\napi/swagger: quote maxUint64 example value",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "extensions: Merge jni bridge for keybinding into ExtensionActionsBridge\n\nMerge the jni bridge for extension keybindings into\nExtensionActionsBridge. It makes the keybinding registry created per\nprofile, and makes it owned by the ExtensionActionsBridge.\nThis doesn't add new functionalities, but is an important step to get\nextension action related commands triggered from keyboard shortcuts to\nshow popup on the toolbar for example.\n\nBug: 406136564\nTest: commands are still triggered from keyboard shortcut.\nChange-Id: I822f7c86b3d8f7d627bdb392a1885fc2ed1a54c7\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6657760\nCommit-Queue: Keigo Oka <oka@chromium.org>\nReviewed-by: Sirisha Kavuluru <skavuluru@google.com>\nReviewed-by: Shuhei Takahashi <nya@chromium.org>\nAuto-Submit: Keigo Oka <oka@chromium.org>\nReviewed-by: James Cook <jamescook@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1478299}",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix: SSE Stream parser expects additional space after colon \"data:\" (#559)\n\n* Update api_requestor.py\r\n\r\n* fix: SSE event for api_requestor.py",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Handle Dawn breaking change in CreateInstance (part 2)\n\nMissed this before because it requires building with\ndawn_enable_opengles = true.\n\nBug: 414868137\nChange-Id: I6ea988be514d15c3c415beaddbed90145b934786\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6656711\nReviewed-by: Loko Kung <lokokung@google.com>\nAuto-Submit: Kai Ninomiya <kainino@chromium.org>\nCommit-Queue: Kai Ninomiya <kainino@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1476780}",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "FEA Add array API support for  GaussianMixture (#30777)\n\nCo-authored-by: Stefanie Senger <stefanie.senger@posteo.de>\nCo-authored-by: Olivier Grisel <olivier.grisel@ensta.org>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Set non-experimental WatchProgressNotifyInterval config field",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ez] remove unused functions (#156466)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156466\nApproved by: https://github.com/jingsh",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Update tests for StructuredAuthenticationConfiguration feature gate GA\n\nSigned-off-by: Anish Ramasekar <anish.ramasekar@gmail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Granting `kibana_system` reserved role access to \"all\" privileges to `.adhoc.alerts*` and `.internal.adhoc.alerts*` indices (#127321)\n\n* Granting `kibana_system` reserved role access to \"all\" privileges to `.adhoc.alerts*` and `.internal.adhoc.alerts*` indices\n\n* Update docs/changelog/127321.yaml\n\n* [CI] Auto commit changes from spotless\n\n* Replace `\"all\"` with the specific privileges for the `kibana_system` role\n\n* Fix tests\n\n* Fix CI\n\n* Updated privileges\n\n* Updated privileges\n\nAdd `\"maintenance\"` to allow `refresh=true` option on bulk API call.\n\n* Remove redundant code\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Add dist_info to non-building setup.py commands (#156709)\n\nThis adds the `dist_info` command to the list of non-building commands of `setup.py`, which avoids the current situation where simple metadata generation with any packaging tool already triggers a build.\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156709\nApproved by: https://github.com/Skylion007",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Cutlass] Allow filtering by fast_accum for scaled_mm (#155195)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155195\nApproved by: https://github.com/drisspg\nghstack dependencies: #154829, #154835",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Set vision config to None for Gemma 1B conversion (#37366)\n\n* Set vision config to None for Gemma 1B conversion\n\n* Trigger tests\n\n---------\n\nCo-authored-by: Matt <rocketknight1@gmail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "TST Improve tests for neighbor models with X=None (#30101)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Use ImageClassificationTask from yolo darknet_classification config.\n\nPiperOrigin-RevId: 573803409",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Add Fast Image Processor for PoolFormer (#37182)\n\n* support poolformer fast image processor\n\n* support test for crop_pct=None\n\n* run make style\n\n* Apply suggestions from code review\n\n* rename test\n\n---------\n\nCo-authored-by: Yoni Gozlan <74535834+yonigozlan@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC Copyedit species names in species distribution modeling example (#29654)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Update Throbber start/stop logic to fix race condition.\n\nThis cl fixes a race condition where the Throbber's animation timer\ncould fire after the object was destroyed, which sometimes happened when\nthe throbber was still active in a dialog during page reloads. This\nchange replaces it with a WeakPtr to ensure the animation callback is\nsafely invalidated when the Throbber is destroyed.\n\nBug b:425927824\n\nChange-Id: Iaa1aa8f835bf916f78cd1966b518b3193bbdf53b\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6652302\nCommit-Queue: Michelle Abreo <michelleabreo@google.com>\nReviewed-by: Dana Fried <dfried@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1476787}",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat(api): adding file purposes (#1401)",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "docs: fix typo (#37567)\n\nCo-authored-by: Anthony <anthony.song@capitalone.com>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Use the fact that sprintf appends a `\\0`",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "build: migrate more targets of `@angular/core` to `ts_project` (#61370)\n\nMigrates more targets of `@angular/core` to `ts_project`. Remaining are:\n\n - tests\n - schematics\n\nPR Close #61370",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Componentize chrome/browser/ui/toolbar (3/3)\n\nThis CL componentizes the test files in chrome/browser/ui/toolbar\n(and sub dirs) by building them from the proper BUILD.gn files.\n\nThe following targets are complete:\n- //chrome/browser/ui/toolbar:unit_tests,\n- //chrome/browser/ui/toolbar:browser_tests,\n- //chrome/browser/ui/toolbar:interactive_tests,\n- //chrome/browser/ui/tollbar/pinned_toolbar:browser_tests\n- //chrome/browser/ui/tollbar/cast:browser_tests\n\nR=dljames@chromium.org\n\nBug: 369436587\nChange-Id: I6349689b4b48d430d13c93cd622175dbcc9e9aef\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6666184\nReviewed-by: Darryl James <dljames@chromium.org>\nCommit-Queue: Antonio Gomes <tonikitoo@igalia.com>\nCr-Commit-Position: refs/heads/main@{#1478067}",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Revert \"[inductor][triton pin] TMA shim refactor & mm, mm_scaled_grouped support (#155182)\"\n\nThis reverts commit b07725a9516028a485153c4b5356b3e33b990f81.\n\nReverted https://github.com/pytorch/pytorch/pull/155182 on behalf of https://github.com/davidberard98 due to fails on triton 3.2 (internally) ([comment](https://github.com/pytorch/pytorch/pull/155182#issuecomment-2960664845))",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Format event with \"warning\" yellow and prefix with \"Event: \" (#31536)\n\nIt's useful to quickly see where new events are kicking off new\r\nrendering. This uses the new \"warning\" color (yellow) to do that. This\r\nis to help distinguish it from the purple (secondary color) which is\r\nused for the commit phase which is more of a follow up and it's often\r\nthat you have several rerenders within one event which makes it hard to\r\ntell a part where it starts and event otherwise.\r\n\r\nFor the span marking between previous render within the same event and\r\nthe next setState, I use secondary-light (light purple) since it's kind\r\nof still part of the same sequence at that point. It's usually a spawned\r\nrender (e.g. setState in useEffect or microtask) but it can also be\r\nsequential flushSync.\r\n\r\nI was bothered by that the event name is the only thing that's lower\r\ncase so I prefixed it with `Event: ` like the JS traces are.\r\n\r\n<img width=\"1499\" alt=\"Screenshot 2024-11-13 at 7 15 45\u202fPM\"\r\nsrc=\"https://github.com/user-attachments/assets/0c81c810-6b5d-4fc7-9bc0-d15b53844ade\">\r\n\r\nIt might be a little confusing why our track starts earlier than the JS\r\none below in the \"Main Thread\" flamegraph which looks the same. That's\r\nbecause ours is the start of the event time which is when the click\r\nhappens where as the Main Thread one is when the JS event loop gets\r\naround to processing the event.",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat: extract out `ImageModel`, `AudioModel`, `SpeechModel` (#1586)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll Platform Experience Win from 9e9bfb4f0d59 to c27fc55916fe (2 revisions)\n\nhttps://chrome-internal.googlesource.com/chrome/browser/platform_experience/win.git/+log/9e9bfb4f0d59..c27fc55916fe\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://skia-autoroll.corp.goog/r/platform-experience-win-chromium\nPlease CC chrome-platform-experience-win@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nCq-Include-Trybots: luci.chrome.try:win64-rel-ready\nBug: chromium:422212502,chromium:423037244\nTbr: chrome-platform-experience-win@google.com\nChange-Id: Ie0be4fa0f9918a76fb0d1879e3a0ed361e2c1beb\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6658398\nBot-Commit: chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>\nCommit-Queue: chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1476530}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132149 from p0lyn0mial/upstream-watchlist-meta-client-rm\n\nmetadata client: remove support for API streaming",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Align meta deducing for fft_r2c with fft_r2c_mkl on XPU (#156048)\n\nThere is a memory layout mismatching between `fft_r2c` XPU and Inductor meta deducing.\nOriginal `fft_r2c` Inductor meta deducing for XPU backend is aligned with CPU (fallback). This PR is to correct the Inductor meta deducing and update the torch-xpu-ops commit to [intel/torch-xpu-ops@`3a9419c`](https://github.com/intel/torch-xpu-ops/commit/3a9419c8bb6a98dd3e3cd473c36691fb4abeae40).\nThe XPU implementation first performs the R2C transform on the last dimension, followed by iterative C2C transforms on the remaining dimensions.\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156048\nApproved by: https://github.com/guangyey, https://github.com/etaf, https://github.com/jansel",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.index.engine.ThreadPoolMergeExecutorServiceDiskSpaceTests testUnavailableBudgetBlocksNewMergeTasksFromStartingExecution #129148",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Import wpt@d6346b55aae8c42229261e781d8ca6a9b4a08b3a\n\nhttps://github.com/web-platform-tests/wpt/compare/b4021dadb...d6346b55a\n\nUsing wpt-import in Chromium 3b9732eaf6b2b7da5d332f4192690c4619fac8c9.\nWith Chromium commits locally applied on WPT:\n  c178061101 \"[LCP WPT] Fix test expectation in background-image- [...]\n\nNote to gardeners: This CL imports external tests and adds expectations\nfor those tests; if this CL is large and causes a few new failures,\nplease fix the failures by adding new lines to TestExpectations rather\nthan reverting. See:\nhttps://chromium.googlesource.com/chromium/src/+/main/docs/testing/web_platform_tests.md\n\nNOAUTOREVERT=true\nR=rubber-stamper@appspot.gserviceaccount.com\n\nNo-Export: true\nValidate-Test-Flakiness: skip\nCq-Include-Trybots: luci.chromium.try:linux-blink-rel\nChange-Id: I85148724f1bf757578556bf3ca2bee035f2c8445\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6658491\nBot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nAuto-Submit: WPT Autoroller <wpt-autoroller@chops-service-accounts.iam.gserviceaccount.com>\nCommit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1476938}",
        "true_label": [
          0.0,
          1.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[MPSInductor][BE] Fix multistage reduction check (#156567)\n\nFrom less than max threadgroup size to less or equal to that, which eliminates redundant trivial loops.\n\nI.e. it changes shader code generated for\n```python\nimport torch\n\ndef f(x):\n    var, mean = torch.var_mean(x, dim=2, keepdim = True)\n    return x / var, var\n\ntorch.compile(f)(torch.rand(1, 16, 1024, dtype=torch.float32, device='mps'))\n\n```\n\nfrom\n```metal\n[[max_total_threads_per_threadgroup(1024)]]\nkernel void generated_kernel(\n    device float* out_ptr1,\n    device float* out_ptr2,\n    constant float* in_ptr0,\n    uint2 thread_pos [[thread_position_in_grid]],\n    uint2 group_pos [[thread_position_in_threadgroup]]\n) {\n    auto xindex = thread_pos.x;\n    auto r0_index = thread_pos.y;\n    int x0 = xindex;\n    threadgroup float3 tmp_acc_0[1024];\n    tmp_acc_0[r0_index * 1] = 0.0;\n    for(auto r0_1_cnt = 0; r0_1_cnt < 1; ++r0_1_cnt) {\n        int r0_1 = 1 * r0_index + r0_1_cnt;\n        auto tmp0 = in_ptr0[r0_1 + 1024*x0];\n        tmp_acc_0[r0_index * 1] = ::c10::metal::welford_combine(tmp_acc_0[r0_index * 1], float3(tmp0, 0.0, 1.0));\n    }\n    auto tmp1 = c10::metal::threadgroup_welford_combine(tmp_acc_0, 1024);\n    auto tmp2 = 1023.0;\n    auto tmp3 = tmp1.y / tmp2;\n    out_ptr1[x0] = static_cast<float>(tmp3);\n    for(auto r0_1_cnt = 0; r0_1_cnt < 1; ++r0_1_cnt) {\n        int r0_1 = 1 * r0_index + r0_1_cnt;\n        auto tmp4 = in_ptr0[r0_1 + 1024*x0];\n        auto tmp5 = tmp4 / tmp3;\n        out_ptr2[r0_1 + 1024*x0] = static_cast<float>(tmp5);\n    }\n}\n```\nto\n```metal\n[[max_total_threads_per_threadgroup(1024)]]\nkernel void generated_kernel(\n    device float* out_ptr1,\n    device float* out_ptr2,\n    constant float* in_ptr0,\n    uint2 thread_pos [[thread_position_in_grid]],\n    uint2 group_pos [[thread_position_in_threadgroup]]\n) {\n    auto xindex = thread_pos.x;\n    auto r0_index = thread_pos.y;\n    int r0_1 = r0_index;\n    int x0 = xindex;\n    threadgroup float tmp_acc_0[1024];\n    auto tmp0 = in_ptr0[r0_1 + 1024*x0];\n    tmp_acc_0[r0_index * 1] = tmp0;\n    auto tmp1 = c10::metal::threadgroup_welford_reduce(tmp_acc_0, 1024);\n    auto tmp2 = 1023.0;\n    auto tmp3 = tmp1.y / tmp2;\n    out_ptr1[x0] = static_cast<float>(tmp3);\n    auto tmp4 = tmp0 / tmp3;\n    out_ptr2[r0_1 + 1024*x0] = static_cast<float>(tmp4);\n}\n\n``\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156567\nApproved by: https://github.com/dcci\nghstack dependencies: #156566",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132177 from pgimalac/apiserver-avoid-template-for-dce\n\nRemove use of html/template in apiserver to avoid disabling dead code elimination",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[refactor] is_known_channels_last_contiguous* -> definitely_channels_last_contiguous* (#155499)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155499\nApproved by: https://github.com/laithsakka",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "chore[DevTools/Tree]: don't pre-select root element and remove unused code (#32015)\n\nIn this PR:\r\n1. Removed unused code in `Tree.js`\r\n2. Removed logic for pre-selecting first element in the tree by default.\r\nThis is a bit clowny, because it steals focus and resets scroll, when\r\nuser attempts to expand / collapse some subtree.\r\n3. Updated comments around\r\nhttps://github.com/facebook/react/commit/1c381c588aed1ed6814f1be04fbe42cd069ce174.\r\n\r\nTo expand on 3-rd point, for someone who might be reading this in the\r\nfuture:\r\nWe can't guarantee focus of RDT browser extension panels, because they\r\nare hosted in an `iframe`. Attempting to fire any events won't have any\r\nresult, user action with the corresponding `iframe` is required in order\r\nfor this `iframe` to obtain focus.\r\n\r\nThe only reason why built-in Elements panel in Chrome works correctly is\r\nbecause it is supported natively somewhere in Chrome / Chrome DevTools.\r\nAlso, when you select an element on the application page, Chrome will\r\nmake sure that Elements panel opened, which technically guarantees focus\r\ninside DevTools window and Elements panel subview.\r\n\r\nAs of today, we can't navigate user to third-party extensions panels,\r\nthere is no API for this, hence no ability to guarantee focused RDT\r\npanels.",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Bump micromatch from 4.0.5 to 4.0.8 in /compiler (#31186)\n\nBumps [micromatch](https://github.com/micromatch/micromatch) from 4.0.5\r\nto 4.0.8.\r\n<details>\r\n<summary>Release notes</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/micromatch/micromatch/releases\">micromatch's\r\nreleases</a>.</em></p>\r\n<blockquote>\r\n<h2>4.0.8</h2>\r\n<p>Ultimate release that fixes both CVE-2024-4067 and CVE-2024-4068. We\r\nconsider the issues low-priority, so even if you see automated scanners\r\nsaying otherwise, don't be scared.</p>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Changelog</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/micromatch/micromatch/blob/master/CHANGELOG.md\">micromatch's\r\nchangelog</a>.</em></p>\r\n<blockquote>\r\n<h2>[4.0.8] - 2024-08-22</h2>\r\n<ul>\r\n<li>backported CVE-2024-4067 fix (from v4.0.6) over to 4.x branch</li>\r\n</ul>\r\n<h2>[4.0.7] - 2024-05-22</h2>\r\n<ul>\r\n<li>this is basically v4.0.5, with some README updates</li>\r\n<li><strong>it is vulnerable to CVE-2024-4067</strong></li>\r\n<li>Updated braces to v3.0.3 to avoid CVE-2024-4068</li>\r\n<li>does NOT break API compatibility</li>\r\n</ul>\r\n<h2>[4.0.6] - 2024-05-21</h2>\r\n<ul>\r\n<li>Added <code>hasBraces</code> to check if a pattern contains\r\nbraces.</li>\r\n<li>Fixes CVE-2024-4067</li>\r\n<li><strong>BREAKS API COMPATIBILITY</strong></li>\r\n<li>Should be labeled as a major release, but it's not.</li>\r\n</ul>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/8bd704ec0d9894693d35da425d827819916be920\"><code>8bd704e</code></a>\r\n4.0.8</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/a0e68416a44da10f3e4e30845ab95af4fd286d5a\"><code>a0e6841</code></a>\r\nrun verb to generate README documentation</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/4ec288484f6e8cccf597ad3d43529c31d0f7a02a\"><code>4ec2884</code></a>\r\nMerge branch 'v4' into hauserkristof-feature/v4.0.8</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/03aa8052171e878897eee5d7bb2ae0ae83ec2ade\"><code>03aa805</code></a>\r\nMerge pull request <a\r\nhref=\"https://redirect.github.com/micromatch/micromatch/issues/266\">#266</a>\r\nfrom hauserkristof/feature/v4.0.8</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/814f5f70efcd100ca9d29198867812a3d6ab91a8\"><code>814f5f7</code></a>\r\nlint</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/67fcce6a1077c2faf5ad0c5f998fa70202cc5dae\"><code>67fcce6</code></a>\r\nfix: CHANGELOG about braces &amp; CVE-2024-4068, v4.0.5</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/113f2e3fa7cb30b429eda7c4c38475a8e8ba1b30\"><code>113f2e3</code></a>\r\nfix: CVE numbers in CHANGELOG</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/d9dbd9a266686f44afb38da26fe016f96d1ec04f\"><code>d9dbd9a</code></a>\r\nfeat: updated CHANGELOG</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/2ab13157f416679f54e3a32b1425e184bd16749e\"><code>2ab1315</code></a>\r\nfix: use actions/setup-node@v4</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/1406ea38f3e24b29f4d4f46908d5cffcb3e6c4ce\"><code>1406ea3</code></a>\r\nfeat: rework test to work on macos with node 10,12 and 14</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/micromatch/micromatch/compare/4.0.5...4.0.8\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=micromatch&package-manager=npm_and_yarn&previous-version=4.0.5&new-version=4.0.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat(language-service): support to fix missing required inputs diagnostic (#50911)\n\nSupport to add the missing required inputs into the element and append\nafter the last attribute of the element.\n\nBut it skips the structural directive shorthand attribute. For example,\n`<a *ngFor=\"\"></a>`, its shorthand is `<ng-template ngFor>`, the `valueSpan`\nof the `ngFor` is empty, and the info is lost, so it can't use to insert\nthe missing attribute after it.\n\nPR Close #50911",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll Crossbench from 1fcf64fb04e2 to 76223aed1ca1 (1 revision)\n\nhttps://chromium.googlesource.com/crossbench.git/+log/1fcf64fb04e2..76223aed1ca1\n\n2025-06-20 cwd@google.com generated proto parsing code for Android dumpsys\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/crossbench-chromium\nPlease CC cbruni@google.com,crossbench@chromium.org,johnchen@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nTbr: johnchen@google.com\nChange-Id: Ic192e983a1e878d2c401c2d44f9378014cf240d1\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6655491\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1476380}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "prior may be unknown when planning data sources\n\nWhile the proposed plan value for managed resource is only a suggestion,\ndeferred data sources must be completely planed by core, hence set\nappropriate unknown values. We do this by using a prior unknown, which\nmust be taken into account by all nested types.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Sema] Add null check in `createMemberwiseInitParameter`\n\nThe property wrapper initializer info may be null if e.g we had a\nrequest cycle, just use the property's interface type in that case.\n\nrdar://82899428",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ios blink] Avoid underscores in chrome_framework bundle id\n\nDon't override the framework bundle id in the chrome_app template so\nthat it uses the bundle id specified in the ios_framework_bundle\ntemplate which uses the same value, but replaces underscores with\nhyphens as required by the rfc1034 spec that bundle ids have to follow.\n\nBug: 40254930\nCq-Include-Trybots: luci.chromium.try:ios-blink-rel-fyi\nChange-Id: I6a6a696466a906af8f496338821ec9fd75e46916\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6666220\nCommit-Queue: Rohit Rao <rohitrao@chromium.org>\nAuto-Submit: Sunny Sachanandani <sunnyps@chromium.org>\nReviewed-by: Rohit Rao <rohitrao@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1478126}",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Introduce special handling for updates involving a single resource slice.\n\nTypically, a single DRA driver uses only one ResourceSlice per resource pool.\nCurrently, the ResourceSliceController updates this slice by deleting and\nrecreating it when devices are added or removed. For this common\nsingle-slice-per-pool scenario, we can improve efficiency by directly updating\nthe existing ResourceSlice instead.",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "s390/mm: Fix in_atomic() handling in do_secure_storage_access()\n\nKernel user spaces accesses to not exported pages in atomic context\nincorrectly try to resolve the page fault.\nWith debug options enabled call traces like this can be seen:\n\nBUG: sleeping function called from invalid context at kernel/locking/rwsem.c:1523\nin_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 419074, name: qemu-system-s39\npreempt_count: 1, expected: 0\nRCU nest depth: 0, expected: 0\nINFO: lockdep is turned off.\nPreemption disabled at:\n[<00000383ea47cfa2>] copy_page_from_iter_atomic+0xa2/0x8a0\nCPU: 12 UID: 0 PID: 419074 Comm: qemu-system-s39\nTainted: G        W           6.16.0-20250531.rc0.git0.69b3a602feac.63.fc42.s390x+debug #1 PREEMPT\nTainted: [W]=WARN\nHardware name: IBM 3931 A01 703 (LPAR)\nCall Trace:\n [<00000383e990d282>] dump_stack_lvl+0xa2/0xe8\n [<00000383e99bf152>] __might_resched+0x292/0x2d0\n [<00000383eaa7c374>] down_read+0x34/0x2d0\n [<00000383e99432f8>] do_secure_storage_access+0x108/0x360\n [<00000383eaa724b0>] __do_pgm_check+0x130/0x220\n [<00000383eaa842e4>] pgm_check_handler+0x114/0x160\n [<00000383ea47d028>] copy_page_from_iter_atomic+0x128/0x8a0\n([<00000383ea47d016>] copy_page_from_iter_atomic+0x116/0x8a0)\n [<00000383e9c45eae>] generic_perform_write+0x16e/0x310\n [<00000383e9eb87f4>] ext4_buffered_write_iter+0x84/0x160\n [<00000383e9da0de4>] vfs_write+0x1c4/0x460\n [<00000383e9da123c>] ksys_write+0x7c/0x100\n [<00000383eaa7284e>] __do_syscall+0x15e/0x280\n [<00000383eaa8417e>] system_call+0x6e/0x90\nINFO: lockdep is turned off.\n\nIt is not allowed to take the mmap_lock while in atomic context. Therefore\nhandle such a secure storage access fault as if the accessed page is not\nmapped: the uaccess function will return -EFAULT, and the caller has to\ndeal with this. Usually this means that the access is retried in process\ncontext, which allows to resolve the page fault (or in this case export the\npage).\n\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nAcked-by: Alexander Gordeev <agordeev@linux.ibm.com>\nAcked-by: Christian Borntraeger <borntraeger@linux.ibm.com>\nLink: https://lore.kernel.org/r/20250603134936.1314139-1-hca@linux.ibm.com\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com>",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Update pretrained_models.md\n\nAdded Kaggle label to tfhub.dev links directing to kaggle, added kaggle label to documentation wherever necesasry.",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "docs/api: update image tarball format\n\nSigned-off-by: Kaita Nakamura <kaita.nakamura0830@gmail.com>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "refactor: handle deno_media_type having `Html` and `Sql` variants (#28495)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC Correct a typo in model_persistence.rst (#30880)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0
        ]
      }
    ]
  },
  "required_skills": {
    "total_errors": 3326,
    "error_rate": 0.6564041839352674,
    "incorrect_samples": [
      {
        "text": "[11.x] Simplify PHP comments (#6316)\n\n* Simplifies comments\r\n\r\n* Apply fixes from StyleCI\r\n\r\n* Removes non used line\r\n\r\n* remove some comments\r\n\r\n---------\r\n\r\nCo-authored-by: StyleCI Bot <bot@styleci.io>\r\nCo-authored-by: Taylor Otwell <taylor@laravel.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "docs: update tutorials and playground to v20 (#61726)\n\nupdate boilerplates to use v20 final\n\nPR Close #61726",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ci] Scope permissions for runtime_commit_artifacts.yml (#32701)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ez] fix typo in comment (#156402)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156402\nApproved by: https://github.com/BoyuanFeng\nghstack dependencies: #156397",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[embedded] Resolve a circular dependency problem in SwiftShims when using pico-libc",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fixed incorrect formatting for inline pluralized code references in docs.",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "Merge branch '9.x'\n\n# Conflicts:\n#\tCHANGELOG.md\n#\tcomposer.json",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "[ASTGen] Implement bridging for `using` declaration",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "use guard_or_false in checkInBoundsForStorage (#155874)\n\nthis was added in https://github.com/pytorch/pytorch/pull/147354, the comment already justify guard_or_false\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155874\nApproved by: https://github.com/bobrenjc93",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "chore(internal): formatting (#1311)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "final renaming for function results",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "ENH: set __module__ for Dtype and Index classes (#59909)\n\nCo-authored-by: Amir <acb@REVWKS049.d2sim7.loc>\r\nCo-authored-by: Joris Van den Bossche <jorisvandenbossche@gmail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "ephemeral: remove write only paths\n\nwe might need them later on, but it will be easier to find the right place and abstraction when the need to use them arises",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[compiler] Validate against mutable functions being frozen\n\nThis revisits a validation I built a while ago, trying to make it more strict this time to ensure that it's high-signal.\n\nWe detect function expressions which are *known* mutable \u2014 they definitely can modify a variable defined outside of the function expression itself (modulo control flow). This uses types to look for known Store and Mutate effects only, and disregards mutations of effects. Any such function passed to a location with a Freeze effect is reported as a validation error.\n\nThis is behind a flag and disabled by default. If folks agree this makes sense to revisit, i'll test out internally and we can consider enabling by default.\n\nghstack-source-id: 075a731444ce95e52dbd5ea3be85c16d428927f5\nPull Request resolved: https://github.com/facebook/react/pull/33079",
        "true_label": [
          1.0,
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix PushQueriesIT.testLike() fails (#129647)\n\nFix an issue where PushQueriesIT.testLike() fails if we randomly generate the empty string as a test value",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Clarify error message to ensure min 28x28 image supplied for Qwen 2.5 VL (#37264)\n\nfix: clarify error message for min 28x28 images\n\nCo-authored-by: Pavel Iakubovskii <qubvel@gmail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[invoke_subgraph] Use eager input vals to constrain input strides (#155291)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155291\nApproved by: https://github.com/ezyang, https://github.com/zou3519",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Docs] Convert to markdown: torch.compiler_transformations.rst, torch.compiler.config.rst (#155347)\n\nPart of changes #155040 (parent PR #155120)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155347\nApproved by: https://github.com/svekars",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix: add missing background colour pair (#249675)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[flax/mistral] support sliding_window: null in config (#37402)\n\nflax/mistral: Allow sliding_window to be set to none",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Revert \"[flex attention][triton pin] triton_helpers shim for TMA apis (#154858)\" (#155640)\n\nThis reverts commit ea7b233015ff00098df687884be4e2efbf7a55fa.\n\nIt fails internal tests in fbcode, but they weren't running so we didn't get signal\n\nReverting w/ a PR/diff because the PR has been landed for ~1 week - too old to revert directly from internal.\n\nDifferential Revision: [D76380887](https://our.internmc.facebook.com/intern/diff/D76380887)\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155640\nApproved by: https://github.com/nmacchioni, https://github.com/danzimm",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "add sound for `chatUserActionRequired`, add `announcement` setting (#248952)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "Switch wtf/pod_{red_black_tree,tree_test_helpers}*.* to blink namespace\n\n* As these files are being modified, take the opportunity to rename\n  PODRedBlackTree to PodRedBlackTree, aligning with the Google C++\n  style guide.\n\nThis CL has no behavior changes.\n\nBug: 422768753\nChange-Id: Id8d9162c9eeaf3ba96cd4b3bb2ff9c9ca7b16edf\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6665278\nAuto-Submit: Kent Tamura <tkent@chromium.org>\nCommit-Queue: Fredrik S\u00f6derquist <fs@opera.com>\nReviewed-by: Fredrik S\u00f6derquist <fs@opera.com>\nCr-Commit-Position: refs/heads/main@{#1477772}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll WebRTC from fe0a0c784efa to edbf76f93f4a (15 revisions)\n\nhttps://webrtc.googlesource.com/src.git/+log/fe0a0c784efa..edbf76f93f4a\n\n2025-06-25 webrtc-version-updater@webrtc-ci.iam.gserviceaccount.com Update WebRTC code version (2025-06-25T04:06:28).\n2025-06-24 phancke@meta.com av1: (partially) follow spec fmtp parameter comparisons\n2025-06-24 chromium-webrtc-autoroll@webrtc-ci.iam.gserviceaccount.com Roll chromium_revision ab4881aeb4..ff8c208486 (1478047:1478216)\n2025-06-24 phancke@meta.com IWYU modules/audio_coding\n2025-06-24 phancke@meta.com Do not restart SCTP transport on DTLS restart\n2025-06-24 phancke@meta.com pqc: add missing GetName implementation\n2025-06-24 phancke@meta.com IWYU net/ again\n2025-06-24 mbonadei@webrtc.org Revert \"Change SetLocalContent / SetRemoteContent to update header extensions\"\n2025-06-24 chromium-webrtc-autoroll@webrtc-ci.iam.gserviceaccount.com Roll chromium_revision c96a5de562..ab4881aeb4 (1477697:1478047)\n2025-06-24 mbonadei@webrtc.org Revert \"Enable scenario test for L4S\"\n2025-06-24 phancke@meta.com IWYU audio/\n2025-06-24 phancke@meta.com Use peerconnection field trials instead of context in sdp O/A\n2025-06-24 jakobi@webrtc.org Add function to create an audio decoder ahead of time.\n2025-06-24 mbonadei@webrtc.org Revert \"Remove rtp_header_extensions_set()\"\n2025-06-24 perkj@webrtc.org Deprecate TargetTransferRate.stable_target_rate from GoogCC\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/webrtc-chromium-autoroll\nPlease CC webrtc-chromium-sheriffs-robots@google.com,webrtc-infra@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in WebRTC: https://bugs.chromium.org/p/webrtc/issues/entry\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nBug: None\nTbr: webrtc-chromium-sheriffs-robots@google.com\nChange-Id: I21764316e51430db2c2d74642dd4a82c67c4263c\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6670927\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1478428}",
        "true_label": [
          1.0,
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "ephermal: allow setting var and var files for apply",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "refactor(devtools): introduce responsive-split directive (#61204)\n\nThe `ResponsiveSplitDirective` adds responsive behavior to the `as-split` component by a provided width to height ratio.\n\nPR Close #61204",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "String dtype: use ObjectEngine for indexing for now correctness over performance (#60329)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "Reintroduces the ability to load IOPDDL json files (at least internally).\n\nPiperOrigin-RevId: 766413274",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "[BE][PYFMT] migrate PYFMT for `{torch,test}/{nn,optim}/**` to `ruff format` (#144548)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/144548\nApproved by: https://github.com/ezyang",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix donut backtracking (#37788)\n\n* Fix donut backtracking\n\n* make fixup\n\n* Trigger tests\n\n* Remove old line\n\n* Update code\n\n* Fix reversed slice",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge branch 'main' into patch-1",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.xpack.esql.session.IndexResolverFieldNamesTests testForkFieldsWithKeepAfterFork #128271",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Update CHANGELOG",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.xpack.esql.action.CrossClusterQueryWithPartialResultsIT testFailToStartRequestOnRemoteCluster #128545",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Semantic_text match_all with Highlighter (#128702)\n\n* initial implementation for match_All\n\n* reformat\n\n* [CI] Auto commit changes from spotless\n\n* Excluding matchAllintercepter\n\n* Adding matchAllDocs support for vector fields\n\n* [CI] Auto commit changes from spotless\n\n* Remove previous implementation\n\n* Adding yaml tests for match_all\n\n* fixed yaml tests\n\n* Update docs/changelog/128702.yaml\n\n* Update changelog\n\n* changelog - update summary\n\n* Fix wrong inference names for the yaml tests\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.upgrades.UpgradeClusterClientYamlTestSuiteIT test {p0=upgraded_cluster/70_ilm/Test Lifecycle Still There And Indices Are Still Managed} #129097",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "fix `test_compare_unprocessed_logit_scores` (#39053)\n\nfix\n\nCo-authored-by: ydshieh <ydshieh@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "Fix bug in prefill_chunk_size that ignores disable_compile flag (#38067)\n\nFix bug in prefill_chunk_size implementation that ignores disable_compile flag",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Do not require typing_extensions with Python 3.8+ (#154)\n\ntyping_extensions are only used for Literal which is available in the\r\nstandard library since Python 3.8",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Revert \"[dynamo] fix segfault due to dangling CacheEntry backend pointer (#156527)\"\n\nThis reverts commit 5ad2bee2c8a7defd2580bb138145a49c37146fcc.\n\nReverted https://github.com/pytorch/pytorch/pull/156527 on behalf of https://github.com/Camyll due to failing test assertions ([comment](https://github.com/pytorch/pytorch/pull/156527#issuecomment-3009231797))",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Internal change\n\nPiperOrigin-RevId: 524901616",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "drm/xe/sched: stop re-submitting signalled jobs\n\nCustomer is reporting a really subtle issue where we get random DMAR\nfaults, hangs and other nasties for kernel migration jobs when stressing\nstuff like s2idle/s3/s4. The explosions seems to happen somewhere\nafter resuming the system with splats looking something like:\n\nPM: suspend exit\nrfkill: input handler disabled\nxe 0000:00:02.0: [drm] GT0: Engine reset: engine_class=bcs, logical_mask: 0x2, guc_id=0\nxe 0000:00:02.0: [drm] GT0: Timedout job: seqno=24496, lrc_seqno=24496, guc_id=0, flags=0x13 in no process [-1]\nxe 0000:00:02.0: [drm] GT0: Kernel-submitted job timed out\n\nThe likely cause appears to be a race between suspend cancelling the\nworker that processes the free_job()'s, such that we still have pending\njobs to be freed after the cancel. Following from this, on resume the\npending_list will now contain at least one already complete job, but it\nlooks like we call drm_sched_resubmit_jobs(), which will then call\nrun_job() on everything still on the pending_list. But if the job was\nalready complete, then all the resources tied to the job, like the bb\nitself, any memory that is being accessed, the iommu mappings etc. might\nbe long gone since those are usually tied to the fence signalling.\n\nThis scenario can be seen in ftrace when running a slightly modified\nxe_pm IGT (kernel was only modified to inject artificial latency into\nfree_job to make the race easier to hit):\n\nxe_sched_job_run: dev=0000:00:02.0, fence=0xffff888276cc8540, seqno=0, lrc_seqno=0, gt=0, guc_id=0, batch_addr=0x000000146910 ...\nxe_exec_queue_stop:   dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=0, guc_state=0x0, flags=0x13\nxe_exec_queue_stop:   dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=1, guc_state=0x0, flags=0x4\nxe_exec_queue_stop:   dev=0000:00:02.0, 4:0x1, gt=1, width=1, guc_id=0, guc_state=0x0, flags=0x3\nxe_exec_queue_stop:   dev=0000:00:02.0, 1:0x1, gt=1, width=1, guc_id=1, guc_state=0x0, flags=0x3\nxe_exec_queue_stop:   dev=0000:00:02.0, 4:0x1, gt=1, width=1, guc_id=2, guc_state=0x0, flags=0x3\nxe_exec_queue_resubmit: dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=0, guc_state=0x0, flags=0x13\nxe_sched_job_run: dev=0000:00:02.0, fence=0xffff888276cc8540, seqno=0, lrc_seqno=0, gt=0, guc_id=0, batch_addr=0x000000146910 ...\n.....\nxe_exec_queue_memory_cat_error: dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=0, guc_state=0x3, flags=0x13\n\nSo the job_run() is clearly triggered twice for the same job, even\nthough the first must have already signalled to completion during\nsuspend. We can also see a CAT error after the re-submit.\n\nTo prevent this only resubmit jobs on the pending_list that have not yet\nsignalled.\n\nv2:\n  - Make sure to re-arm the fence callbacks with sched_start().\nv3 (Matt B):\n  - Stop using drm_sched_resubmit_jobs(), which appears to be deprecated\n    and just open-code a simple loop such that we skip calling run_job()\n    on anything already signalled.\n\nLink: https://gitlab.freedesktop.org/drm/xe/kernel/-/issues/4856\nFixes: dd08ebf6c352 (\"drm/xe: Introduce a new DRM driver for Intel GPUs\")\nSigned-off-by: Matthew Auld <matthew.auld@intel.com>\nCc: Thomas Hellstr\u00f6m <thomas.hellstrom@linux.intel.com>\nCc: Matthew Brost <matthew.brost@intel.com>\nCc: William Tseng <william.tseng@intel.com>\nCc: <stable@vger.kernel.org> # v6.8+\nReviewed-by: Matthew Brost <matthew.brost@intel.com>\nReviewed-by: Tejas Upadhyay <tejas.upadhyay@intel.com>\nLink: https://lore.kernel.org/r/20250528113328.289392-2-matthew.auld@intel.com\n(cherry picked from commit 38fafa9f392f3110d2de431432d43f4eef99cd1b)\nSigned-off-by: Thomas Hellstr\u00f6m <thomas.hellstrom@linux.intel.com>",
        "true_label": [
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "vendor: go.etcd.io/bbolt v1.4.0\n\nfull diff: https://github.com/etcd-io/bbolt/compare/v1.3.11...v1.4.0\n\nChangelog: https://github.com/etcd-io/bbolt/blob/main/CHANGELOG/CHANGELOG-1.4.md\n\nSigned-off-by: Pawe\u0142 Gronowski <pawel.gronowski@docker.com>",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "chore(internal): cast type in mocked test (#1112)",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "fix & improve reporting of cyclic dependencies",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "[test] UTF8Span from inline-stored Substring instances",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "update go-cty to latest patch release (#36376)\n\n* update go-cty to latest patch release\r\n\r\n* also fixes other bug",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Migrate DevtoolsInterceptionWithAuthProxyTest to EmbeddedTestServer.\n\nIt was using a SpawnedTestServer acting as an auth proxy.\nSpawnedTestServer is deprecated for a variety of reasons, so this CL\nmakes it use EmbeddedTestServer configured to give proxy auth challenges\ninstead. The EmbeddedTestServer doesn't actually proxy requests,\ninstead handling them directly, but there's no need to it to really\nproxy anything for this test.\n\nConveniently, this also lets us enable the test on Fuchsia. It was\ndisabled there because SpawnedTestServer::TYPE_BASIC_AUTH_PROXY does\nnot work on Fuchsia.\n\nBug: 40242862\nChange-Id: I1be23a408e8f74bc4ba02f159214dd8b15fa5e25\nFixed: 40697469\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6648967\nCommit-Queue: mmenke <mmenke@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1477998}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #92832 from wangw-1991:master\n\nPiperOrigin-RevId: 764353910",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[phi-4] use mel filters from audio utils (#36966)\n\n* use mel_filter_bank from audio utils\n\n* Apply style fixes\n\n---------\n\nCo-authored-by: Arthur <48595927+ArthurZucker@users.noreply.github.com>\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[pre-commit.ci] pre-commit autoupdate (#61536)\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.11.8 \u2192 v0.11.12](https://github.com/astral-sh/ruff-pre-commit/compare/v0.11.8...v0.11.12)\n- [github.com/asottile/pyupgrade: v3.19.1 \u2192 v3.20.0](https://github.com/asottile/pyupgrade/compare/v3.19.1...v3.20.0)\n- [github.com/pre-commit/mirrors-clang-format: v20.1.3 \u2192 v20.1.5](https://github.com/pre-commit/mirrors-clang-format/compare/v20.1.3...v20.1.5)\n- [github.com/trim21/pre-commit-mirror-meson: v1.8.0 \u2192 v1.8.1](https://github.com/trim21/pre-commit-mirror-meson/compare/v1.8.0...v1.8.1)\n\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix ThreadPoolMergeSchedulerTests testSchedulerCloseWaitsForRunningMerge (#130078)\n\nThis fixes a race condition in the test scenario, between the merge\nscheduler closing and the merge task being scheduled to run. The test\nscenario expects that the merge task runs when the scheduler is closed.\nIf the merge scheduler is closed before the merge task is scheduled, the\nmerge task will instead be scheduled as aborted.\n\nFixes: https://github.com/elastic/elasticsearch/issues/125236",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[xla:benchmarks] Use explicit setting for concurrency constraints in presubmit and postsubmit workflows\n\nPiperOrigin-RevId: 766872337",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #11178 from tensorflow:typos3\n\nPiperOrigin-RevId: 682027566",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "terraform test: stop transforming the config under test with new variables (#37152)",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Revert change that breaks on Torch 2.1 (#37531)\n\n* Revert change that breaks on Torch 2.1\n\n* Add TODO\n\n* Trigger tests\n\n* Trigger tests",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Flight] Don't call onError/onPostpone when halting and unify error branches (#31715)\n\nWe shouldn't call onError/onPostpone when we halt a stream because that\r\nnode didn't error yet. Its digest would also get lost.\r\n\r\nWe also have a lot of error branches now for thenables and streams. This\r\nunifies them under erroredTask. I'm not yet unifying the cases that\r\ndon't allocate a task for the error when those are outlined.",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(api): add missing file rank enum + more metadata (#2164)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(parsing): don't validate input tools in the asynchronous `.parse()` method",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "selftests: drv-net: tso: fix the GRE device name\n\nThe device type for IPv4 GRE is \"gre\" not \"ipgre\",\nunlike for IPv6 which uses \"ip6gre\".\n\nNot sure how I missed this when writing the test, perhaps\nbecause all HW I have access to is on an IPv6-only network.\n\nFixes: 0d0f4174f6c8 (\"selftests: drv-net: add a simple TSO test\")\nReviewed-by: Simon Horman <horms@kernel.org>\nReviewed-by: Willem de Bruijn <willemb@google.com>\nLink: https://patch.msgid.link/20250604012031.891242-1-kuba@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Internal change\n\nPiperOrigin-RevId: 492501189",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "[BE] fix typos in torchgen/ (#156083)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156083\nApproved by: https://github.com/jingsh\nghstack dependencies: #156079, #156082",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "TST fix estimator checks when set_output is called on the instance (#29869)",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[9.x] Allow for composer install on Laravel 9 (#5453)\n\n* Allow for composer install on Laravel 9\r\n\r\n* Update composer.json\r\n\r\n* Update composer.json\r\n\r\n* Update composer.json\r\n\r\nCo-authored-by: Taylor Otwell <taylor@laravel.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "DOC: Fix pandas.Series.dt seconds, nanoseconds GL08, SA01 (#59582)\n\n* fix pandas.Series.dt.freq\r\n\r\n* fix seconds, nanoseconds, microseconds\r\n\r\n* remove fixed objects from code_checks.sh\r\n\r\n* Remove Timedelta Index checks\r\n\r\n* fix freq example\r\n\r\n* remove freq\r\n\r\n* bring back microseconds",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132349 from p0lyn0mial/upstream-rm-initial-events-list-blueprint\n\napimachinery/meta/types.go: remove InitialEventsListBlueprintAnnotationKey",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat: make `setImmediate` and `clearImmediate` as globals (#29877)\n\nFollow up to https://github.com/denoland/deno/pull/29323 and\nhttps://github.com/denoland/deno/pull/29416.\n\nThis effort is to reduce a number of different globals available to user\ncode and npm dependencies. Also improves performance when these globals\nare used.\nThis brings the number of \"managed globals\" down to 6. \n\nTowards https://github.com/denoland/deno/issues/29703",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Only check that the import stub is non-null when importing by ID (#36990)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "Roll Depot Tools from 8aee5412837c to dc4e91162356 (1 revision)\n\nhttps://chromium.googlesource.com/chromium/tools/depot_tools.git/+log/8aee5412837c..dc4e91162356\n\n2025-06-24 sshrimp@google.com Revert \"Telemetry: disable for non-linux\"\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/depot-tools-chromium-autoroll\nPlease CC begizi@google.com,chops-source-team@google.com,ddoman@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nCq-Include-Trybots: luci.chromium.try:linux-utr-tester;luci.chromium.try:win-utr-tester\nBug: chromium:326277821\nTbr: begizi@google.com,ddoman@google.com\nChange-Id: I040f624ca5864c429fd82e403731877533d90280\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6665395\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1478021}",
        "true_label": [
          1.0,
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "LowerHopToActor: insert a borrow scope for an `Optional<Actor>.none` value\n\nAn optional-none value has \"none\" ownership, but still a borrow scope is needed.\nFixes a SIL verifier crash.\nrdar://153066034",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "MNT Use tmp_path fixture for test_check_memory (#31453)",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "Update README.md with fine-tuning examples (#583)\n\n* Update README.md with fine-tuning examples\r\n\r\n* Update README.md",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Automated Code Change\n\nPiperOrigin-RevId: 764135322",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "client/service: use containerd errdefs checks\n\nSigned-off-by: Pawe\u0142 Gronowski <pawel.gronowski@docker.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Adding TFVision's prominent Object Detection Models concised overview document to the TF Vision library.\n\nPiperOrigin-RevId: 741414573",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Result of tsccr-helper -log-level=info gha update -latest .github/ (#35938)\n\nCo-authored-by: hashicorp-tsccr[bot] <hashicorp-tsccr[bot]@users.noreply.github.com>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "\ud83d\udd34 [VLM] modeling updates (#38317)\n\n* updates\n\n* fixup\n\n* fix tests\n\n* fix test\n\n* fix\n\n* let it be here for now, till monday\n\n* two more fixes\n\n* persimmon\n\n* fixup\n\n* fix\n\n* fixup\n\n* make sure fuyu runs now that LM has new attn API\n\n* fixup + tests\n\n* qwen vl uses new mask interface as well\n\n* qwen image features format\n\n* update\n\n* remove image_sizes\n\n* address comments\n\n* i am dumb...",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132150 from serathius/watchcache-consistent-list\n\nHandle consistent LIST in watch cache to avoid incorrect semantics while setting ResourceVersion on options",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "stacks: load credentials from config file on startup (#35952)\n\n* stacks: load credentials from config file on startup\r\n\r\n* delete unneeded file",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "FIX update debian 32 bit CI config to avoid a SIMD related bug in numpy 1.24.2 on some GitHub Actions CI workers (#29771)\n\nCo-authored-by: Lo\u00efc Est\u00e8ve <loic.esteve@ymail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132442 from ylink-lfs/ci/test_image_update\n\nci: update test image base: nginx, nginx-new",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "docs: fix code comment typo (#790)\n\nspecifc -> specific",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #131924 from yashsingh74/agnhost-netexec\n\nagnhost: added server address for conntrack cleanup entries",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "remove changelog entry from 1.12 thats now backported to v1.11 (#36687)",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "Run WebNN unit tests on the internal.optimization_guide builder\n\nWith this change the WebNN unit tests are run on a builder where\nenable_ml_internal is true so that we get coverage for using the TFLite\nGPU delegate provided by the Optimization Guide internal library.\n\nChange-Id: I331532c8c9cbb38e609558557dbe1a1896d2215e\nBug: 394119734\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6337341\nReviewed-by: Haiyang Pan <hypan@google.com>\nCommit-Queue: Reilly Grant <reillyg@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1478337}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Don't record callstack for XLA:CPU in OSS since streamz doesn't work there\n\nPiperOrigin-RevId: 770690571",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fixed #35489 -- Fixed vertical alignment of raw_id_fields widget.\n\nCo-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Import wpt@f9fe3ed961bfa843a2736fbf78c9d631734c941d\n\nhttps://github.com/web-platform-tests/wpt/compare/54fbbcbda...f9fe3ed96\n\nUsing wpt-import in Chromium e8271c006ae205c4e78aa3eba60bd5b6bab76bea.\nWith Chromium commits locally applied on WPT:\n  c178061101 \"[LCP WPT] Fix test expectation in background-image- [...]\n  9524cbae15 \"[FedCM] Adding helper functions to reduce timeout\"\n  0fc3094ee4 \"Implement the scrollParent method for HTMLElement.\"\n\nNote to gardeners: This CL imports external tests and adds expectations\nfor those tests; if this CL is large and causes a few new failures,\nplease fix the failures by adding new lines to TestExpectations rather\nthan reverting. See:\nhttps://chromium.googlesource.com/chromium/src/+/main/docs/testing/web_platform_tests.md\n\nDirectory owners for changes in this CL:\ncbiesinger@chromium.org:\n  external/wpt/css/css-flexbox\nfoolip@chromium.org:\n  external/wpt/infrastructure\n\nNOAUTOREVERT=true\n\nNo-Export: true\nValidate-Test-Flakiness: skip\nCq-Include-Trybots: luci.chromium.try:linux-blink-rel\nChange-Id: I32d28624dbb8f0b73013d66835642091572e7136\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6663885\nReviewed-by: Jonathan Lee <jonathanjlee@google.com>\nCommit-Queue: Jonathan Lee <jonathanjlee@google.com>\nAuto-Submit: WPT Autoroller <wpt-autoroller@chops-service-accounts.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1477685}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[rubygems/rubygems] Fix typos in some documentation lists making them render incorrectly\n\nhttps://github.com/rubygems/rubygems/commit/19739ba71c",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Refactor ILM `ExecuteStepsUpdateTask` (#128915)\n\nThis method was quite large with multiple nested ifs/loops, so it could\nuse some refactoring for readability.\n\nThe only change in behavior is that we now catch exceptions at a\nslightly higher level. There are no other changes in behavior.",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Internal change\n\nPiperOrigin-RevId: 498426179",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "[BE] fix typos in benchmarks/ (#156077)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156077\nApproved by: https://github.com/Skylion007, https://github.com/malfet\nghstack dependencies: #156069",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Reland \"Refactor DCompPresenter tests to share global test parameterization\"\n\nThis is a reland of commit d63d3037431e3346838735440ea5a8add7c2b2c1\n\nOriginal change's description:\n> Refactor DCompPresenter tests to share global test parameterization\n>\n> This change moves the \"use GPU vsync\" code to the test base clase. It\n> also allows us to add future features that we want to parameterize over\n> all DCompPresenter tests.\n>\n> Change-Id: Ica498d2510f11b0b6f61659f48e6e5d64d9eb1ef\n> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6635949\n> Reviewed-by: Rafael Cintron <rafael.cintron@microsoft.com>\n> Commit-Queue: Michael Tang <tangm@microsoft.com>\n> Cr-Commit-Position: refs/heads/main@{#1477609}\n\nBug: 427410753\nBug: 41496015\nCq-Include-Trybots: luci.chromium.try:gpu-fyi-try-win10-amd-rel-64,gpu-fyi-try-win11-qualcomm-rel-64\nChange-Id: Ia63eda91fce42ccb7ad5a7c6b34275ec52045904\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6669316\nReviewed-by: Rafael Cintron <rafael.cintron@microsoft.com>\nCommit-Queue: Michael Tang <tangm@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#1478302}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": " feat: optimize ListAll and ListAllByNamespace to return directly when nothing to select\n\nSigned-off-by: likakuli <1154584512@qq.com>",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "text": "Merge pull request #50212 from corhere/vendor-tagged-swarmkit-v2\n\nvendor: github.com/moby/swarmkit/v2 v2.0.0",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Remove viz::ContentDrawQuadBase::texture_size.\n\nThis field is no longer necessary.\n\nTEST=bots build\n\nBug: 425351389\nChange-Id: I8c2b3ba65f54e508f9df502fd560029f5bb267d4\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6653194\nCommit-Queue: Zhenyao Mo <zmo@chromium.org>\nReviewed-by: Vasiliy Telezhnikov <vasilyt@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1476846}",
        "true_label": [
          1.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "client/plugin: use containerd errdefs checks\n\nSigned-off-by: Pawe\u0142 Gronowski <pawel.gronowski@docker.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Add array API tests for `pairwise_distances` (#31658)\n\nCo-authored-by: Olivier Grisel <olivier.grisel@ensta.org>\nCo-authored-by: Tim Head <betatim@gmail.com>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[nativert] Move Pytree (#155136)\n\nSummary: fbcode/sigmoid/core/common -> fbcode/caffe2/torch/nativert/common\n\nTorch Native Runtime RFC: https://github.com/pytorch/rfcs/pull/72\n\nTest Plan:\n```\nbuck run fbcode//mode/dev-nosan  //caffe2/test/cpp/nativert:pytree_test\n```\n\nOSS CI\n\nRollback Plan:\n\nDifferential Revision: D75965059\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155136\nApproved by: https://github.com/zhxchen17, https://github.com/XuehaiPan, https://github.com/zou3519",
        "true_label": [
          0.0,
          1.0,
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "New cache tests and refactored Hybrid Cache (#37972)",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      }
    ]
  },
  "priority": {
    "total_errors": 552,
    "error_rate": 0.10894020130254589,
    "incorrect_samples": [
      {
        "text": "[compiler] Validate against mutable functions being frozen\n\nThis revisits a validation I built a while ago, trying to make it more strict this time to ensure that it's high-signal.\n\nWe detect function expressions which are *known* mutable \u2014 they definitely can modify a variable defined outside of the function expression itself (modulo control flow). This uses types to look for known Store and Mutate effects only, and disregards mutations of effects. Any such function passed to a location with a Freeze effect is reported as a validation error.\n\nThis is behind a flag and disabled by default. If folks agree this makes sense to revisit, i'll test out internally and we can consider enabling by default.\n\nghstack-source-id: 075a731444ce95e52dbd5ea3be85c16d428927f5\nPull Request resolved: https://github.com/facebook/react/pull/33079",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[flax/mistral] support sliding_window: null in config (#37402)\n\nflax/mistral: Allow sliding_window to be set to none",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Roll WebRTC from fe0a0c784efa to edbf76f93f4a (15 revisions)\n\nhttps://webrtc.googlesource.com/src.git/+log/fe0a0c784efa..edbf76f93f4a\n\n2025-06-25 webrtc-version-updater@webrtc-ci.iam.gserviceaccount.com Update WebRTC code version (2025-06-25T04:06:28).\n2025-06-24 phancke@meta.com av1: (partially) follow spec fmtp parameter comparisons\n2025-06-24 chromium-webrtc-autoroll@webrtc-ci.iam.gserviceaccount.com Roll chromium_revision ab4881aeb4..ff8c208486 (1478047:1478216)\n2025-06-24 phancke@meta.com IWYU modules/audio_coding\n2025-06-24 phancke@meta.com Do not restart SCTP transport on DTLS restart\n2025-06-24 phancke@meta.com pqc: add missing GetName implementation\n2025-06-24 phancke@meta.com IWYU net/ again\n2025-06-24 mbonadei@webrtc.org Revert \"Change SetLocalContent / SetRemoteContent to update header extensions\"\n2025-06-24 chromium-webrtc-autoroll@webrtc-ci.iam.gserviceaccount.com Roll chromium_revision c96a5de562..ab4881aeb4 (1477697:1478047)\n2025-06-24 mbonadei@webrtc.org Revert \"Enable scenario test for L4S\"\n2025-06-24 phancke@meta.com IWYU audio/\n2025-06-24 phancke@meta.com Use peerconnection field trials instead of context in sdp O/A\n2025-06-24 jakobi@webrtc.org Add function to create an audio decoder ahead of time.\n2025-06-24 mbonadei@webrtc.org Revert \"Remove rtp_header_extensions_set()\"\n2025-06-24 perkj@webrtc.org Deprecate TargetTransferRate.stable_target_rate from GoogCC\n\nIf this roll has caused a breakage, revert this CL and stop the roller\nusing the controls here:\nhttps://autoroll.skia.org/r/webrtc-chromium-autoroll\nPlease CC webrtc-chromium-sheriffs-robots@google.com,webrtc-infra@google.com on the revert to ensure that a human\nis aware of the problem.\n\nTo file a bug in WebRTC: https://bugs.chromium.org/p/webrtc/issues/entry\nTo file a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/entry\n\nTo report a problem with the AutoRoller itself, please file a bug:\nhttps://issues.skia.org/issues/new?component=1389291&template=1850622\n\nDocumentation for the AutoRoller is here:\nhttps://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md\n\nBug: None\nTbr: webrtc-chromium-sheriffs-robots@google.com\nChange-Id: I21764316e51430db2c2d74642dd4a82c67c4263c\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6670927\nBot-Commit: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCommit-Queue: chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>\nCr-Commit-Position: refs/heads/main@{#1478428}",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "ephermal: allow setting var and var files for apply",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "daemon: LogContainerEventWithAttributes: minor optimisation\n\nAs we're only expecting a single `/` prefix to be trimmed from the\ncontainer name, it's better to use `TrimPrefix` than `TrimLeft`, as\n`TrimPrefix` takes a cut-set to remove any character in the set.\n\nBenchmarking both;\n\n    BenchmarkTrimLeft-10      535364544    2.204  ns/op    0 B/op    0 allocs/op\n    BenchmarkTrimPrefix-10   1000000000    0.3148 ns/op    0 B/op    0 allocs/op\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Semantic_text match_all with Highlighter (#128702)\n\n* initial implementation for match_All\n\n* reformat\n\n* [CI] Auto commit changes from spotless\n\n* Excluding matchAllintercepter\n\n* Adding matchAllDocs support for vector fields\n\n* [CI] Auto commit changes from spotless\n\n* Remove previous implementation\n\n* Adding yaml tests for match_all\n\n* fixed yaml tests\n\n* Update docs/changelog/128702.yaml\n\n* Update changelog\n\n* changelog - update summary\n\n* Fix wrong inference names for the yaml tests\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "drm/xe/sched: stop re-submitting signalled jobs\n\nCustomer is reporting a really subtle issue where we get random DMAR\nfaults, hangs and other nasties for kernel migration jobs when stressing\nstuff like s2idle/s3/s4. The explosions seems to happen somewhere\nafter resuming the system with splats looking something like:\n\nPM: suspend exit\nrfkill: input handler disabled\nxe 0000:00:02.0: [drm] GT0: Engine reset: engine_class=bcs, logical_mask: 0x2, guc_id=0\nxe 0000:00:02.0: [drm] GT0: Timedout job: seqno=24496, lrc_seqno=24496, guc_id=0, flags=0x13 in no process [-1]\nxe 0000:00:02.0: [drm] GT0: Kernel-submitted job timed out\n\nThe likely cause appears to be a race between suspend cancelling the\nworker that processes the free_job()'s, such that we still have pending\njobs to be freed after the cancel. Following from this, on resume the\npending_list will now contain at least one already complete job, but it\nlooks like we call drm_sched_resubmit_jobs(), which will then call\nrun_job() on everything still on the pending_list. But if the job was\nalready complete, then all the resources tied to the job, like the bb\nitself, any memory that is being accessed, the iommu mappings etc. might\nbe long gone since those are usually tied to the fence signalling.\n\nThis scenario can be seen in ftrace when running a slightly modified\nxe_pm IGT (kernel was only modified to inject artificial latency into\nfree_job to make the race easier to hit):\n\nxe_sched_job_run: dev=0000:00:02.0, fence=0xffff888276cc8540, seqno=0, lrc_seqno=0, gt=0, guc_id=0, batch_addr=0x000000146910 ...\nxe_exec_queue_stop:   dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=0, guc_state=0x0, flags=0x13\nxe_exec_queue_stop:   dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=1, guc_state=0x0, flags=0x4\nxe_exec_queue_stop:   dev=0000:00:02.0, 4:0x1, gt=1, width=1, guc_id=0, guc_state=0x0, flags=0x3\nxe_exec_queue_stop:   dev=0000:00:02.0, 1:0x1, gt=1, width=1, guc_id=1, guc_state=0x0, flags=0x3\nxe_exec_queue_stop:   dev=0000:00:02.0, 4:0x1, gt=1, width=1, guc_id=2, guc_state=0x0, flags=0x3\nxe_exec_queue_resubmit: dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=0, guc_state=0x0, flags=0x13\nxe_sched_job_run: dev=0000:00:02.0, fence=0xffff888276cc8540, seqno=0, lrc_seqno=0, gt=0, guc_id=0, batch_addr=0x000000146910 ...\n.....\nxe_exec_queue_memory_cat_error: dev=0000:00:02.0, 3:0x2, gt=0, width=1, guc_id=0, guc_state=0x3, flags=0x13\n\nSo the job_run() is clearly triggered twice for the same job, even\nthough the first must have already signalled to completion during\nsuspend. We can also see a CAT error after the re-submit.\n\nTo prevent this only resubmit jobs on the pending_list that have not yet\nsignalled.\n\nv2:\n  - Make sure to re-arm the fence callbacks with sched_start().\nv3 (Matt B):\n  - Stop using drm_sched_resubmit_jobs(), which appears to be deprecated\n    and just open-code a simple loop such that we skip calling run_job()\n    on anything already signalled.\n\nLink: https://gitlab.freedesktop.org/drm/xe/kernel/-/issues/4856\nFixes: dd08ebf6c352 (\"drm/xe: Introduce a new DRM driver for Intel GPUs\")\nSigned-off-by: Matthew Auld <matthew.auld@intel.com>\nCc: Thomas Hellstr\u00f6m <thomas.hellstrom@linux.intel.com>\nCc: Matthew Brost <matthew.brost@intel.com>\nCc: William Tseng <william.tseng@intel.com>\nCc: <stable@vger.kernel.org> # v6.8+\nReviewed-by: Matthew Brost <matthew.brost@intel.com>\nReviewed-by: Tejas Upadhyay <tejas.upadhyay@intel.com>\nLink: https://lore.kernel.org/r/20250528113328.289392-2-matthew.auld@intel.com\n(cherry picked from commit 38fafa9f392f3110d2de431432d43f4eef99cd1b)\nSigned-off-by: Thomas Hellstr\u00f6m <thomas.hellstrom@linux.intel.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[9.x] Revert \"Enable madvise by default for all builds (#110159)\" (#127921)\n\n9.x port of: Revert \"Enable madvise by default for all builds (#110159)\" #126308\n\nThis change did not apply cleanly. In fact this is not strictly a revert, since the change was never actually in 9.x post the Lucene 10 upgrade. However, the semantics of the change still apply - avoid RANDOM everywhere. Even though in 9.x we do set -Dorg.apache.lucene.store.defaultReadAdvice=normal, it is not enough to avoid RANDOM when random is explicitly requested by code.",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[xla:benchmarks] Use explicit setting for concurrency constraints in presubmit and postsubmit workflows\n\nPiperOrigin-RevId: 766872337",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #11178 from tensorflow:typos3\n\nPiperOrigin-RevId: 682027566",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[9.x] Allow for composer install on Laravel 9 (#5453)\n\n* Allow for composer install on Laravel 9\r\n\r\n* Update composer.json\r\n\r\n* Update composer.json\r\n\r\n* Update composer.json\r\n\r\nCo-authored-by: Taylor Otwell <taylor@laravel.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat: make `setImmediate` and `clearImmediate` as globals (#29877)\n\nFollow up to https://github.com/denoland/deno/pull/29323 and\nhttps://github.com/denoland/deno/pull/29416.\n\nThis effort is to reduce a number of different globals available to user\ncode and npm dependencies. Also improves performance when these globals\nare used.\nThis brings the number of \"managed globals\" down to 6. \n\nTowards https://github.com/denoland/deno/issues/29703",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "LowerHopToActor: insert a borrow scope for an `Optional<Actor>.none` value\n\nAn optional-none value has \"none\" ownership, but still a borrow scope is needed.\nFixes a SIL verifier crash.\nrdar://153066034",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[cxx-interop] Support _LIBCPP_PREFERRED_OVERLOAD\n\nSome functions like memchr are defined both in libc++ and libc.\nIncluding both would result in ambiguous references at the call sites.\nThis is worked around by an attribute that tells the compiler to prefer\none overload over the others. This attribute was not interpreted by\nSwift. As a result, importing both libc and libc++ and calling such\nfunctions resulted in compilation errors due to ambiguous overloads.\nThis PR modifies the lookup logic to exclude the non-preferred Clang\nfunctions from the overload set whenever a preferred overload is\navailable.\n\nrdar://152192945",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Refactor ILM `ExecuteStepsUpdateTask` (#128915)\n\nThis method was quite large with multiple nested ifs/loops, so it could\nuse some refactoring for readability.\n\nThe only change in behavior is that we now catch exceptions at a\nslightly higher level. There are no other changes in behavior.",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Reland \"Refactor DCompPresenter tests to share global test parameterization\"\n\nThis is a reland of commit d63d3037431e3346838735440ea5a8add7c2b2c1\n\nOriginal change's description:\n> Refactor DCompPresenter tests to share global test parameterization\n>\n> This change moves the \"use GPU vsync\" code to the test base clase. It\n> also allows us to add future features that we want to parameterize over\n> all DCompPresenter tests.\n>\n> Change-Id: Ica498d2510f11b0b6f61659f48e6e5d64d9eb1ef\n> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6635949\n> Reviewed-by: Rafael Cintron <rafael.cintron@microsoft.com>\n> Commit-Queue: Michael Tang <tangm@microsoft.com>\n> Cr-Commit-Position: refs/heads/main@{#1477609}\n\nBug: 427410753\nBug: 41496015\nCq-Include-Trybots: luci.chromium.try:gpu-fyi-try-win10-amd-rel-64,gpu-fyi-try-win11-qualcomm-rel-64\nChange-Id: Ia63eda91fce42ccb7ad5a7c6b34275ec52045904\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6669316\nReviewed-by: Rafael Cintron <rafael.cintron@microsoft.com>\nCommit-Queue: Michael Tang <tangm@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#1478302}",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "extensions: Merge jni bridge for keybinding into ExtensionActionsBridge\n\nMerge the jni bridge for extension keybindings into\nExtensionActionsBridge. It makes the keybinding registry created per\nprofile, and makes it owned by the ExtensionActionsBridge.\nThis doesn't add new functionalities, but is an important step to get\nextension action related commands triggered from keyboard shortcuts to\nshow popup on the toolbar for example.\n\nBug: 406136564\nTest: commands are still triggered from keyboard shortcut.\nChange-Id: I822f7c86b3d8f7d627bdb392a1885fc2ed1a54c7\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6657760\nCommit-Queue: Keigo Oka <oka@chromium.org>\nReviewed-by: Sirisha Kavuluru <skavuluru@google.com>\nReviewed-by: Shuhei Takahashi <nya@chromium.org>\nAuto-Submit: Keigo Oka <oka@chromium.org>\nReviewed-by: James Cook <jamescook@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1478299}",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Granting `kibana_system` reserved role access to \"all\" privileges to `.adhoc.alerts*` and `.internal.adhoc.alerts*` indices (#127321)\n\n* Granting `kibana_system` reserved role access to \"all\" privileges to `.adhoc.alerts*` and `.internal.adhoc.alerts*` indices\n\n* Update docs/changelog/127321.yaml\n\n* [CI] Auto commit changes from spotless\n\n* Replace `\"all\"` with the specific privileges for the `kibana_system` role\n\n* Fix tests\n\n* Fix CI\n\n* Updated privileges\n\n* Updated privileges\n\nAdd `\"maintenance\"` to allow `refresh=true` option on bulk API call.\n\n* Remove redundant code\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Cutlass] Allow filtering by fast_accum for scaled_mm (#155195)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/155195\nApproved by: https://github.com/drisspg\nghstack dependencies: #154829, #154835",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "test(ext/node): respect --allow-natives-syntax v8 flag in compat test runner (#29529)",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Componentize chrome/browser/ui/toolbar (3/3)\n\nThis CL componentizes the test files in chrome/browser/ui/toolbar\n(and sub dirs) by building them from the proper BUILD.gn files.\n\nThe following targets are complete:\n- //chrome/browser/ui/toolbar:unit_tests,\n- //chrome/browser/ui/toolbar:browser_tests,\n- //chrome/browser/ui/toolbar:interactive_tests,\n- //chrome/browser/ui/tollbar/pinned_toolbar:browser_tests\n- //chrome/browser/ui/tollbar/cast:browser_tests\n\nR=dljames@chromium.org\n\nBug: 369436587\nChange-Id: I6349689b4b48d430d13c93cd622175dbcc9e9aef\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6666184\nReviewed-by: Darryl James <dljames@chromium.org>\nCommit-Queue: Antonio Gomes <tonikitoo@igalia.com>\nCr-Commit-Position: refs/heads/main@{#1478067}",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Format event with \"warning\" yellow and prefix with \"Event: \" (#31536)\n\nIt's useful to quickly see where new events are kicking off new\r\nrendering. This uses the new \"warning\" color (yellow) to do that. This\r\nis to help distinguish it from the purple (secondary color) which is\r\nused for the commit phase which is more of a follow up and it's often\r\nthat you have several rerenders within one event which makes it hard to\r\ntell a part where it starts and event otherwise.\r\n\r\nFor the span marking between previous render within the same event and\r\nthe next setState, I use secondary-light (light purple) since it's kind\r\nof still part of the same sequence at that point. It's usually a spawned\r\nrender (e.g. setState in useEffect or microtask) but it can also be\r\nsequential flushSync.\r\n\r\nI was bothered by that the event name is the only thing that's lower\r\ncase so I prefixed it with `Event: ` like the JS traces are.\r\n\r\n<img width=\"1499\" alt=\"Screenshot 2024-11-13 at 7 15 45\u202fPM\"\r\nsrc=\"https://github.com/user-attachments/assets/0c81c810-6b5d-4fc7-9bc0-d15b53844ade\">\r\n\r\nIt might be a little confusing why our track starts earlier than the JS\r\none below in the \"Main Thread\" flamegraph which looks the same. That's\r\nbecause ours is the start of the event time which is when the click\r\nhappens where as the Main Thread one is when the JS event loop gets\r\naround to processing the event.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Completion] Suggest trivial trailing closures for macros\n\nFollow the same logic as function decl completion and suggest a\ntrailing closure for trivial cases.\n\nrdar://150550747",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Align meta deducing for fft_r2c with fft_r2c_mkl on XPU (#156048)\n\nThere is a memory layout mismatching between `fft_r2c` XPU and Inductor meta deducing.\nOriginal `fft_r2c` Inductor meta deducing for XPU backend is aligned with CPU (fallback). This PR is to correct the Inductor meta deducing and update the torch-xpu-ops commit to [intel/torch-xpu-ops@`3a9419c`](https://github.com/intel/torch-xpu-ops/commit/3a9419c8bb6a98dd3e3cd473c36691fb4abeae40).\nThe XPU implementation first performs the R2C transform on the last dimension, followed by iterative C2C transforms on the remaining dimensions.\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156048\nApproved by: https://github.com/guangyey, https://github.com/etaf, https://github.com/jansel",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Concurrency] NonisolatedNonsendingByDefault/NFC: Move 'same module' check higher\n\nThis is a follow-up to https://github.com/swiftlang/swift/pull/82173\nwhich moves the check higher to make it an early exist.",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #10897 from tensorflow:laxmareddyp-patch-4\n\nPiperOrigin-RevId: 503662856",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[MPSInductor][BE] Fix multistage reduction check (#156567)\n\nFrom less than max threadgroup size to less or equal to that, which eliminates redundant trivial loops.\n\nI.e. it changes shader code generated for\n```python\nimport torch\n\ndef f(x):\n    var, mean = torch.var_mean(x, dim=2, keepdim = True)\n    return x / var, var\n\ntorch.compile(f)(torch.rand(1, 16, 1024, dtype=torch.float32, device='mps'))\n\n```\n\nfrom\n```metal\n[[max_total_threads_per_threadgroup(1024)]]\nkernel void generated_kernel(\n    device float* out_ptr1,\n    device float* out_ptr2,\n    constant float* in_ptr0,\n    uint2 thread_pos [[thread_position_in_grid]],\n    uint2 group_pos [[thread_position_in_threadgroup]]\n) {\n    auto xindex = thread_pos.x;\n    auto r0_index = thread_pos.y;\n    int x0 = xindex;\n    threadgroup float3 tmp_acc_0[1024];\n    tmp_acc_0[r0_index * 1] = 0.0;\n    for(auto r0_1_cnt = 0; r0_1_cnt < 1; ++r0_1_cnt) {\n        int r0_1 = 1 * r0_index + r0_1_cnt;\n        auto tmp0 = in_ptr0[r0_1 + 1024*x0];\n        tmp_acc_0[r0_index * 1] = ::c10::metal::welford_combine(tmp_acc_0[r0_index * 1], float3(tmp0, 0.0, 1.0));\n    }\n    auto tmp1 = c10::metal::threadgroup_welford_combine(tmp_acc_0, 1024);\n    auto tmp2 = 1023.0;\n    auto tmp3 = tmp1.y / tmp2;\n    out_ptr1[x0] = static_cast<float>(tmp3);\n    for(auto r0_1_cnt = 0; r0_1_cnt < 1; ++r0_1_cnt) {\n        int r0_1 = 1 * r0_index + r0_1_cnt;\n        auto tmp4 = in_ptr0[r0_1 + 1024*x0];\n        auto tmp5 = tmp4 / tmp3;\n        out_ptr2[r0_1 + 1024*x0] = static_cast<float>(tmp5);\n    }\n}\n```\nto\n```metal\n[[max_total_threads_per_threadgroup(1024)]]\nkernel void generated_kernel(\n    device float* out_ptr1,\n    device float* out_ptr2,\n    constant float* in_ptr0,\n    uint2 thread_pos [[thread_position_in_grid]],\n    uint2 group_pos [[thread_position_in_threadgroup]]\n) {\n    auto xindex = thread_pos.x;\n    auto r0_index = thread_pos.y;\n    int r0_1 = r0_index;\n    int x0 = xindex;\n    threadgroup float tmp_acc_0[1024];\n    auto tmp0 = in_ptr0[r0_1 + 1024*x0];\n    tmp_acc_0[r0_index * 1] = tmp0;\n    auto tmp1 = c10::metal::threadgroup_welford_reduce(tmp_acc_0, 1024);\n    auto tmp2 = 1023.0;\n    auto tmp3 = tmp1.y / tmp2;\n    out_ptr1[x0] = static_cast<float>(tmp3);\n    auto tmp4 = tmp0 / tmp3;\n    out_ptr2[r0_1 + 1024*x0] = static_cast<float>(tmp4);\n}\n\n``\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156567\nApproved by: https://github.com/dcci\nghstack dependencies: #156566",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Update IsInPlaceOperation() to return true for all potential in-place ops (NFC).\n\nCurrently, the real reference is GetInPlaceInputOutputPairs() for whether an op\nis in-place. For most cases, this is also the method that should be called to\nget a real idea whether some buffer will be reused by a user instruction.\nRename IsInPlaceOperation() to IsPotentialInPlaceOperation() to make it clear\nthat this is not a definite check.\nThis is a non-functional change because the only caller of IsInPlaceOperation()\noutside of hlo_dataflow_analysis currently does not actually use this result.\n\nAlso fix some ClangTidy warnings in hlo_dataflow_analysis.cc\n\nPiperOrigin-RevId: 767489058",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat(runtime): add SIGUSR2 handler for low memory notifications (#29295)\n\nThis commit adds a signal handler for SIGUSR2 that helps reduce the\nmemory usage of both main worker and web worker by:\n\n1. Triggering `malloc_trim(0)` to release memory back to the system\n2. Invoking V8 isolate's `low_memory_notification` function\n\nThis is only available on Linux and enabled when `DENO_USR2_MEMORY_TRIM`\nenv var is specified.\n\n---------\n\nCo-authored-by: Yusuke Tanaka <yusuktan@maguro.dev>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #11171 from tensorflow:laxma_vision_bhd\n\nPiperOrigin-RevId: 611244553",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[build] Switch over to new `--cross-compile-build-swift-tools` flag when cross-compiling Foundation macros (#82163)\n\nFollow-on to #38441, missed this there.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "chore[DevTools/Tree]: don't pre-select root element and remove unused code (#32015)\n\nIn this PR:\r\n1. Removed unused code in `Tree.js`\r\n2. Removed logic for pre-selecting first element in the tree by default.\r\nThis is a bit clowny, because it steals focus and resets scroll, when\r\nuser attempts to expand / collapse some subtree.\r\n3. Updated comments around\r\nhttps://github.com/facebook/react/commit/1c381c588aed1ed6814f1be04fbe42cd069ce174.\r\n\r\nTo expand on 3-rd point, for someone who might be reading this in the\r\nfuture:\r\nWe can't guarantee focus of RDT browser extension panels, because they\r\nare hosted in an `iframe`. Attempting to fire any events won't have any\r\nresult, user action with the corresponding `iframe` is required in order\r\nfor this `iframe` to obtain focus.\r\n\r\nThe only reason why built-in Elements panel in Chrome works correctly is\r\nbecause it is supported natively somewhere in Chrome / Chrome DevTools.\r\nAlso, when you select an element on the application page, Chrome will\r\nmake sure that Elements panel opened, which technically guarantees focus\r\ninside DevTools window and Elements panel subview.\r\n\r\nAs of today, we can't navigate user to third-party extensions panels,\r\nthere is no API for this, hence no ability to guarantee focused RDT\r\npanels.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Bump micromatch from 4.0.5 to 4.0.8 in /compiler (#31186)\n\nBumps [micromatch](https://github.com/micromatch/micromatch) from 4.0.5\r\nto 4.0.8.\r\n<details>\r\n<summary>Release notes</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/micromatch/micromatch/releases\">micromatch's\r\nreleases</a>.</em></p>\r\n<blockquote>\r\n<h2>4.0.8</h2>\r\n<p>Ultimate release that fixes both CVE-2024-4067 and CVE-2024-4068. We\r\nconsider the issues low-priority, so even if you see automated scanners\r\nsaying otherwise, don't be scared.</p>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Changelog</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/micromatch/micromatch/blob/master/CHANGELOG.md\">micromatch's\r\nchangelog</a>.</em></p>\r\n<blockquote>\r\n<h2>[4.0.8] - 2024-08-22</h2>\r\n<ul>\r\n<li>backported CVE-2024-4067 fix (from v4.0.6) over to 4.x branch</li>\r\n</ul>\r\n<h2>[4.0.7] - 2024-05-22</h2>\r\n<ul>\r\n<li>this is basically v4.0.5, with some README updates</li>\r\n<li><strong>it is vulnerable to CVE-2024-4067</strong></li>\r\n<li>Updated braces to v3.0.3 to avoid CVE-2024-4068</li>\r\n<li>does NOT break API compatibility</li>\r\n</ul>\r\n<h2>[4.0.6] - 2024-05-21</h2>\r\n<ul>\r\n<li>Added <code>hasBraces</code> to check if a pattern contains\r\nbraces.</li>\r\n<li>Fixes CVE-2024-4067</li>\r\n<li><strong>BREAKS API COMPATIBILITY</strong></li>\r\n<li>Should be labeled as a major release, but it's not.</li>\r\n</ul>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/8bd704ec0d9894693d35da425d827819916be920\"><code>8bd704e</code></a>\r\n4.0.8</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/a0e68416a44da10f3e4e30845ab95af4fd286d5a\"><code>a0e6841</code></a>\r\nrun verb to generate README documentation</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/4ec288484f6e8cccf597ad3d43529c31d0f7a02a\"><code>4ec2884</code></a>\r\nMerge branch 'v4' into hauserkristof-feature/v4.0.8</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/03aa8052171e878897eee5d7bb2ae0ae83ec2ade\"><code>03aa805</code></a>\r\nMerge pull request <a\r\nhref=\"https://redirect.github.com/micromatch/micromatch/issues/266\">#266</a>\r\nfrom hauserkristof/feature/v4.0.8</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/814f5f70efcd100ca9d29198867812a3d6ab91a8\"><code>814f5f7</code></a>\r\nlint</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/67fcce6a1077c2faf5ad0c5f998fa70202cc5dae\"><code>67fcce6</code></a>\r\nfix: CHANGELOG about braces &amp; CVE-2024-4068, v4.0.5</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/113f2e3fa7cb30b429eda7c4c38475a8e8ba1b30\"><code>113f2e3</code></a>\r\nfix: CVE numbers in CHANGELOG</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/d9dbd9a266686f44afb38da26fe016f96d1ec04f\"><code>d9dbd9a</code></a>\r\nfeat: updated CHANGELOG</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/2ab13157f416679f54e3a32b1425e184bd16749e\"><code>2ab1315</code></a>\r\nfix: use actions/setup-node@v4</li>\r\n<li><a\r\nhref=\"https://github.com/micromatch/micromatch/commit/1406ea38f3e24b29f4d4f46908d5cffcb3e6c4ce\"><code>1406ea3</code></a>\r\nfeat: rework test to work on macos with node 10,12 and 14</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/micromatch/micromatch/compare/4.0.5...4.0.8\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=micromatch&package-manager=npm_and_yarn&previous-version=4.0.5&new-version=4.0.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #10896 from tensorflow:laxmareddyp-patch-3\n\nPiperOrigin-RevId: 503661865",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[compiler] Validate static components\n\nReact uses function identity to determine whether a given JSX expression represents the same type of component and should reconcile (keep state, update props) or replace (teardown state, create a new instance). This PR adds off-by-default validation to check that developers are not dynamically creating components during render.\n\nThe check is local and intentionally conservative. We specifically look for the results of call expressions, new expressions, or function expressions that are then used directly (or aliased) as a JSX tag. This allows common sketchy but fine-in-practice cases like passing a reference to a component from a parent as props, but catches very obvious mistakes such as:\n\n```js\nfunction Example() {\n  const Component = createComponent();\n  return <Component />;\n}\n```\n\nWe could expand this to catch more cases, but this seems like a reasonable starting point. Note that I tried enabling the validation by default and the only fixtures that error are the new ones added here. I'll also test this internally. What i'm imagining is that we enable this in the linter but not the compiler.\n\nghstack-source-id: e7408c0a55478b40d65489703d209e8fa7205e45\nPull Request resolved: https://github.com/facebook/react/pull/32683",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ios blink] Avoid underscores in chrome_framework bundle id\n\nDon't override the framework bundle id in the chrome_app template so\nthat it uses the bundle id specified in the ios_framework_bundle\ntemplate which uses the same value, but replaces underscores with\nhyphens as required by the rfc1034 spec that bundle ids have to follow.\n\nBug: 40254930\nCq-Include-Trybots: luci.chromium.try:ios-blink-rel-fyi\nChange-Id: I6a6a696466a906af8f496338821ec9fd75e46916\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6666220\nCommit-Queue: Rohit Rao <rohitrao@chromium.org>\nAuto-Submit: Sunny Sachanandani <sunnyps@chromium.org>\nReviewed-by: Rohit Rao <rohitrao@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1478126}",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "s390/mm: Fix in_atomic() handling in do_secure_storage_access()\n\nKernel user spaces accesses to not exported pages in atomic context\nincorrectly try to resolve the page fault.\nWith debug options enabled call traces like this can be seen:\n\nBUG: sleeping function called from invalid context at kernel/locking/rwsem.c:1523\nin_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 419074, name: qemu-system-s39\npreempt_count: 1, expected: 0\nRCU nest depth: 0, expected: 0\nINFO: lockdep is turned off.\nPreemption disabled at:\n[<00000383ea47cfa2>] copy_page_from_iter_atomic+0xa2/0x8a0\nCPU: 12 UID: 0 PID: 419074 Comm: qemu-system-s39\nTainted: G        W           6.16.0-20250531.rc0.git0.69b3a602feac.63.fc42.s390x+debug #1 PREEMPT\nTainted: [W]=WARN\nHardware name: IBM 3931 A01 703 (LPAR)\nCall Trace:\n [<00000383e990d282>] dump_stack_lvl+0xa2/0xe8\n [<00000383e99bf152>] __might_resched+0x292/0x2d0\n [<00000383eaa7c374>] down_read+0x34/0x2d0\n [<00000383e99432f8>] do_secure_storage_access+0x108/0x360\n [<00000383eaa724b0>] __do_pgm_check+0x130/0x220\n [<00000383eaa842e4>] pgm_check_handler+0x114/0x160\n [<00000383ea47d028>] copy_page_from_iter_atomic+0x128/0x8a0\n([<00000383ea47d016>] copy_page_from_iter_atomic+0x116/0x8a0)\n [<00000383e9c45eae>] generic_perform_write+0x16e/0x310\n [<00000383e9eb87f4>] ext4_buffered_write_iter+0x84/0x160\n [<00000383e9da0de4>] vfs_write+0x1c4/0x460\n [<00000383e9da123c>] ksys_write+0x7c/0x100\n [<00000383eaa7284e>] __do_syscall+0x15e/0x280\n [<00000383eaa8417e>] system_call+0x6e/0x90\nINFO: lockdep is turned off.\n\nIt is not allowed to take the mmap_lock while in atomic context. Therefore\nhandle such a secure storage access fault as if the accessed page is not\nmapped: the uaccess function will return -EFAULT, and the caller has to\ndeal with this. Usually this means that the access is retried in process\ncontext, which allows to resolve the page fault (or in this case export the\npage).\n\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nAcked-by: Alexander Gordeev <agordeev@linux.ibm.com>\nAcked-by: Christian Borntraeger <borntraeger@linux.ibm.com>\nLink: https://lore.kernel.org/r/20250603134936.1314139-1-hca@linux.ibm.com\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Add retry_on_oom paramater to AllocateRawBuffer to allow\npotentially evicting caches from etc to make space for a buffer which causes an oom.\n\nPiperOrigin-RevId: 770447227",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Fizz] Add Node Web Streams bundle for SSR (#33441)\n\nWe highly recommend using Node Streams in Node.js because it's much\nfaster and it is less likely to cause issues when chained in things like\ncompression algorithms that need explicit flushing which the Web Streams\necosystem doesn't have a good solution for. However, that said, people\nwant to be able to use the worse option for various reasons.\n\nThe `.edge` builds aren't technically intended for Node.js. A Node.js\nenvironments needs to be patched in various ways to support it. It's\nalso less optimal since it can't use [Node.js exclusive\nfeatures](https://github.com/facebook/react/pull/33388) and have to use\n[the lowest common\ndenominator](https://github.com/facebook/react/pull/27399) such as JS\nimplementations instead of native.\n\nThis adds a Web Streams build of Fizz but exclusively for Node.js so\nthat in it we can rely on Node.js modules. The main difference compared\nto Edge is that SSR now uses `createHash` from the `\"crypto\"` module and\nimports `TextEncoder` from `\"util\"`. We use `setImmediate` instead of\n`setTimeout`.\n\nThe public API is just `react-dom/server` which in Node.js automatically\nimports `react-dom/server.node` which re-exports the legacy bundle, Node\nStreams bundle and Node Web Streams bundle. The main downside is if your\nbundler isn't smart to DCE this barrel file.\n\nWith Flight the difference is larger but that's a bigger lift.",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #11115 from tensorflow:sineeli-patch-15\n\nPiperOrigin-RevId: 586467627",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "ViewTransitions in Navigation (#32028)\n\nThis adds navigation support to the View Transition fixture using both\n`history.pushState/popstate` and the Navigation API models.\n\nBecause `popstate` does scroll restoration synchronously at the end of\nthe event, but `startViewTransition` cannot start synchronously, it\nwould observe the \"old\" state as after applying scroll restoration. This\nleads to weird artifacts. So we intentionally do not support View\nTransitions in `popstate`. If it suspends anyway for some other reason,\nthen scroll restoration is broken anyway and then it is supported. We\ndon't have to do anything here because this is already how things worked\nbecause the sync `popstate` special case already included the sync lane\nwhich opts it out of View Transitions.\n\nFor the Navigation API, scroll restoration can be blocked. The best way\nto do this is to resolve the Navigation API promise after React has\napplied its mutation. We can detect if there's currently any pending\nnavigation and wait to resolve the `startViewTransition` until it\nfinishes and any scroll restoration has been applied.\n\n\nhttps://github.com/user-attachments/assets/f53b3282-6315-4513-b3d6-b8981d66964e\n\nThere is a subtle thing here. If we read the viewport metrics before\nscroll restoration has been applied, then we might assume something is\nor isn't going to be within the viewport incorrectly. This is evident on\nthe \"Slide In from Left\" example. When we're going forward to that page\nwe shift the scroll position such that it's going to appear in the\nviewport. If we did this before applying scroll restoration, it would\nnot animate because it wasn't in the viewport then. Therefore, we need\nto run the after mutation phase after scroll restoration.\n\nA consequence of this is that you have to resolve Navigation in\n`useInsertionEffect` as otherwise it leads to a deadlock (which\neventually gets broken by `startViewTransition`'s timeout of 10\nseconds). Another consequence is that now `useLayoutEffect` observes the\nrestored state. However, I think what we'll likely do is move the layout\nphase to before the after mutation phase which also ensures that\nauto-scrolling inside `useLayoutEffect` are considered in the viewport\nmeasurements as well.",
        "true_label": [
          1.0,
          0.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Remove SecureMockMaker (#127773)\n\nThe SecureMockMaker is a way for mockito to be allowed SM permissions\nfor proxying. Since the Security Manager is no longer used, secure mocks\nare no longer needed. This commit removes them.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[xla:cpu:xnn] Store HLO -> XNNPACK unary/binary op mapping in maps.\n\nThis is so we can trivially construct a set of all supported XNNPACK ops.\n\nPiperOrigin-RevId: 775299975",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "feat(unstable): WebTransport (#27431)\n\nInitial implementation of WebTransport client and server!\n\nThis is very unstable because the interface should eventually shift to\nuse hyper (h3 is on the [2025\nroadmap](https://hyper.rs/contrib/roadmap/)) instead of manually messing\nwith the the protocol, which will enable integration with\nDeno.serveHttp/etc and allow WebTransport over h2. This will also let us\nexpose multiplexing.\n\nWebTransport stats will be a followup due to their complexity.\n\nFixes: https://github.com/denoland/deno/issues/9017",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Mute org.elasticsearch.gradle.internal.release.ReleaseNotesGeneratorTest generateFile_index_noHighlights_rendersCorrectMarkup #128773",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Make RepositoriesService project-aware (#129821)\n\nThis PR makes RepositoriesService project aware so that the basic Put,\nGet, Delete and Verify repository actions are now project scoped. \n\nIt intentionally leaves the following aspects out of scope for the\ncurrent changes: * Repository stats reporting * Repository clean-up,\nanalysis and integrity verification * Repository usages for searchable\nsnapshots and CCR\n\nThey will be worked on separately. One main reason for leaving them out\nis that they are not needed by OBS which is currently blocked by\nrepository/snapshot changes. They may also have their own complexities,\ne.g. stats reporting.\n\nResolves: ES-10478",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "MNT Add missing cython-lint install in lint workflow (#31208)",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "(Version 0.15.0) Add fine tune creation suffix arg to openai cli (#75)\n\n* Add fine tune creation suffix arg to openai cli (#120)\r\n\r\n* Update the minor version from 0.14 to 0.15 due to adding a new `suffix` CLI arg when creating finetune models",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Tests] NFC: Update `Sema/enum_raw_representable_object_literals.swift`\n\nThis is follow-up to https://github.com/swiftlang/swift/pull/82275.\nThe test in question is enabled only on iOS so it slipped through.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix lifetime dependence diagnostics on Void types.\n\nAllow a dependence on Void to be considered immortal. This is the ultimate\noverride in cases where no other code pattern is supported yet.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Add SHAPE_ID_HAS_IVAR_MASK for quick ivar check\n\nThis allow checking if an object has ivars with just a shape_id\nmask.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "CI: Have dedicated Python 3.13 job instead of using Python dev (#61333)\n\n* CI: Have dedicated Python 3.13 job instead of using Python dev\n\n* Rename environment name\n\n* Track down resource warning\n\n* Fix -vv usage\n\n* Add __exit__ methods to PandasSQL\n\n* Revert \"Add __exit__ methods to PandasSQL\"\n\nThis reverts commit 374c5ac7515b3681c6fb8e0ce1dcc3310f54f516.\n\n* Focus on only running sqlite tests\n\n* Fix testing path\n\n* Dont mess with test path\n\n* unskip sqlalchemy sqlite tests\n\n* Remove tests that don't exercise the failures\n\n* Remove bulk of tests\n\n* freeze some workflows\n\n* Freeze more workflows\n\n* disable more jobs\n\n* See if forced collection raises ResourceError earlier\n\n* Try context manager in test_delete_rows_is_atomic\n\n* Undo all changes and update test\n\n* Use a file in test_database_uri_string\n\n* Remove another uneeded parametrization",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Remove code that seems redundant.\n\nWhen we start off with an aliasing pair returned by GetInPlaceInputOutputPairs,\nwe can be sure that the buffer will be shared. BufferAssignment does not use\nthe CanShareBuffer hook to disallow any in-place rule.\nBesides, the call of the hook had another issue, it passed\noperand_index.operand_index as value for user_index.\n\nPiperOrigin-RevId: 773739920",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "ci: update step name in workflow (#61393)\n\nThis was named incorrectly.\n\nPR Close #61393",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Support boolean tensor for torch.fused_moving_avg_obs_fake_quant on CUDA (#153699)\n\nFixes #153310\n\nAs the title\n\n**Test plan**\n```\npytest test/quantization/core/test_workflow_ops.py -k test_fused_obs_fake_quant_moving_avg\n```\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/153699\nApproved by: https://github.com/mingfeima, https://github.com/jerryzh168",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Minor subject/verb agreement fix (#127955)\n\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #49939 from corhere/libn/networkdb-broadcast-overflow\n\nlibn/networkdb: don't exceed broadcast size limit",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(install): don't error on unknown media types in install (#28234)\n\nFixes https://github.com/denoland/deno/issues/28223\n\nThis is kind of an ugly fix, but it works, and I think is the easiest\nway to handle the fact that when caching the module graph we might\nencounter imports that won't actually error at runtime (for instance in\nfiles that will be bundled).",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "wifi: ath11k: consistently use ath11k_mac_get_fw_stats()\n\nCurrently to get firmware stats, ath11k_mac_op_get_txpower() calls\nath11k_fw_stats_request() and ath11k_mac_op_sta_statistics() calls\nath11k_mac_get_fw_stats(). Those two helpers are basically doing\nthe same, except for:\n\n1. ath11k_mac_get_fw_stats() verifies ar->state inside itself.\n2. ath11k_mac_get_fw_stats() calls ath11k_mac_fw_stats_request()\n   which then calls ath11k_mac_fw_stats_reset() to free pdev/vdev\n   stats whereas only pdev stats are freed by ath11k_fw_stats_request().\n3. ath11k_mac_get_fw_stats() waits for ar->fw_stats_complete and\n   ar->fw_stats_done, whereas ath11k_fw_stats_request() only waits for\n   ar->fw_stats_complete.\n\nChange to call ath11k_mac_get_fw_stats() in ath11k_mac_op_get_txpower().\nThis is valid because:\n\n1. ath11k_mac_op_get_txpower() also has the same request on ar->state.\n2. it is harmless to call ath11k_fw_stats_vdevs_free() since\n   ar->fw_stats.vdevs should be empty and there should be no one\n   expecting it at that time.\n3. ath11k_mac_op_get_txpower() only needs pdev stats. For pdev stats,\n   ar->fw_stats_done is set to true whenever ar->fw_stats_complete is\n   set to true in ath11k_update_stats_event(). So additional wait on\n   ar->fw_stats_done does not wast any time.\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.37\n\nSigned-off-by: Baochen Qiang <quic_bqiang@quicinc.com>\nReviewed-by: Vasanthakumar Thiagarajan <vasanthakumar.thiagarajan@oss.qualcomm.com>\nLink: https://patch.msgid.link/20250220082448.31039-8-quic_bqiang@quicinc.com\nSigned-off-by: Jeff Johnson <jeff.johnson@oss.qualcomm.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Add option to disable sharing convs across levels in RetinaNet head.\n\nAlso significantly refactor the code to move component builder to individual functions and reduce duplicate code to improve readability.\n\nPiperOrigin-RevId: 533598893",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Feature] Support `is_split_into_words` in the `TokenClassificationPipeline`. (#38818)\n\n* some fixes\n\n* some fixes\n\n* now the pipeline can take list of tokens as input and is_split_into_words argument\n\n* now the pipeline can take list of tokens as input and is_split_into_words argument\n\n* now the pipeline can take list of tokens as input and is_split_into_words argument and we can handle batches of tokenized input\n\n* now the pipeline can take list of tokens as input and is_split_into_words argument and we can handle batches of tokenized input\n\n* solving test problems\n\n* some fixes\n\n* some fixes\n\n* modify tests\n\n* aligning start and end correctly\n\n* adding tests\n\n* some formatting\n\n* some formatting\n\n* some fixes\n\n* some fixes\n\n* some fixes\n\n* resolve conflicts\n\n* removing unimportant lines\n\n* removing unimportant lines\n\n* generalize to other languages\n\n* generalize to other languages\n\n* generalize to other languages\n\n* generalize to other languages",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "refactor: allow lazy main module (#28929)\n\nimplement lazy(?) mode. an unconfigured jsruntime is created if\nDENO_UNSTABLE_CONTROL_SOCK is present, and later passed into deno_runtime to be\nconfigured and used.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Conditionally force sequential reading in LuceneSyntheticSourceChangesSnapshot (#128473)\n\nChange LuceneSyntheticSourceChangesSnapshot to force sequential stored field reading when index.code is best_compression.\n\nIn CCR benchmarks I see that relatively often we spend a lot of time compressing the same stored field block over and over again when the doc ids are not dense. It is likely when a seqno range is requested that the corresponding doc id list contains gaps. However most docids are monotonically increasing, so not sequential reading harms performance. The reason that currently we're not loading sequentially is because of the logic in `StoredFieldLoader#hasSequentialDocs(...)`, which requires all requested docids to be in monotonically order (no gaps allowed). In the case of `LuceneSyntheticSourceChangesSnapshot` with stored field best compression that is too conservative. In practice, we end decompressing stored field blocks for each docid we need to synthetisize source for recovery.\n\nI think it makes sense to do sequential reading in this case, given that it is very likely that many of the requested doc id ranges will contain monotonically increasing ranges. Note that the requested docids will always sort in ascending order (this happens in `LuceneSyntheticSourceChangesSnapshot#transformScoreDocsToRecords(...)`.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[compiler] moduleTypeProvider support for aliasing signatures (#33526)\n\nThis allows us to type things like `nullthrows()` or `identity()`\nfunctions where the return type is polymorphic on the input.\n\n---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed\nwith [ReviewStack](https://reviewstack.dev/facebook/react/pull/33526).\n* #33571\n* #33558\n* #33547\n* #33543\n* #33533\n* #33532\n* #33530\n* __->__ #33526\n* #33522\n* #33518",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "stacks: fix tests broken now that ephemeral outputs aren't allowed",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Remove unused local boolean value when inquiring on device model\n\nAt the time, the two triggers to inquire on device model are keyboard\nlock and the force request, which are both checked by the delegate. Now\nthat the local bool value is only used to check for allowlist, and llama\ntrigger should not happen on a high confidence allowlist match, we can\ninfer that we do not need to strictly test for keyboard lock only, thus\nmaking the local bool variable unnecessary.\n\nChange-Id: Ibe2a0c9f3af8ab2dd319c34150b4c7230ee463f4\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6652378\nAuto-Submit: Seung Jae Lim <andysjlim@chromium.org>\nReviewed-by: Xinghui Lu <xinghuilu@chromium.org>\nCommit-Queue: Seung Jae Lim <andysjlim@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1476538}",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[xla:benchmarks] Update workflow trigger to be push event for consistency\n\nPiperOrigin-RevId: 765325170",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(http): Delay stabilization until next app synchronization (#60656)\n\nThis commit updates the `HttpClient` internals to use the public\n`PendingTasks` API which delays stability until the next\n`ApplicationRef.tick` instead of causing the application to become\nstable synchronously. This is helpful to resolve unexpected issues where\ncomputations happen as follow-up work to the value coming out of the\nresponse.\n\nfixes https://github.com/angular/angular/issues/59352\n\nPR Close #60656",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fix maintainer check condition (#32110)\n\n<!--\n  Thanks for submitting a pull request!\nWe appreciate you spending the time to work on these changes. Please\nprovide enough information so that others can review your pull request.\nThe three fields below are mandatory.\n\nBefore submitting a pull request, please make sure the following is\ndone:\n\n1. Fork [the repository](https://github.com/facebook/react) and create\nyour branch from `main`.\n  2. Run `yarn` in the repository root.\n3. If you've fixed a bug or added code that should be tested, add tests!\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\nTestName` is helpful in development.\n5. Run `yarn test --prod` to test in the production environment. It\nsupports the same options as `yarn test`.\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\nopen `chrome://inspect`, and press \"Inspect\".\n7. Format your code with\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\ncheck changed files.\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\n  10. If you haven't already, complete the CLA.\n\nLearn more about contributing:\nhttps://reactjs.org/docs/how-to-contribute.html\n-->\n\n## Summary\n\nI've noticed that the value stored under `is_core_team` gets\nstringified, so some PRs may be mislabelled as coming from the core\nteam.\n\nI've checked this on my fork and saw stringified `null` returned by the\n`is_core_team`, and this PR explicitly checks for the correct value.\nFeel free to close this PR if you want to go with another approach.\n\n## How did you test this change?\n\nChecked this change on my fork with and without listing myself in the\nmaintainers file.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "Get rid of TOO_COMPLEX shape type\n\nInstead it's now a `shape_id` flag.\n\nThis allows to check if an object is complex without having\nto chase the `rb_shape_t` pointer.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Include Pinned Retriever in 9.1 Documentation (#129216)\n\n* propgating retrievers to inner retrievers\n\n* test feature taken care of\n\n* Small changes in concurrent multipart upload interfaces (#128977)\n\nSmall changes in BlobContainer interface and wrapper.\n\nRelates ES-11815\n\n* Unmute FollowingEngineTests#testProcessOnceOnPrimary() test (#129054)\n\nThe reason the test fails is that operations contained _seq_no field with different doc value types (with no skippers and with skippers) and this isn't allowed, since field types need to be consistent in a Lucene index.\n\nThe initial operations were generated not knowing about the fact the index mode was set to logsdb or time_series. Causing the operations to not have doc value skippers. However when replaying the operations via following engine, the operations did have doc value skippers.\n\nThe fix is to set `index.seq_no.index_options` to `points_and_doc_values`, so that the initial operations are indexed without doc value skippers.\n\nThis test doesn't gain anything from storing seqno with doc value skippers, so there is no loss of testing coverage.\n\nCloses #128541\n\n* [Build] Add support for publishing to maven central (#128659)\n\nThis ensures we package an aggregation zip with all artifacts we want to publish to maven central as part of a release.\nRunning zipAggregation will produce a zip file in the build/nmcp/zip folder. The content of this zip is meant to match the maven artifacts we have currently declared as dra maven artifacts.\n\n* ESQL: Check for errors while loading blocks (#129016)\n\nRuns a sanity check after loading a block of values. Previously we were\ndoing a quick check if assertions were enabled. Now we do two quick\nchecks all the time. Better - we attach information about how a block\nwas loaded when there's a problem.\n\nRelates to #128959\n\n* Make `PhaseCacheManagementTests` project-aware (#129047)\n\nThe functionality in `PhaseCacheManagement` was already project-aware,\nbut these tests were still using deprecated methods.\n\n* Vector test tools (#128934)\n\nThis adds some testing tools for verifying vector recall and latency\ndirectly without having to spin up an entire ES node and running a rally\ntrack.\n\nIts pretty barebones and takes inspiration from lucene-util, but I\nwanted access to our own formats and tooling to make our lives easier.\n\nHere is an example config file. This will build the initial index, run\nqueries at num_candidates: 50, then again at num_candidates 100 (without\nreindexing, and re-using the cached nearest neighbors).\n\n```\n[{\n  \"doc_vectors\" : \"path\",\n  \"query_vectors\" : \"path\",\n  \"num_docs\" : 10000,\n  \"num_queries\" : 10,\n  \"index_type\" : \"hnsw\",\n  \"num_candidates\" : 50,\n  \"k\" : 10,\n  \"hnsw_m\" : 16,\n  \"hnsw_ef_construction\" : 200,\n  \"index_threads\" : 4,\n  \"reindex\" : true,\n  \"force_merge\" : false,\n  \"vector_space\" : \"maximum_inner_product\",\n  \"dimensions\" : 768\n},\n{\n\"doc_vectors\" : \"path\",\n\"query_vectors\" : \"path\",\n\"num_docs\" : 10000,\n\"num_queries\" : 10,\n\"index_type\" : \"hnsw\",\n\"num_candidates\" : 100,\n\"k\" : 10,\n\"hnsw_m\" : 16,\n\"hnsw_ef_construction\" : 200,\n\"vector_space\" : \"maximum_inner_product\",\n\"dimensions\" : 768\n}\n]\n```\n\nTo execute:\n\n```\n./gradlew :qa:vector:checkVec --args=\"/Path/to/knn_tester_config.json\"\n```\n\nCalling `./gradlew :qa:vector:checkVecHelp` gives some guidance on how\nto use it, additionally providing a way to run it via java directly\n(useful to bypass gradlew guff).\n\n* ES|QL: refactor generative tests (#129028)\n\n* Add a test of LOOKUP JOIN against a time series index (#129007)\n\nAdd a spec test of `LOOKUP JOIN` against a time series index.\n\n* Make ILM `ClusterStateWaitStep` project-aware (#129042)\n\nThis is part of an iterative process to make ILM project-aware.\n\n* Mute org.elasticsearch.xpack.esql.qa.mixed.MixedClusterEsqlSpecIT test {lookup-join.LookupJoinOnTimeSeriesIndex ASYNC} #129078\n\n* Remove `ClusterState` param from ILM `AsyncBranchingStep` (#129076)\n\nThe `ClusterState` parameter of the `asyncPredicate` is not used\nanywhere.\n\n* Mute org.elasticsearch.xpack.esql.qa.mixed.MixedClusterEsqlSpecIT test {lookup-join.LookupJoinOnTimeSeriesIndex SYNC} #129082\n\n* Mute org.elasticsearch.upgrades.UpgradeClusterClientYamlTestSuiteIT test {p0=upgraded_cluster/70_ilm/Test Lifecycle Still There And Indices Are Still Managed} #129097\n\n* Mute org.elasticsearch.upgrades.UpgradeClusterClientYamlTestSuiteIT test {p0=upgraded_cluster/90_ml_data_frame_analytics_crud/Get mixed cluster outlier_detection job} #129098\n\n* Mute org.elasticsearch.packaging.test.DockerTests test081SymlinksAreFollowedWithEnvironmentVariableFiles #128867\n\n* Threadpool merge executor is aware of available disk space (#127613)\n\nThis PR introduces 3 new settings:\nindices.merge.disk.check_interval, indices.merge.disk.watermark.high, and indices.merge.disk.watermark.high.max_headroom\nthat control if the threadpool merge executor starts executing new merges when the disk space is getting low.\n\nThe intent of this change is to avoid the situation where in-progress merges exhaust the available disk space on the node's local filesystem.\nTo this end, the thread pool merge executor periodically monitors the available disk space, as well as the current disk space estimates required by all in-progress (currently running) merges on the node, and will NOT schedule any new merges if the disk space is getting low (by default below the 5% limit of the total disk space, or 100 GB, whichever is smaller (same as the disk allocation flood stage level)).\n\n* Add option to include or exclude vectors from _source retrieval (#128735)\n\nThis PR introduces a new include_vectors option to the _source retrieval context.\nWhen set to false, vectors are excluded from the returned _source.\nThis is especially efficient when used with synthetic source, as it avoids loading vector fields entirely.\n\nBy default, vectors remain included unless explicitly excluded.\n\n* Remove direct minScore propagation to inner retrievers\n\n* cleaned up skip\n\n* Mute org.elasticsearch.index.engine.ThreadPoolMergeExecutorServiceDiskSpaceTests testAvailableDiskSpaceMonitorWhenFileSystemStatErrors #129149\n\n* Add transport version for ML inference Mistral chat completion (#129033)\n\n* Add transport version for ML inference Mistral chat completion\n\n* Add changelog for Mistral Chat Completion version fix\n\n* Revert \"Add changelog for Mistral Chat Completion version fix\"\n\nThis reverts commit 7a57416bdc65805d5303ee3ee7db3368aad89689.\n\n* Correct index path validation (#129144)\n\nAll we care about is if reindex is true or false. We shouldn't worry\nabout force merge. Because if reindex is true, we will create the\ndirectory, if its false, we won't.\n\n* Mute org.elasticsearch.index.engine.ThreadPoolMergeExecutorServiceDiskSpaceTests testUnavailableBudgetBlocksNewMergeTasksFromStartingExecution #129148\n\n* Implemented completion task for Google VertexAI  (#128694)\n\n* Google Vertex AI completion model, response entity and tests\n\n* Fixed GoogleVertexAiServiceTest for Service configuration\n\n* Changelog\n\n* Removed downcasting and using `moveToFirstToken`\n\n* Create GoogleVertexAiChatCompletionResponseHandler for streaming and non streaming responses\n\n* Added unit tests\n\n* PR feedback\n\n* Removed googlevertexaicompletion model. Using just GoogleVertexAiChatCompletionModel for completion and chat completion\n\n* Renamed uri -> nonStreamingUri. Added streamingUri and getters in GoogleVertexAiChatCompletionModel\n\n* Moved rateLimitGroupHashing to subclasses of GoogleVertexAiModel\n\n* Fixed rate limit has of GoogleVertexAiRerankModel and refactored uri for GoogleVertexAiUnifiedChatCompletionRequest\n\n---------\n\nCo-authored-by: lhoet-google <lhoet@google.com>\nCo-authored-by: Jonathan Buttner <56361221+jonathan-buttner@users.noreply.github.com>\n\n* ES|QL - kNN function initial support (#127322)\n\n* Remove optional seed from ES|QL SAMPLE (#128887)\n\n* Remove optional seed from ES|QL SAMPLE\n\n* make it clear that seed is for testing\n\n* [Inference API] Add \"rerank\" task type to \"elastic\" provider (#126022)\n\n* Rename target destination for microbenchmarks (#128878)\n\n* Include direct memory and non-heap memory in ML memory calculations (take #2) (#128742)\n\n* Include direct memory and non-heap memory in ML memory calculations.\n\n* Reduce ML_ONLY heap size, so that direct memory is accounted for.\n\n* [CI] Auto commit changes from spotless\n\n* changelog\n\n* improve docs\n\n* Reuse direct memory to heap factor\n\n* feature flag\n\n---------\n\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>\n\n* Throw better exception for unsupported aggregations over shape fields (#129139)\n\n* Update Test Framework To Handle Query Rewrites That Rely on Non-Null Searchers (#129160)\n\n* Update ReproduceInfoPrinter to correctly print a reproduction line for Lucene & build candidate upgrade tests (#129044)\n\n* Increment inference stats counter for shard bulk inference calls (#129140)\n\nThis change updates the inference stats counter to include chunked inference calls performed by the shard bulk inference filter on all semantic text fields.\nIt ensures that usage of inference on semantic text fields is properly recorded in the stats.\n\n* Synthetic source: avoid storing multi fields of type text and match_only_text by default. (#129126)\n\nDon't store text and match_only_text field by default when source mode is synthetic and a field is a multi field or when there is a suitable multi field.\n\nWithout this change, ES would store field otherwise twice in a multi-field configuration.\n\nFor example:\n\n```\n...\n\"os\": {\n  \"properties\": {\n    \"name\": {\n      \"ignore_above\": 1024,\n      \"type\": \"keyword\",\n      \"fields\": {\n        \"text\": {\n          \"type\": \"match_only_text\"\n        }\n      }\n    }\n...\n```\n\nIn this case, two stored fields were added, one in case for the `name` field and one for `name.text` multi-field.\nThis change prevents this, and would never store a stored field when text or match_only_text field is a multi-field.\n\n* Adding `scheduled_report_id` field to kibana reporting template (#127827)\n\n* Adding scheduled_report_id field to kibana reporting template\n\n* Incrementing stack template registry version\n\n* ES|QL: Add FORK generative tests (#129135)\n\n* ES|QL Completion command syntax change (#129189)\n\n* Included pinned retriever in 9.1 docs\n\n* reverted unnecessary change\n\n* made the suggested changes\n\n* Update retrievers.md\n\n* Update docs/reference/elasticsearch/rest-apis/retrievers.md\n\nCo-authored-by: Liam Thompson <32779855+leemthompo@users.noreply.github.com>\n\n* Update docs/reference/elasticsearch/rest-apis/retrievers.md\n\nCo-authored-by: Liam Thompson <32779855+leemthompo@users.noreply.github.com>\n\n* Update retrievers.md\n\n---------\n\nCo-authored-by: Tanguy Leroux <tlrx.dev@gmail.com>\nCo-authored-by: Martijn van Groningen <martijn.v.groningen@gmail.com>\nCo-authored-by: Rene Groeschke <rene@elastic.co>\nCo-authored-by: Nik Everett <nik9000@gmail.com>\nCo-authored-by: Niels Bauman <33722607+nielsbauman@users.noreply.github.com>\nCo-authored-by: Benjamin Trent <ben.w.trent@gmail.com>\nCo-authored-by: Luigi Dell'Aquila <luigi.dellaquila@gmail.com>\nCo-authored-by: Bogdan Pintea <bogdan.pintea@elastic.co>\nCo-authored-by: elasticsearchmachine <58790826+elasticsearchmachine@users.noreply.github.com>\nCo-authored-by: Albert Zaharovits <email+github@zalbert.me>\nCo-authored-by: Jim Ferenczi <jim.ferenczi@elastic.co>\nCo-authored-by: Jan-Kazlouski-elastic <jan.kazlouski@elastic.co>\nCo-authored-by: Leonardo Hoet <55866308+leo-hoet@users.noreply.github.com>\nCo-authored-by: lhoet-google <lhoet@google.com>\nCo-authored-by: Jonathan Buttner <56361221+jonathan-buttner@users.noreply.github.com>\nCo-authored-by: Carlos Delgado <6339205+carlosdelest@users.noreply.github.com>\nCo-authored-by: Jan Kuipers <148754765+jan-elastic@users.noreply.github.com>\nCo-authored-by: Tim Grein <tim.grein@elastic.co>\nCo-authored-by: Ievgen Degtiarenko <ievgen.degtiarenko@elastic.co>\nCo-authored-by: elasticsearchmachine <infra-root+elasticsearchmachine@elastic.co>\nCo-authored-by: Ignacio Vera <ignacio.vera@elastic.co>\nCo-authored-by: Mike Pellegrini <mike.pellegrini@elastic.co>\nCo-authored-by: Moritz Mack <mmack@apache.org>\nCo-authored-by: Ying Mao <ying.mao@elastic.co>\nCo-authored-by: Ioana Tagirta <ioanatia@users.noreply.github.com>\nCo-authored-by: Aur\u00e9lien FOUCRET <aurelien.foucret@gmail.com>\nCo-authored-by: Liam Thompson <32779855+leemthompo@users.noreply.github.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          0,
          0,
          0,
          0
        ]
      },
      {
        "text": "[XLA:GPU] Switch to arith.truncf for splitting F32 to two or three BF16s\n\nThe initial impl used bitmask to split f32. It was not precise.\nThe distribution of the relative errors of BF16_X3 and BF16_X6 had the tendency to move to the negative side. Also the max relative error was higher.\n\nPiperOrigin-RevId: 772008779",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "kubectl: avoid logging during init\n\nLoadTranslations gets called during the init phase:\n\n     0  0x0000000005926c56 in k8s.io/kubectl/pkg/util/i18n.LoadTranslations\n        at ./staging/src/k8s.io/kubectl/pkg/util/i18n/i18n.go:146\n     1  0x0000000005926727 in k8s.io/kubectl/pkg/util/i18n.init.func1\n        at ./staging/src/k8s.io/kubectl/pkg/util/i18n/i18n.go:60\n     2  0x000000000592780f in k8s.io/kubectl/pkg/util/i18n.lazyLoadTranslations.func1\n        at ./staging/src/k8s.io/kubectl/pkg/util/i18n/i18n.go:191\n     3  0x0000000001b876e8 in sync.(*Once).doSlow\n        at /nvme/gopath/go-1.24.0/src/sync/once.go:78\n     4  0x0000000001b8753e in sync.(*Once).Do\n        at /nvme/gopath/go-1.24.0/src/sync/once.go:69\n     5  0x0000000005927565 in k8s.io/kubectl/pkg/util/i18n.lazyLoadTranslations\n        at ./staging/src/k8s.io/kubectl/pkg/util/i18n/i18n.go:187\n     6  0x00000000059275cd in k8s.io/kubectl/pkg/util/i18n.T\n        at ./staging/src/k8s.io/kubectl/pkg/util/i18n/i18n.go:201\n     7  0x000000000599fb6d in k8s.io/kubectl/pkg/cmd/apiresources.init\n        at <autogenerated>:1\n     8  0x0000000001b41bf4 in runtime.doInit1\n        at /nvme/gopath/go-1.24.0/src/runtime/proc.go:7350\n     9  0x0000000001b6bf8a in runtime.doInit\n        at /nvme/gopath/go-1.24.0/src/runtime/proc.go:7317\n    10  0x0000000001b33910 in runtime.main\n        at /nvme/gopath/go-1.24.0/src/runtime/proc.go:254\n    11  0x0000000001b72881 in runtime.goexit\n        at /nvme/gopath/go-1.24.0/src/runtime/asm_amd64.s:1700\n\nDuring init, klog verbosity is either zero (making the log call redundant\nbecause it doesn't print anything) or some other init function reconfigures\nlogging, in which case the output is potentially confusing because it is not\nguaranteed that logging is reconfigured before the log call is invoked.\n\nIn other scenarios, flag parsing might switch from klog text format to\nsomething else entirely, which then leads to a mixture of text and e.g. JSON\noutput. In general, code running during init should not log.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fixed #35744 -- Relabelled external aliases of combined queries.\n\nJust like normal queries, combined queries' outer references might fully\r\nresolve before their reference is assigned its final alias.\r\n\r\nRefs #29338.\r\n\r\nThanks Antony_K for the report and example, and thanks Mariusz Felisiak\r\nfor the review.",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[XPU] Add periodic run for xpu worklfow (#156698)\n\nEnable XPU periodic testing in xpu.yml workflow directly. It works for https://github.com/pytorch/pytorch/issues/114850.\nPull Request resolved: https://github.com/pytorch/pytorch/pull/156698\nApproved by: https://github.com/atalman, https://github.com/huydhn",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "registry: TestValidateMirror: improve coverage\n\nTest actual error returned, and test normalized value.\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>",
        "true_label": [
          0.0,
          1.0,
          0.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(ext/node): rewrite SQLite named parameter handing (#28197)\n\nAllow bare named params and handle invalid param name. Also adds\n`StatementSync#setAllowBareNamedParameters`\n\nFixes https://github.com/denoland/deno/issues/28183",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Prevent recursion on CALL_ONCE op\n\nCalling the same subgraph recursively via a CALL_ONCE op creates an infinite recursion that causes a stack overflow.\nAdded a check so that the same subgraph cannot call itself via a CALL_ONCE op.\n\nPiperOrigin-RevId: 765251354",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Update ml_dtypes to 0.5.1 to align with JAX and TensorFlow\n\nSeveral \"new\" python types in XLA types.h use `std::optional<nanobind::object>`.\nJAX and TF already switched to ml-dtypes 0.5.0+.\nNow we can remove `std::optional` usage in XLA `types.h` for these types.\nBecause of XLA GitHib CI workflows and JAX GitHub CI we should do XLA types.h refactoring using the following approach.\n\nxla/python/types.h uses JAX_IFRT_VERSION_NUMBER to determine how new types are defined:\n- If `JAX_IFRT_VERSION_NUMBER < 11`, the new types are declared in the old way as `std::optional<nanobind::object>`\n- If `JAX_IFRT_VERSION_NUMBER >= 11`, the new types are declared directly as `nanobind::object` (aligning with the convention used for other types)\n\nNext steps:\n1. Update JAX_IFRT_VERSION_NUMBER version from 10 to 11. (After JAX github has this change merged)\n\n2. Once JAX updates XLA_COMMIT_ID to newer version (in 1-2 days) I will open cleanup change to remove `#if JAX_IFRT_VERSION_NUMBER >= 11` statements from xla `types.h` and jaxlib `py_values.cc`\n\nPiperOrigin-RevId: 775507036",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Allow `IO#close` to interrupt IO operations on fibers using `fiber_interrupt` hook. (#12839)",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "fix(ext/canvas): handle integer overflow in `createImageBitmap` (#28764)\n\nfixes https://github.com/denoland/deno/issues/28732",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Allow for setting dense weight optimizer in TF recommendation model. Also sets\nexplicit output shape when building embedding FeatureConfig.\n\nPiperOrigin-RevId: 564791648",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "basic compile support for grouped_mm (#153384)\n\ngrouped_mm is used in torchtitan, this adds just enough support in compile to allow inductor to lower it as a fallback kernel. I imagine that at some point in the future it may be valuable to get inductor to support templating grouped_mm, although this PR just provides basic support. cc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @ipiszy @chenyang78 @kadeng @muchulee8 @amjames @chauhang @aakhundov @ngimel @eellison\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/153384\nApproved by: https://github.com/eellison",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Wheels for win_arm64 (#61463)\n\n* Update wheels.yml\n\nAdd win_arm64\n\n* add test workflow\n\n* doing another way\n\n* trying to fix cibuildwheel\n\n* another try\n\n* .\n\n* .\n\n* .\n\n* debug path\n\n* .\n\n* .\n\n* .\n\n* .\n\n* .\n\n* .\n\n* .\n\n* .\n\n* .\n\n* .\n\n* .\n\n* test minimal changes\n\n* .\n\n* delete test file\n\n* .\n\n* .\n\n* revert ubuntu version\n\n* test arm build\n\n* uncomment platforms\n\n* get ubuntu back for manylinux\n\n* remove comment\n\n* line ending?\n\n* Revert \"line ending?\"\n\nThis reverts commit f9aa3a62b9364a90ee6ef4f20f5dadee3c005b24.\n\n* execute install delvewheel for all win plats\n\n* new line at the end?\n\n* addressing comments",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #35838 from hashicorp/liamcervante/ephemeral-outputs\n\nstacks: fix tests broken now that ephemeral outputs aren't allowed",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #131425 from carlory/follow-up-128810\n\nRemove deprecated scheduler cache metrics",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "libnet/osl: independent OTel trace for advertiseAddrs\n\nSince commit `eaa84bc`, when a container joins a network, we broadcast\nunsolicited ARP/NAs to other containers connected to that network. The\ninitial advertisement is sent synchronously, and then remaining\nadvertisements (by default, 2) are sent asynchronously at a regular\ninterval (by default, 1 second).\n\nAn OTel span records the time spent sending subsequent advertisements,\nbut it's attached to the parent span `libnetwork.osl.AddInterface` so it\naffects the overall latency reported by the trace.\n\nThe real latency (i.e. excluding the latency of that asynchronous\nprocess), is pretty much what CLI users perceive, so it's an important\nmeasure. It's available on the top-most span in the trace, but limiting\nthe trace to the real time taken by the Engine to process the HTTP\nrequest seems better.\n\nWith this change, the initial advertisement is now tracked by a\ndedicated span, and a new independent trace (containing a single span)\nis created and linked to the 'initial' span / HTTP trace.\n\nSigned-off-by: Albin Kerouanton <albinker@gmail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "refactor: allow deno_permissions to compile to wasm32-unknown-unknown (#29487)",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Merge pull request #132063 from yongruilin/metric_fix-race\n\nfix(metric): prevent data race in metric LabelValueAllowList initialization",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Fixed #35648 -- Raised NotImplementedError in SafeString.__add__ for non-string RHS.\n\nThis change ensures SafeString addition operations handle non-string RHS\nproperly, allowing them to implement __radd__ for better compatibility.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "hack: fix KUBE_RACE in benchmark-dockerized.sh\n\nThis fixes the following issue in ci-benchmark-scheduler-perf-master:\n\n    malformed import path \" \": invalid char ' '\n\n    FAIL\t  [setup failed]\n\nSetting the non-empty string with just a space was broken, the right way to\ndisable the race detector is with an empty KUBE_RACE variable. This worked\nbefore when test-integration.sh unconditionally overwrote the KUBE_RACE\nvariable and stopped working when 6cb1488 started to keep whatever was\nset by the caller.\n\nThis then caused an empty string to be passed as additional parameter to \"go\ntest\".",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Improve containers lifecycle test output parsing\n\nThis should fix the following test when running it with CRI-O:\n\n```\n[It] [sig-node] [Feature:SidecarContainers] [Serial] Containers\nLifecycle when A node running restartable init containers reboots should\nrestart the containers in right order with the proper phase after the\nnode reboot\n```\n\nThe issue is that we have prefixed \"unable to retrieve container logs\nfor \u2026\" outputs in the message to be parsed. We now skip that part and\nleave the current behavior untouched.\n\nSigned-off-by: Sascha Grunert <sgrunert@redhat.com>",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Add Dia model (#38405)\n\n* add dia model\n\n* add tokenizer files\n\n* cleanup some stuff\n\n* brut copy paste code\n\n* rough cleanup of the modeling code\n\n* nuke some stuff\n\n* more nuking\n\n* more cleanups\n\n* updates\n\n* add mulitLayerEmbedding vectorization\n\n* nits\n\n* more modeling simplifications\n\n* updates\n\n* update rope\n\n* update rope\n\n* just fixup\n\n* update configuration files\n\n* more cleanup!\n\n* default config values\n\n* update\n\n* forgotten comma\n\n* another comma!\n\n* update, more cleanups\n\n* just more nits\n\n* more config cleanups\n\n* time for the encoder\n\n* fix\n\n* sa=mall nit\n\n* nits\n\n* n\n\n* refacto a bit\n\n* cleanup\n\n* update cv scipt\n\n* fix last issues\n\n* fix last nits\n\n* styling\n\n* small fixes\n\n* just run 1 generation\n\n* fixes\n\n* nits\n\n* fix conversion\n\n* fix\n\n* more fixes\n\n* full generate\n\n* ouf!\n\n* fixes!\n\n* updates\n\n* fix\n\n* fix cvrt\n\n* fixup\n\n* nits\n\n* delete wrong test\n\n* update\n\n* update\n\n* test tokenization\n\n* let's start changing things bit by bit - fix encoder step\n\n* removing custom generation, moving to GenerationMixin\n\n* add encoder decoder attention masks for generation\n\n* mask changes, correctness checked against ad29837 in dia repo\n\n* refactor a bit already --> next cache\n\n* too important not to push :)\n\n* minimal cleanup + more todos\n\n* make main overwrite modeling utils\n\n* add cfg filter & eos filter\n\n* add eos countdown & delay pattern\n\n* update eos countdown\n\n* add max step eos countdown\n\n* fix tests\n\n* fix some things\n\n* fix generation with testing\n\n* move cfg & eos stuff to logits processor\n\n* make RepetitionPenaltyLogitsProcessor flexible\n\n- can accept 3D scores like (batch_size, channel, vocab)\n\n* fix input_ids concatenation dimension in GenerationMixin for flexibility\n\n* Add DiaHangoverLogitsProcessor and DiaExponentialDecayLengthPenalty classes; refactor logits processing in DiaForConditionalGeneration to utilize new configurations and improve flexibility.\n\n* Add stopping criteria\n\n* refactor\n\n* move delay pattern from processor to modeling like musicgen.\n\n- add docs\n- change eos countdown to eos delay pattern\n\n* fix processor & fix tests\n\n* refactor types\n\n* refactor imports\n\n* format code\n\n* fix docstring to pass ci\n\n* add docstring to DiaConfig & add DiaModel to test\n\n* fix docstring\n\n* add docstring\n\n* fix some bugs\n\n* check\n\n* porting / merging results from other branch - IMPORTANT: it very likely breaks generation, the goal is to have a proper forward path first\n\n* experimental testing of left padding for first channel\n\n* whoops\n\n* Fix merge to make generation work\n\n* fix cfg filter\n\n* add position ids\n\n* add todos, break things\n\n* revert changes to generation --> we will force 2d but go 3d on custom stuff\n\n* refactor a lot, change prepare decoder ids to work with left padding (needs testing), add todos\n\n* some first fixes to get to 10. in generation\n\n* some more generation fixes / adjustment\n\n* style + rope fixes\n\n* move cfg out, simplify a few things, more todos\n\n* nit\n\n* start working on custom logit processors\n\n* nit\n\n* quick fixes\n\n* cfg top k\n\n* more refactor of logits processing, needs a decision if gen config gets the new attributes or if we move it to config or similar\n\n* lets keep changes to core code minimal, only eos scaling is questionable atm\n\n* simpler eos delay logits processor\n\n* that was for debugging :D\n\n* proof of concept rope\n\n* small fix on device mismatch\n\n* cfg fixes + delay logits max len\n\n* transformers rope\n\n* modular dia\n\n* more cleanup\n\n* keep modeling consistently 3D, generate handles 2D internally\n\n* decoder starts with bos if nothing\n\n* post processing prototype\n\n* style\n\n* lol\n\n* force sample / greedy + fixes on padding\n\n* style\n\n* fixup tokenization\n\n* nits\n\n* revert\n\n* start working on dia tests\n\n* fix a lot of tests\n\n* more test fixes\n\n* nit\n\n* more test fixes + some features to simplify code more\n\n* more cleanup\n\n* forgot that one\n\n* autodocs\n\n* small consistency fixes\n\n* fix regression\n\n* small fixes\n\n* dia feature extraction\n\n* docs\n\n* wip processor\n\n* fix processor order\n\n* processing goes brrr\n\n* transpose before\n\n* small fix\n\n* fix major bug but needs now a closer look into the custom processors esp cfg\n\n* small thing on logits\n\n* nits\n\n* simplify indices and shifts\n\n* add simpler version of padding tests back (temporarily)\n\n* add logit processor tests\n\n* starting tests on processor\n\n* fix mask application during generation\n\n* some fixes on the weights conversion\n\n* style + fixup logits order\n\n* simplify conversion\n\n* nit\n\n* remove padding tests\n\n* nits on modeling\n\n* hmm\n\n* fix tests\n\n* trigger\n\n* probably gonna be reverted, just a quick design around audio tokenizer\n\n* fixup typing\n\n* post merge + more typing\n\n* initial design for audio tokenizer\n\n* more design changes\n\n* nit\n\n* more processor tests and style related things\n\n* add to init\n\n* protect import\n\n* not sure why tbh\n\n* add another protect\n\n* more fixes\n\n* wow\n\n* it aint stopping :D\n\n* another missed type issue\n\n* ...\n\n* change design around audio tokenizer to prioritize init and go for auto - in regards to the review\n\n* change to new causal mask function + docstrings\n\n* change ternary\n\n* docs\n\n* remove todo, i dont think its essential tbh\n\n* remove pipeline as current pipelines do not fit in the current scheme, same as csm\n\n* closer to wrapping up the processor\n\n* text to audio, just for demo purposes (will likely be reverted)\n\n* check if it's this\n\n* save audio function\n\n* ensure no grad\n\n* fixes on prefixed audio, hop length is used via preprocess dac, device fixes\n\n* integration tests (tested locally on a100) + some processor utils / fixes\n\n* style\n\n* nits\n\n* another round of smaller things\n\n* docs + some fixes (generate one might be big)\n\n* msytery solved\n\n* small fix on conversion\n\n* add abstract audio tokenizer, change init check to abstract class\n\n* nits\n\n* update docs + fix some processing :D\n\n* change inheritance scheme for audio tokenizer\n\n* delete dead / unnecessary code in copied generate loop\n\n* last nits on new pipeline behavior (+ todo on tests) + style\n\n* trigger\n\n---------\n\nCo-authored-by: Arthur Zucker <arthur.zucker@gmail.com>\nCo-authored-by: Arthur <48595927+ArthurZucker@users.noreply.github.com>\nCo-authored-by: Vasqu <antonprogamer@gmail.com>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[ci] Don't fail on cache miss (#32690)\n\nPartially reverts #32686.\n\nPR caches inherit from caches generated in `main`. If it cannot find\nthat cache, it will create one scoped to just that PR (and PRs that\ninherit from it).\n\nThere is an edge case where cache eviction can happen in the middle of a\ntest run. If cache eviction removes a `main` cache, child jobs that\ndepend on it will start failing because of the `fail-on-cache-miss`\nsetting.\n\nThis PR reverts the default behavior. If this happens, the workflow will\nstill continue in slow mode where it will `yarn install` child jobs\ninstead of reusing from cache. This is slower but will at least allow\nworkflows to continue.\n\nAdditionally I added restore keys so that we can fallback to other\ncaches if present so `yarn install` doesn't need to start over from\nscratch.",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "ARC: unwind: Use built-in sort swap to reduce code size and improve performance\n\nThe custom swap function used in sort() was identical to the default\nbuilt-in sort swap. Remove the custom swap function and passes NULL to\nsort(), allowing it to use the default swap function.\n\nThis change reduces code size and improves performance, particularly when\nCONFIG_MITIGATION_RETPOLINE is enabled. With RETPOLINE mitigation, indirect\nfunction calls incur significant overhead, and using the default swap\nfunction avoids this cost.\n\n$ ./scripts/bloat-o-meter ./unwind.o.old ./unwind.o.new\nadd/remove: 0/1 grow/shrink: 0/1 up/down: 0/-22 (-22)\nFunction                                     old     new   delta\ninit_unwind_hdr.constprop                    544     540      -4\nswap_eh_frame_hdr_table_entries               18       -     -18\nTotal: Before=4410, After=4388, chg -0.50%\n\nSigned-off-by: Yu-Chun Lin <eleanor15x@gmail.com>\nSigned-off-by: Vineet Gupta <vgupta@kernel.org>",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "[Modules] Allow implicit conversions when loading interfaces with invalid os versions (#82228)\n\nInitially, the compiler rejected building dependencies that contained OS\nversions in an invalid range. However, this happens to be quite\ndisruptive, so instead allow it and request that these versions be\nimplicitly bumped based on what `llvm::Triple::getCanonicalVersionForOS`\ncomputes.\n\nresolves: rdar://153205856",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Allow Passing Blob/File/MediaSource/MediaStream to src of <img>, <video> and <audio> (#32828)\n\nBehind the `enableSrcObject` flag. This is revisiting a variant of what\nwas discussed in #11163.\n\nInstead of supporting the [`srcObject`\nproperty](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/srcObject)\nas a separate name, this adds an overload of `src` to allow objects to\nbe passed. The DOM needs to add separate properties for the object forms\nsince you read back but it doesn't make sense for React's write-only API\nto do that. Similar to how we'll like add an overload for\n`popoverTarget` instead of calling it `popoverTargetElement` and how\n`style` accepts an object and it's not `styleObject={{...}}`.\n\nThere are a number of reason to revisit this.\n\n- It's just way more convenient to have this built-in and it makes\nconceptual sense. We typically support declarative APIs and polyfill\nthem when necessary.\n- RSC supports Blobs and by having it built-in you don't need a Client\nComponent wrapper to render it where as doing it with effects would\nrequire more complex wrappers. By picking Blobs over base64,\nclient-navigations can use the more optimized binary encoding in the RSC\nprotocol.\n- The timing aspect of coordinating it with Suspensey images and image\ndecoding is a bit tricky to get right because if you set it in an effect\nit's too late because you've already rendered it.\n- SSR gets complicated when done in user space because you have to\nhandle both branches. Likely with `useSyncExternalStore`.\n- By having it built-in we could optimize the payloads shared between\nRSC payloads embedded in the HTML and data URLs.\n\nThis does not support objects for `<source src>` nor `<img srcset>`.\nThose don't really have equivalents in the DOM neither. They're mainly\nfor picking an option when you don't know programmatically. However, for\nthis use case you're really better off picking a variant before\ngenerating the blobs.\n\nWe may support Response objects in the future too as per\nhttps://github.com/whatwg/fetch/issues/49",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "added fast image processor for ZoeDepth and expanded tests accordingly (#38515)\n\n* added fast image processor for ZoeDepth and expanded tests accordingly\n\n* added fast image processor for ZoeDepth and expanded tests accordingly, hopefully fixed repo consistency issue too now\n\n* final edits for zoedept fast image processor\n\n* final minor edit for zoedepth fast imate procesor",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "Revert \"Handle owned frame buffers when zero-copy is enabled in MFVEA\"\n\nThis reverts commit 7301e6efe7a05aa2a25d24626d62d0a27a2f32af.\n\nReason for revert:\nLUCI Bisection has identified this change as the cause of a test failure. See the analysis: https://ci.chromium.org/ui/p/chromium/bisection/test-analysis/b/5839715321249792\n\nSample build with failed test: https://ci.chromium.org/b/8711499726065026481\nAffected test(s):\n[ninja://third_party/blink/renderer/platform:blink_platform_unittests/RTCVideoEncoderEncodeTest.NoSoftwareFallbackOnMappableNativeInput](https://ci.chromium.org/ui/test/chromium/ninja:%2F%2Fthird_party%2Fblink%2Frenderer%2Fplatform:blink_platform_unittests%2FRTCVideoEncoderEncodeTest.NoSoftwareFallbackOnMappableNativeInput?q=VHash%3Ae647c1a343e3c4c1)\n\nIf this is a false positive, please report it at http://b.corp.google.com/createIssue?component=1199205&description=Analysis%3A+https%3A%2F%2Fci.chromium.org%2Fui%2Fp%2Fchromium%2Fbisection%2Ftest-analysis%2Fb%2F5839715321249792&format=PLAIN&priority=P3&title=Wrongly+blamed+https%3A%2F%2Fchromium-review.googlesource.com%2Fc%2Fchromium%2Fsrc%2F%2B%2F6652166&type=BUG\n\nOriginal change's description:\n> Handle owned frame buffers when zero-copy is enabled in MFVEA\n>\n> When a frame with an owned native storage type is passed to MFVEA which\n> is backed up by a GPU buffer, the encoder falls back to software\n> implementation. This fix converts input frame to non-native buffer type\n> suitable for MFVEA processing.\n>\n> Bug: 424208795\n> Change-Id: I5c4a8d81f336138d66b2f0c376300a7abe340fb9\n> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6652166\n> Reviewed-by: Hirokazu Honda <hiroh@chromium.org>\n> Reviewed-by: Eugene Zemtsov <eugene@chromium.org>\n> Commit-Queue: Mosa Morosev <mosamorosev@microsoft.com>\n> Reviewed-by: Jianlin Qiu <jianlin.qiu@intel.com>\n> Cr-Commit-Position: refs/heads/main@{#1476778}\n>\n\nBug: 424208795\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nChange-Id: I663eb8145a079433ebe57e67af6533fb2ba05fb1\nReviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6658694\nOwners-Override: Fahad Mansoor <fahadmansoor@google.com>\nCommit-Queue: Fahad Mansoor <fahadmansoor@google.com>\nReviewed-by: Sergey Poromov <poromov@chromium.org>\nReviewed-by: Fahad Mansoor <fahadmansoor@google.com>\nReviewed-by: Ilya Nikolaevskiy <ilnik@chromium.org>\nCr-Commit-Position: refs/heads/main@{#1477178}",
        "true_label": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      },
      {
        "text": "ESQL: Extend `RENAME` syntax to allow a `new = old` syntax (#129212)\n\nThis extends RENAME's grammar to allow a new syntax: `| RENAME new_name\n= old_name` This is supported along the existing `... old_name AS\nnew_name` syntax.\n\nCloses #129208",
        "true_label": [
          0.0,
          0.0,
          1.0,
          0.0
        ],
        "predicted_label": [
          1,
          0,
          0,
          0
        ]
      }
    ]
  }
}